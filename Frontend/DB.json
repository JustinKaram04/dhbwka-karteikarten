{
    "topics": [
      {
        "Id": "topic1",
        "name": "Introduction to TypeScript",
        "description": "A beginner-friendly overview of TypeScript and its features.",
        "subtopics": [
          "What is TypeScript?",
          "Setting up a TypeScript project",
          "Basic TypeScript syntax",
          "Data types in TypeScript"
        ]
      },
      {
        "Id": "topic2",
        "name": "Advanced TypeScript Concepts",
        "description": "Exploring advanced features of TypeScript, including generics, decorators, and more.",
        "subtopics": [
          "Generics",
          "Decorators",
          "Modules and namespaces",
          "Working with external libraries"
        ]
      },
      {
        "Id": "topic3",
        "name": "TypeScript and React",
        "description": "Using TypeScript with React to build type-safe and maintainable user interfaces.",
        "subtopics": [
          "Setting up a React project with TypeScript",
          "Typing React components",
          "Working with props and state",
          "Using hooks with TypeScript"
        ]
      }
    ],
    "flashcards": [
      {
          "Id": "flashcard1",
          "subtopic": "What is TypeScript?",
          "question": "What is TypeScript?",
          "answer": "TypeScript is a superset of JavaScript that adds optional static typing.",
          "istoggled": false,
          "learningProgress": 0.2
      },
        {
          "Id": "flashcard2",
          "subtopic": "Setting up a TypeScript project",
          "question": "What command initializes a new TypeScript project?",
          "answer": "npx tsc --init",
          "istoggled": false,
          "learningProgress": 0.5
      },
      {
          "Id": "flashcard3",
          "subtopic": "Basic TypeScript syntax",
          "question": "How do you declare a variable with a specific type in TypeScript?",
          "answer": "const variableName: Type = value;",
          "istoggled": true,
          "learningProgress": 0.8
      },
      {
          "Id": "flashcard4",
          "subtopic": "Data types in TypeScript",
          "question": "Name three primitive data types in TypeScript.",
          "answer": "number, string, boolean",
          "istoggled": false,
          "learningProgress": 0.3
      },
      {
          "Id": "flashcard5",
          "subtopic": "Generics",
          "question": "What are generics in TypeScript?",
          "answer": "Generics allow you to write reusable code that can work with different types.",
          "istoggled": true,
          "learningProgress": 0.9
      },
      {
          "Id": "flashcard6",
          "subtopic": "Decorators",
          "question": "What are decorators used for in TypeScript?",
          "answer": "Decorators provide a way to add metadata to classes, methods, properties, or parameters.",
          "istoggled": false,
          "learningProgress": 0.1
      },
      {
          "Id": "flashcard7",
          "subtopic": "Modules and namespaces",
          "question": "What is the purpose of modules in TypeScript?",
          "answer": "Modules are used to organize code into reusable units.",
          "istoggled": true,
          "learningProgress": 0.6
      },
      {
          "Id": "flashcard8",
          "subtopic": "Setting up a React project with TypeScript",
          "question": "What is the best way to create a new react project with typescript?",
          "answer": "npx create-react-app my-app --template typescript",
          "istoggled": false,
          "learningProgress": 0.4
      },
      {
          "Id": "flashcard9",
          "subtopic": "Typing React components",
          "question": "How can you define the type for the props of a React component in TypeScript?",
          "answer": "By defining an interface or type for the props.",
          "istoggled": true,
          "learningProgress": 0.7
      },
      {
          "Id": "flashcard10",
          "subtopic": "Using hooks with TypeScript",
          "question": "How should you type the useState hook in a React component?",
          "answer": "const [state, setState] = useState<Type>(initialValue);",
          "istoggled": false,
          "learningProgress": 0.25
      }
    ]
}