var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddItemComponent.html",[0,0.324,1,0.902]],["body/components/AddItemComponent.html",[0,0.432,1,1.328,2,1.092,3,0.187,4,0.187,5,0.798,6,0.933,7,0.798,8,0.798,9,0.159,10,5.172,11,3.627,12,2.046,13,0.739,14,2.002,15,1.714,16,1.941,17,3.092,18,1.092,19,0.665,20,1.18,21,1.642,22,2.297,23,1.38,24,4.297,25,1.18,26,3.611,27,0.187,28,0.409,29,4.297,30,4.297,31,4.297,32,0.731,33,4.599,34,0.87,35,4.279,36,5.305,37,4.748,38,3.026,39,5.067,40,5.067,41,5.067,42,5.067,43,4.297,44,4.297,45,3.026,46,0.375,47,0.031,48,0.957,49,1.165,50,1.165,51,3.092,52,1.138,53,2.442,54,1.734,55,1.638,56,2.333,57,2.122,58,2.442,59,3.141,60,2.442,61,2.352,62,3.611,63,3.67,64,0.744,65,2.442,66,4.748,67,2.442,68,4.748,69,3.611,70,2.442,71,3.6,72,2.442,73,1.93,74,1.01,75,3.611,76,2.352,77,3.611,78,2.442,79,3.611,80,1.134,81,0.961,82,1.457,83,2.442,84,3.026,85,2.442,86,3.611,87,1.93,88,2.442,89,3.611,90,3.026,91,1.111,92,2.442,93,2.442,94,2.442,95,0.38,96,0.863,97,2.532,98,3.026,99,0.276,100,1.097,101,0.187,102,0.309,103,1.011,104,2.442,105,2.442,106,2.352,107,3.611,108,3.611,109,0.537,110,2.442,111,1.097,112,2.442,113,3.611,114,2.442,115,2.442,116,2.046,117,1.815,118,1.59,119,3.026,120,2.196,121,2.028,122,2.321,123,1.941,124,1.642,125,2.238,126,1.495,127,1.495,128,1.642,129,2.102,130,1.642,131,0.933,132,2.028,133,1.766,134,1.93,135,0.933,136,0.863,137,1.097,138,0.933,139,0.933,140,0.933,141,1.305,142,1.59,143,1.766,144,1.766,145,1.642,146,1.194,147,1.435,148,1.59,149,1.38,150,1.38,151,1.656,152,0.933,153,1.966,154,2.102,155,1.623,156,2.64,157,2.64,158,2.442,159,2.122,160,2.442,161,2.046,162,1.18,163,1.011,164,1.785,165,1.59,166,2.122,167,2.442,168,1.194,169,1.194,170,2.046,171,2.046,172,2.046,173,1.785,174,1.815,175,1.642,176,2.046,177,1.305,178,1.305,179,1.38,180,1.59,181,1.785,182,1.766,183,1.93,184,1.766,185,2.102,186,1.785,187,1.194,188,1.495,189,1.59,190,2.442,191,1.011,192,1.194,193,1.38,194,2.122,195,2.122,196,1.305,197,2.102,198,2.798,199,0.933,200,1.785,201,2.046,202,1.305,203,1.785,204,2.046,205,2.046,206,0.798,207,1.18,208,1.18,209,0.798,210,0.798,211,0.798,212,0.683,213,0.798,214,0.683,215,0.798,216,0.683,217,0.798,218,0.798,219,0.683,220,0.631,221,0.798,222,0.683,223,0.798,224,0.683,225,0.798,226,0.683,227,0.798,228,0.683,229,0.798,230,0.683,231,0.798,232,0.683,233,0.798,234,0.683,235,0.739,236,0.798,237,0.798,238,0.016,239,0.016]],["title/components/AppComponent.html",[0,0.324,212,0.902]],["body/components/AppComponent.html",[0,0.577,1,1.193,2,1.597,3,0.326,4,0.326,5,1.394,7,1.394,8,1.394,9,0.278,13,1.29,14,2.168,15,1.856,16,1.394,18,1.597,19,0.817,20,1.726,25,1.726,27,0.326,28,0.598,46,0.278,47,0.031,48,0.724,49,0.863,50,0.863,52,0.792,64,0.741,95,0.506,99,0.483,101,0.326,102,0.539,123,1.959,162,1.394,206,1.394,207,1.726,208,1.726,209,1.394,210,1.394,211,1.394,212,1.677,213,1.394,214,1.193,215,1.394,216,1.193,217,1.394,218,1.394,219,1.193,220,1.103,221,1.394,222,1.193,223,1.394,224,1.193,225,1.394,226,1.193,227,1.394,228,1.193,229,1.394,230,1.193,231,1.394,232,1.677,233,1.394,234,1.193,235,1.29,236,1.394,237,1.394,238,0.024,239,0.024,240,3.572,241,2.018,242,5.734,243,5.279,244,4.423,245,5.279,246,5.734,247,5.279,248,4.264,249,1.63,250,4.264,251,2.777,252,3.572]],["title/guards/AuthGuard.html",[253,2.099,254,2.356]],["body/guards/AuthGuard.html",[3,0.332,4,0.332,9,0.283,19,0.671,27,0.332,32,1.08,34,1.08,46,0.283,47,0.031,52,0.99,64,0.608,81,0.877,91,1.121,95,0.51,99,0.491,101,0.332,102,0.548,109,1.174,238,0.024,239,0.024,241,2.039,249,1.657,253,2.823,254,3.899,255,4.335,256,3.632,257,6.384,258,1.492,259,3.169,260,2.13,261,2.919,262,4.335,263,0.954,264,0.736,265,2.708,266,4.335,267,2.039,268,1.273,269,0.805,270,1.613,271,4.469,272,4.335,273,3.169,274,1.888,275,2.039,276,2.825,277,4.335,278,1.795,279,2.547,280,2.823,281,2.547,282,1.948,283,2.12,284,4.335,285,1.948,286,4.335,287,3.169,288,2.823,289,2.317,290,4.335,291,2.547,292,3.632,293,1.795,294,1.532,295,1.657,296,2.547,297,3.632,298,3.632,299,4.335,300,4.335,301,5.334,302,4.335,303,3.169,304,2.317,305,2.12,306,1.948,307,2.547,308,4.335]],["title/interceptors/AuthInterceptor.html",[309,2.356,310,2.356]],["body/interceptors/AuthInterceptor.html",[3,0.306,4,0.306,9,0.26,27,0.306,32,1.025,46,0.33,47,0.031,52,0.941,64,0.71,74,1.116,80,1.209,81,0.808,95,0.517,99,0.452,101,0.306,102,0.505,109,1.115,238,0.023,239,0.023,258,1.116,259,2.917,260,2.068,263,1.115,264,0.86,265,2.629,268,1.328,269,0.741,273,2.917,274,1.304,275,1.936,276,3.066,282,1.793,285,1.793,289,2.974,291,2.345,295,1.525,297,3.344,298,3.344,304,2.133,309,3.702,310,3.702,311,3.991,312,3.344,313,5.564,314,3.991,315,3.991,316,5.852,317,2.721,318,5.852,319,3.991,320,5.065,321,2.714,322,3.991,323,1.793,324,3.991,325,3.991,326,3.991,327,1.819,328,3.991,329,2.917,330,3.991,331,3.991,332,5.564,333,3.991,334,1.952,335,3.991,336,1.41,337,3.991,338,3.991,339,2.345,340,3.991,341,3.991,342,3.991,343,2.917,344,3.991,345,3.991,346,2.917,347,1.656,348,3.991,349,3.298,350,1.952,351,2.133,352,3.991,353,1.952,354,2.976,355,2.599,356,3.991,357,1.793,358,3.991,359,3.991,360,3.344,361,3.991,362,6.04,363,3.991,364,3.991,365,3.991,366,1.79,367,1.952,368,3.991,369,3.991,370,3.991,371,5.065,372,2.133,373,3.991,374,3.991,375,3.991,376,3.991,377,3.991,378,3.991,379,1.952,380,3.991,381,3.991,382,3.344,383,3.991,384,3.991,385,2.917,386,3.991]],["title/injectables/AuthService.html",[260,1.139,268,0.769]],["body/injectables/AuthService.html",[3,0.254,4,0.254,9,0.216,19,0.693,27,0.254,28,0.507,32,0.907,34,1.187,46,0.355,47,0.031,48,1.018,49,1.028,50,1.028,52,1.132,55,1.421,64,0.713,74,1.421,80,1.213,81,1.102,82,1.159,91,1.159,95,0.481,99,0.375,101,0.254,102,0.419,103,1.855,109,1.198,137,1.488,238,0.02,239,0.02,241,1.713,258,0.926,260,1.584,263,1.118,264,0.863,265,2.282,267,1.713,268,1.213,269,0.832,270,1.002,274,1.465,276,3.126,278,1.371,279,1.946,280,2.157,281,1.946,283,1.619,289,1.77,293,1.855,294,1.584,306,2.555,321,2.739,323,2.014,327,1.082,334,1.619,336,1.584,347,1.465,349,2.157,350,2.192,353,1.619,366,1.17,387,1.77,388,2.157,389,3.713,390,3.308,391,3.979,392,3.979,393,3.703,394,3.755,395,2.421,396,2.909,397,3.311,398,2.715,399,3.311,400,2.174,401,3.276,402,3.341,403,3.311,404,2.909,405,3.311,406,3.276,407,3.198,408,3.311,409,2.918,410,3.311,411,3.276,412,3.276,413,2.633,414,3.276,415,3.276,416,3.311,417,3.276,418,3.311,419,2.395,420,2.421,421,2.157,422,2.421,423,2.157,424,2.421,425,2.157,426,1.946,427,2.421,428,2.421,429,1.488,430,1.77,431,2.421,432,2.421,433,2.192,434,2.157,435,2.395,436,2.395,437,3.276,438,1.946,439,2.633,440,2.421,441,2.421,442,2.421,443,2.421,444,2.421,445,1.619,446,1.266,447,2.421,448,1.946,449,2.157,450,1.266,451,2.918,452,2.421,453,2.421,454,2.421,455,2.421,456,2.157,457,2.421,458,2.157,459,3.276,460,2.421,461,1.946,462,2.421,463,1.77,464,2.421,465,1.619,466,2.395,467,2.421,468,1.371,469,2.421,470,2.421,471,2.157,472,2.633,473,2.421,474,2.421,475,2.421,476,2.421,477,2.157,478,2.157,479,2.421,480,2.421,481,2.157,482,2.157,483,1.002,484,1.619,485,2.421,486,1.488,487,2.421,488,2.157,489,1.77,490,2.421,491,2.421,492,1.17]],["title/interfaces/Credentials.html",[269,0.599,402,1.894]],["body/interfaces/Credentials.html",[3,0.281,4,0.281,9,0.239,19,0.568,27,0.281,28,0.543,34,0.971,46,0.313,47,0.031,48,1.081,55,1.496,74,1.342,80,1.276,82,0.949,91,1.241,95,0.501,99,0.415,101,0.281,102,0.464,103,1.519,109,1.248,137,1.648,238,0.022,239,0.022,241,1.834,260,1.296,265,2.156,267,1.402,268,1.276,269,0.891,270,1.11,274,1.568,276,3.084,278,1.519,279,2.155,280,2.389,281,2.155,283,1.794,289,1.961,293,1.986,294,1.695,306,2.402,321,2.644,323,2.156,327,1.199,334,1.794,336,1.695,347,1.568,349,2.389,350,1.794,353,1.794,366,1.296,388,2.389,389,2.682,390,2.389,391,3.507,392,2.682,393,3.124,396,2.564,398,2.564,400,2.167,401,2.682,402,3.331,404,2.564,406,2.682,407,2.819,409,2.389,411,2.682,412,2.682,413,2.155,414,2.682,415,2.682,417,2.682,419,2.564,420,2.682,421,2.389,422,2.682,423,2.389,424,2.682,425,2.389,426,2.155,427,2.682,428,2.682,429,1.648,430,1.961,431,2.682,432,2.682,433,2.346,434,2.389,435,3.145,436,3.145,437,3.507,438,2.155,439,2.819,440,2.682,441,2.682,442,2.682,443,2.682,444,2.682,445,1.794,446,1.402,447,2.682,448,2.155,449,2.389,450,1.402,451,3.124,452,2.682,453,2.682,454,2.682,455,2.682,456,2.389,457,2.682,458,2.389,459,3.507,460,2.682,461,2.155,462,2.682,463,1.961,464,2.682,465,1.794,466,2.564,467,2.682,468,1.519,469,2.682,470,2.682,471,2.389,472,2.819,473,2.682,474,2.682,475,2.682,476,2.682,477,2.389,478,2.389,479,2.682,480,2.682,481,2.389,482,2.389,483,1.11,484,1.794,485,2.682,486,1.648,487,2.682,488,2.389,489,1.961,490,2.682,491,2.682,492,1.296,493,1.648]],["title/injectables/DarkModeService.html",[268,0.769,494,2.099]],["body/injectables/DarkModeService.html",[3,0.299,4,0.299,9,0.255,15,1.092,19,0.852,27,0.299,28,0.565,32,1.011,34,1.291,46,0.379,47,0.031,48,0.848,49,1.011,50,1.011,52,1.14,55,1.397,64,0.547,80,1.315,81,1.011,82,1.501,91,1.291,95,0.345,99,0.442,101,0.299,102,0.494,137,2.244,238,0.023,239,0.023,241,1.909,258,1.092,263,0.859,264,0.663,268,1.192,274,1.276,275,1.492,278,1.616,281,2.293,327,1.276,351,2.086,366,1.764,387,2.086,400,1.492,446,1.909,451,3.252,465,1.909,471,3.252,494,3.252,495,5.227,496,4.56,497,3.27,498,5.506,499,5.506,500,5.804,501,5.804,502,4.863,503,4.993,504,5.804,505,4.993,506,3.903,507,3.903,508,3.903,509,4.863,510,2.244,511,3.903,512,5.506,513,3.903,514,3.27,515,3.27,516,3.903,517,5.506,518,3.903,519,3.903,520,3.903,521,3.903,522,3.903,523,4.184,524,2.542,525,2.853,526,2.542,527,4.993,528,3.903,529,3.903,530,3.27,531,3.903,532,2.442,533,4.993,534,3.903,535,2.853,536,3.903,537,3.903,538,3.903,539,3.903,540,5.804,541,4.993,542,3.903,543,3.903,544,3.903,545,2.853,546,3.903,547,3.903,548,3.903,549,3.903,550,4.993,551,3.903,552,3.903,553,3.903]],["title/components/EditableCardComponent.html",[0,0.324,214,0.902]],["body/components/EditableCardComponent.html",[0,0.41,1,0.625,2,1.021,3,0.171,4,0.171,5,0.73,6,0.853,7,0.73,8,0.73,9,0.146,13,0.675,14,1.969,15,1.685,16,1.104,18,1.021,19,0.703,20,1.104,21,1.557,23,1.291,25,1.104,27,0.259,32,0.684,33,2.83,38,2.83,45,2.83,46,0.335,47,0.031,49,0.684,50,0.684,52,0.953,54,1.927,56,2.019,61,1.454,64,0.637,71,3.805,73,2.177,74,1.271,80,0.533,81,0.684,82,0.873,91,1.174,95,0.298,96,0.789,97,2.192,98,3.413,99,0.253,101,0.171,102,0.282,103,1.398,117,1.961,119,1.871,120,2.569,121,2.397,122,2.525,123,2.117,124,2.224,125,2.443,126,1.88,127,1.88,128,2.097,129,2.509,130,2.037,131,0.853,132,2.188,133,1.992,134,2.177,135,1.557,136,0.789,137,1.003,138,0.853,139,1.291,140,0.853,141,2.427,142,1.454,143,2.385,144,2.385,145,2.097,146,1.652,147,1.984,148,2.199,149,1.864,150,1.864,151,2.016,152,1.736,153,2.37,154,2.385,155,1.518,156,3.751,157,3.32,159,1.312,162,1.871,163,1.398,164,1.632,165,1.454,166,1.984,168,2.8,169,1.652,170,2.83,171,2.83,172,1.871,173,3.32,174,2.224,175,2.147,176,1.871,177,1.805,178,1.805,179,1.961,180,1.454,181,1.632,182,2.221,183,2.427,184,2.221,185,2.683,186,2.469,187,2.221,188,2.124,191,1.398,192,1.652,193,1.961,194,1.984,195,1.984,196,1.805,197,1.652,198,1.454,199,1.864,200,3.32,201,2.83,203,2.469,204,2.83,205,2.83,206,0.73,207,1.104,208,1.104,209,0.73,210,0.73,211,0.73,212,0.625,213,0.73,214,1.271,215,0.73,216,0.625,217,0.73,218,0.73,219,0.625,220,0.577,221,0.73,222,0.625,223,0.73,224,0.625,225,0.73,226,0.625,227,0.73,228,0.625,229,0.73,230,0.625,231,0.73,232,0.625,233,0.73,234,0.625,235,0.675,236,0.73,237,0.73,238,0.015,239,0.015,263,0.743,264,0.574,267,1.291,271,1.871,292,2.83,295,0.853,327,0.73,355,1.454,492,0.789,510,1.003,554,4.464,555,3.131,556,1.871,557,3.377,558,3.377,559,4.074,560,3.377,561,3.377,562,3.377,563,4.074,564,4.074,565,4.074,566,2.653,567,2.233,568,2.233,569,2.233,570,2.233,571,3.377,572,3.341,573,2.233,574,3.377,575,2.233,576,2.233,577,2.233,578,2.653,579,1.632,580,1.871,581,2.199,582,2.233,583,2.233,584,2.469,585,1.454,586,2.233,587,2.233,588,1.092,589,1.871,590,2.233,591,1.871,592,2.233,593,3.377,594,2.233,595,2.233,596,2.233,597,2.653,598,1.454,599,4.541,600,2.653,601,3.377,602,2.199,603,1.871,604,1.871,605,2.233,606,2.233,607,2.233,608,1.871,609,3.413,610,1.88,611,2.199,612,3.377,613,3.413,614,1.193,615,2.233,616,2.233,617,1.193,618,2.233,619,2.83,620,1.871,621,1.632,622,1.454,623,1.984,624,2.233,625,2.233,626,1.092,627,2.469,628,2.233,629,2.233]],["title/components/FlashcardPreviewComponent.html",[0,0.324,216,0.902]],["body/components/FlashcardPreviewComponent.html",[0,0.296,1,0.383,2,0.692,3,0.105,4,0.105,5,0.448,6,0.524,7,0.448,8,0.448,9,0.089,13,0.414,14,1.756,15,1.503,16,0.448,18,0.692,19,0.456,20,0.748,21,1.126,23,0.874,25,0.748,27,0.105,28,0.259,32,0.463,34,0.931,35,1.001,46,0.35,47,0.031,49,1.048,50,1.048,52,1.129,54,1.829,55,1.546,56,1.816,64,0.536,74,0.383,80,1.283,81,1.069,82,1.542,91,1.069,95,0.387,96,0.484,99,0.155,101,0.105,102,0.173,103,0.567,109,0.648,116,1.148,117,1.58,120,1.977,121,2.018,122,2.324,123,1.995,124,1.884,125,2.202,126,0.567,127,1.583,128,1.58,130,1.58,131,1.677,132,1.884,133,0.67,134,0.732,135,1.315,136,1.215,138,1.462,139,1.462,140,1.825,141,2.457,142,1.918,143,2.021,144,2.021,145,1.677,146,2.145,147,0.805,149,1.677,150,1.462,151,1.949,152,1.462,159,1.73,162,0.448,163,1.977,164,1.672,165,0.892,169,2.583,174,1.126,175,1.126,177,0.732,178,0.732,179,1.462,182,2.475,183,2.044,184,1.119,185,1.44,188,0.567,193,1.315,198,0.892,199,1.58,200,2.153,202,0.732,203,3.7,206,0.448,207,0.748,208,1.124,209,0.448,210,0.448,211,0.448,212,0.383,213,0.448,214,0.383,215,0.448,216,0.962,217,1.503,218,0.448,219,0.383,220,1.069,221,0.448,222,0.383,223,0.448,224,0.383,225,0.448,226,0.383,227,0.448,228,0.383,229,0.448,230,0.383,231,0.448,232,0.383,233,0.448,234,0.383,235,0.414,236,0.448,237,0.448,238,0.01,239,0.01,249,0.524,258,0.383,261,1.971,263,0.648,264,0.5,270,0.414,274,0.448,275,1.315,282,1.028,294,1.041,295,1.462,296,1.73,305,1.119,317,1.682,323,0.615,327,0.448,339,0.805,343,1.001,347,0.748,351,0.732,354,0.805,355,0.892,357,1.028,366,1.46,367,1.119,372,1.223,379,2.021,382,1.148,385,2.153,400,1.979,404,1.223,419,0.732,433,0.67,445,0.67,446,0.524,449,0.892,450,1.462,463,1.223,481,0.892,484,1.44,492,0.484,510,2.541,515,1.148,523,1.148,524,0.892,526,0.892,532,0.67,585,2.994,597,2.24,598,1.918,600,2.491,602,1.918,604,1.916,608,1.916,610,0.567,611,1.918,613,3.675,614,1.838,619,4.001,621,1.001,622,0.892,626,1.87,630,5.114,631,5.114,632,1.148,633,1.73,634,2.945,635,2.945,636,2.945,637,2.287,638,4.597,639,2.945,640,2.945,641,2.945,642,2.287,643,2.287,644,1.73,645,2.287,646,2.945,647,2.287,648,1.672,649,1.49,650,2.945,651,2.287,652,2.882,653,2.882,654,3.439,655,2.021,656,2.882,657,2.882,658,3.439,659,3.439,660,2.287,661,3.439,662,3.439,663,1.37,664,1.44,665,3.439,666,1.918,667,2.514,668,2.287,669,2.287,670,1.503,671,1.37,672,3.825,673,1.37,674,1.37,675,1.37,676,1.37,677,1.37,678,1.37,679,1.37,680,1.37,681,1.37,682,2.287,683,3.675,684,4.569,685,1.37,686,1.37,687,1.37,688,1.37,689,1.37,690,1.583,691,1.37,692,1.37,693,1.37,694,1.37,695,1.37,696,1.37,697,1.37,698,1.37,699,2.945,700,1.148,701,2.287,702,1.37,703,1.37,704,1.37,705,1.37,706,1.37,707,0.892,708,0.892,709,1.001,710,1.37,711,1.001,712,1.37,713,1.37,714,0.892,715,1.344,716,1.001,717,1.37,718,1.37,719,2.287,720,1.37,721,1.37,722,1.37,723,1.37,724,3.021,725,1.37,726,0.732,727,1.37,728,1.37,729,2.514,730,2.945,731,1.148,732,1.148,733,1.37,734,1.148,735,1.148,736,1.001,737,1.672,738,1.37,739,1.916,740,1.37,741,1.148,742,2.882,743,1.37,744,0.805,745,1.148,746,1.148,747,1.148,748,1.148,749,1.148,750,1.37,751,1.37,752,1.37,753,1.916,754,1.37,755,1.37,756,1.37,757,1.148,758,1.148,759,1.916,760,2.287,761,1.37,762,1.148,763,1.37,764,3.439,765,2.287,766,1.37,767,1.148,768,1.49,769,2.945,770,1.37,771,1.148,772,1.37,773,1.148,774,2.287,775,1.37,776,1.37,777,1.918,778,1.37,779,1.37,780,1.37,781,3.439,782,1.37,783,1.37,784,1.672,785,0.892,786,0.805,787,1.148,788,1.37,789,1.148,790,0.732,791,1.37,792,1.37,793,1.37,794,3.439,795,2.945,796,1.001,797,1.37,798,1.37,799,2.287,800,2.287,801,1.37,802,1.37,803,1.37,804,1.37,805,2.287,806,1.37,807,2.287,808,1.37,809,1.37,810,1.37,811,1.37,812,1.37,813,1.37,814,1.37,815,1.37,816,1.37,817,1.37,818,1.672,819,1.37,820,1.148,821,1.37,822,1.001,823,1.37,824,1.37,825,1.37,826,1.001,827,1.001,828,1.37,829,1.001,830,1.37,831,1.916,832,2.945,833,1.148,834,2.287,835,1.37,836,1.37,837,1.37,838,2.287,839,2.287,840,2.287,841,2.287,842,2.287,843,3.439,844,1.37,845,2.287,846,1.916,847,1.37,848,2.287,849,1.37,850,1.37,851,3.439,852,3.439,853,1.37,854,1.37,855,1.37,856,1.49,857,1.44,858,1.37,859,3.825,860,1.672,861,1.001,862,3.439,863,1.672,864,0.732,865,1.37,866,1.37,867,1.37,868,3.463,869,2.514,870,1.148,871,1.001,872,1.49,873,1.37,874,2.467,875,1.37,876,1.028,877,1.37,878,3.463,879,2.945,880,2.287,881,1.49,882,1.37,883,3.439,884,1.37,885,2.945,886,1.37,887,1.37,888,1.916,889,1.37,890,4.133,891,1.37,892,1.37,893,3.439,894,1.001,895,1.37,896,1.37,897,1.148,898,1.37,899,1.37,900,1.37,901,1.37,902,1.37,903,1.672,904,2.287,905,1.37,906,2.945,907,1.37,908,1.37,909,1.37,910,1.148,911,0.892,912,1.37,913,1.37,914,1.37,915,1.37,916,1.37,917,2.287,918,1.37,919,2.287,920,1.148,921,1.37,922,2.287,923,1.37,924,2.287,925,1.37,926,2.287,927,1.37,928,1.37,929,1.37,930,2.287,931,1.37,932,1.148,933,1.37,934,1.37,935,1.37,936,1.37,937,2.287,938,2.287,939,1.916,940,3.675,941,3.439,942,1.37,943,1.148,944,1.37,945,1.37,946,1.37,947,2.287,948,1.148,949,1.37,950,1.37,951,1.37,952,1.37,953,1.37,954,1.37,955,2.287,956,1.37,957,1.001,958,1.37,959,1.148,960,1.37,961,1.001,962,1.37,963,3.825,964,1.148,965,1.916,966,1.37,967,1.344,968,1.37,969,1.37,970,2.287,971,1.37,972,0.805,973,1.37,974,1.37,975,1.37,976,1.37,977,1.37,978,1.001,979,1.37]],["title/components/FlashcardsListComponent.html",[0,0.324,219,0.902]],["body/components/FlashcardsListComponent.html",[0,0.319,1,1.133,2,0.754,3,0.116,4,0.116,5,0.815,6,0.953,7,0.497,8,0.497,9,0.099,11,0.893,13,0.46,14,1.806,15,1.567,16,0.815,17,0.99,18,0.754,19,0.386,20,0.815,21,1.212,22,1.695,23,0.953,25,0.815,27,0.243,28,0.282,32,0.505,34,0.881,46,0.377,47,0.031,48,0.739,49,0.971,50,0.971,51,0.99,52,1.121,54,1.324,55,1.465,56,1.033,57,1.863,63,0.99,64,0.697,73,1.695,74,0.698,76,0.99,80,1.25,81,1.101,82,1.576,87,1.333,95,0.462,96,0.537,97,1.121,99,0.172,100,0.683,101,0.116,102,0.192,109,0.698,111,0.683,117,1.402,120,2.213,121,1.834,122,2.231,123,1.908,124,1.834,125,2.002,126,1.313,127,1.313,128,1.402,129,1.551,130,1.756,131,1.663,132,1.548,133,0.744,134,0.813,135,0.581,136,0.537,138,0.581,139,0.953,140,0.581,141,1.333,142,0.99,145,0.953,149,1.663,150,1.402,151,1.806,152,0.953,153,1.676,154,1.794,155,1.425,162,1.036,163,1.033,168,1.551,174,1.548,175,1.212,179,1.402,181,1.112,184,1.794,185,1.794,187,0.744,188,1.033,191,0.63,192,0.744,193,0.581,194,0.893,195,0.893,196,0.813,197,0.744,199,0.953,206,0.497,207,0.815,208,0.815,209,0.497,210,0.497,211,0.497,212,0.425,213,0.497,214,1.026,215,0.497,216,0.425,217,0.497,218,0.497,219,1.026,220,1.284,221,0.497,222,1.026,223,0.497,224,0.425,225,0.497,226,0.425,227,0.497,228,0.425,229,0.497,230,0.425,231,0.497,232,0.425,233,0.497,234,0.425,235,0.46,236,0.497,237,0.497,238,0.011,239,0.011,249,0.581,258,0.698,261,2.065,263,0.957,264,0.739,270,0.46,274,1.036,275,1.834,279,0.893,282,1.121,283,0.744,285,0.683,293,1.033,294,0.881,295,1.548,296,1.863,307,0.893,323,0.683,327,0.815,336,0.537,343,1.112,346,1.112,347,1.036,350,0.744,351,0.813,354,0.893,355,0.99,357,0.683,366,0.881,367,1.794,372,0.813,379,0.744,400,2.249,404,0.813,419,0.813,433,1.22,446,0.581,450,1.212,461,0.893,463,0.813,465,1.551,468,0.63,477,0.99,483,1.39,484,1.98,486,1.425,510,1.648,532,1.22,555,0.893,566,1.624,572,3.234,578,2.389,579,1.112,580,3.645,581,2.833,585,3.124,588,0.744,600,0.99,609,2.09,610,0.63,611,0.99,614,0.813,617,2.655,620,3.645,621,3.18,622,0.99,623,1.465,626,1.794,627,1.112,633,1.863,644,0.893,648,2.318,649,2.065,655,2.155,664,1.794,667,2.681,670,1.831,690,1.801,707,0.99,708,0.99,709,1.112,714,2.065,715,1.863,716,1.112,724,2.96,726,0.813,731,1.274,732,1.274,736,1.112,737,2.318,739,1.274,741,1.274,742,3.85,744,2.155,745,1.274,747,1.274,749,1.274,762,1.274,767,1.274,771,1.274,784,2.681,785,0.99,786,0.893,787,3.073,789,1.274,790,0.813,820,1.274,822,2.318,827,1.112,846,1.274,857,1.22,860,1.112,864,0.813,869,1.112,870,1.274,872,0.99,876,1.121,881,0.99,894,1.112,911,0.99,932,2.09,961,1.112,964,2.09,967,1.863,972,0.893,978,1.112,980,5.083,981,5.083,982,1.274,983,3.171,984,2.494,985,3.171,986,1.695,987,3.171,988,2.494,989,2.318,990,3.668,991,3.171,992,3.171,993,3.171,994,3.171,995,2.318,996,2.065,997,2.681,998,2.681,999,2.494,1000,3.073,1001,3.668,1002,2.494,1003,2.494,1004,3.668,1005,3.668,1006,3.668,1007,1.823,1008,1.274,1009,2.494,1010,1.521,1011,1.521,1012,2.318,1013,2.494,1014,3.329,1015,1.521,1016,2.656,1017,1.521,1018,2.494,1019,2.494,1020,2.494,1021,1.521,1022,1.521,1023,2.494,1024,1.823,1025,1.521,1026,2.494,1027,1.521,1028,1.863,1029,2.389,1030,2.494,1031,1.521,1032,1.521,1033,1.521,1034,2.494,1035,1.521,1036,1.823,1037,1.521,1038,1.823,1039,1.521,1040,1.521,1041,4.049,1042,1.521,1043,1.521,1044,1.521,1045,1.521,1046,2.065,1047,1.624,1048,1.521,1049,1.521,1050,1.521,1051,0.813,1052,1.112,1053,0.893,1054,1.112,1055,1.112,1056,1.112,1057,1.112,1058,1.112,1059,1.274,1060,3.171,1061,1.823,1062,2.09,1063,1.521,1064,1.112,1065,1.274,1066,1.274,1067,1.521,1068,0.99,1069,1.521,1070,1.521,1071,0.99,1072,1.521,1073,1.112,1074,1.521,1075,1.521,1076,1.521,1077,1.274,1078,1.521,1079,1.521,1080,2.494,1081,1.521,1082,1.521,1083,1.521,1084,1.521,1085,3.668,1086,1.521,1087,1.521,1088,1.521,1089,1.521,1090,2.494,1091,2.494,1092,1.112,1093,1.112,1094,1.112,1095,1.112,1096,3.18,1097,2.318,1098,1.521,1099,1.521,1100,1.521,1101,1.521,1102,1.521,1103,1.521,1104,1.521,1105,1.521,1106,1.521,1107,1.274,1108,1.274,1109,1.521,1110,1.521,1111,4.351,1112,1.521,1113,3.171,1114,1.521,1115,3.171,1116,1.521,1117,1.274,1118,1.521,1119,1.112,1120,1.521,1121,1.521,1122,1.521,1123,1.521,1124,1.521,1125,2.09,1126,1.521,1127,2.656,1128,1.521,1129,1.112,1130,1.863,1131,1.274,1132,1.521,1133,1.521,1134,2.09,1135,1.521,1136,1.521,1137,1.521,1138,1.521,1139,1.521,1140,1.112,1141,1.521,1142,1.112,1143,3.171,1144,2.318,1145,1.274,1146,2.09,1147,1.521,1148,1.521,1149,1.521,1150,1.521,1151,1.521,1152,1.521,1153,1.521,1154,1.521,1155,2.09,1156,2.494,1157,1.823,1158,1.624,1159,3.668,1160,3.668,1161,3.668,1162,1.823,1163,1.823,1164,2.494,1165,1.823,1166,1.521,1167,1.521,1168,3.171,1169,0.99,1170,0.893,1171,1.112,1172,1.112,1173,1.112,1174,1.112,1175,0.99,1176,1.274,1177,0.99,1178,1.112,1179,1.112,1180,1.112,1181,1.274,1182,1.521,1183,1.521,1184,1.274,1185,0.99,1186,1.521,1187,1.274,1188,1.521,1189,1.112,1190,0.99,1191,0.99,1192,1.112,1193,1.274,1194,1.521,1195,0.99,1196,1.274,1197,1.521,1198,2.681,1199,1.112,1200,1.112,1201,1.112,1202,1.274,1203,1.274,1204,1.521,1205,1.521,1206,1.521]],["title/injectables/GetDataService.html",[268,0.769,664,1.576]],["body/injectables/GetDataService.html",[3,0.216,4,0.216,9,0.184,27,0.216,28,0.454,32,0.811,34,0.944,46,0.406,47,0.031,48,1.089,49,0.571,50,0.571,52,1.173,64,0.903,81,1.261,95,0.507,99,0.319,101,0.216,102,0.357,109,1.371,111,2.634,220,0.729,235,0.853,238,0.018,239,0.018,241,1.078,258,0.789,263,1.371,264,1.058,268,0.957,278,1.168,321,2.954,334,1.379,336,0.997,353,1.379,387,1.507,395,2.062,396,2.715,398,2.143,409,2.611,429,1.267,430,1.507,466,2.493,483,1.213,644,2.984,649,4.087,664,1.961,670,2.216,690,1.168,1016,4.997,1046,3.308,1117,3.908,1119,3.713,1207,5.321,1208,2.363,1209,4.664,1210,4.664,1211,4.009,1212,4.009,1213,4.664,1214,4.009,1215,3.359,1216,4.009,1217,4.009,1218,5.079,1219,4.664,1220,4.664,1221,4.009,1222,4.009,1223,2.82,1224,6.48,1225,2.82,1226,4.009,1227,2.82,1228,4.009,1229,2.82,1230,2.82,1231,2.82,1232,4.009,1233,2.82,1234,3.359,1235,2.82,1236,4.009,1237,2.82,1238,4.009,1239,2.82,1240,2.82,1241,2.82,1242,6.48,1243,2.82,1244,2.82,1245,2.82,1246,2.82,1247,2.82,1248,4.009,1249,2.82,1250,1.657,1251,2.82,1252,1.379,1253,2.82,1254,2.363,1255,2.82,1256,2.82,1257,4.664,1258,2.82,1259,2.82,1260,2.062,1261,2.82,1262,2.82,1263,4.009,1264,4.009,1265,2.82,1266,4.009,1267,4.664,1268,2.062]],["title/components/HeaderComponent.html",[0,0.324,222,0.902]],["body/components/HeaderComponent.html",[0,0.467,1,0.783,2,1.206,3,0.356,4,0.214,5,0.915,6,1.07,7,0.915,8,0.915,9,0.183,13,0.847,14,2.049,15,1.754,16,0.915,18,1.206,19,0.719,20,1.303,21,1.775,23,1.524,25,1.303,27,0.305,28,0.452,32,0.807,34,0.94,46,0.303,47,0.031,48,0.789,49,0.807,50,0.807,52,1.106,54,1.655,56,1.159,64,0.71,73,1.496,74,1.116,80,0.668,81,1.083,82,1.48,91,1.309,95,0.491,96,0.989,99,0.317,101,0.214,102,0.354,117,1.775,121,1.524,122,2.236,123,1.912,124,1.07,125,1.524,126,1.159,128,1.07,130,2.045,131,1.07,132,1.775,135,1.524,136,1.409,138,1.07,139,1.07,140,1.524,141,1.496,143,1.95,144,1.95,145,1.775,146,2.272,147,2.729,148,1.823,149,1.524,150,1.775,151,1.974,152,1.07,153,1.159,154,1.95,155,1.258,159,1.645,162,0.915,166,1.645,168,1.369,169,1.369,173,2.046,174,1.935,175,1.524,177,2.131,178,1.496,179,1.07,182,1.95,183,1.496,184,1.95,187,1.369,191,1.159,193,1.07,199,1.07,202,1.496,206,0.915,207,1.303,208,1.303,209,0.915,210,0.915,211,0.915,212,0.783,213,0.915,214,0.783,215,0.915,216,0.783,217,0.915,218,0.915,219,0.783,220,0.724,221,0.915,222,1.416,223,0.915,224,0.783,225,0.915,226,0.783,227,0.915,228,0.783,229,0.915,230,0.783,231,0.915,232,1.416,233,0.915,234,0.783,235,0.847,236,0.915,237,0.915,238,0.018,239,0.018,249,1.07,251,1.823,252,2.345,258,1.116,260,2.022,261,2.499,263,0.878,264,0.677,267,1.524,270,1.206,276,1.369,288,1.823,294,0.989,296,2.343,303,2.046,305,1.369,306,1.258,307,1.645,351,1.496,357,1.258,372,2.973,385,2.046,393,3.727,484,1.369,486,1.258,489,1.496,494,3.727,496,2.046,502,4.241,509,4.483,510,2.275,588,1.369,597,1.823,602,1.823,610,1.159,617,1.496,700,2.345,726,1.496,777,1.823,857,1.369,871,2.046,876,2.275,878,2.345,957,2.046,965,2.345,972,1.645,1038,2.046,1190,1.823,1191,1.823,1195,1.823,1269,2.345,1270,4.645,1271,3.988,1272,5.062,1273,4.645,1274,3.988,1275,5.062,1276,5.062,1277,3.988,1278,4.645,1279,2.345,1280,3.988,1281,3.988,1282,2.799,1283,3.988,1284,2.799,1285,3.988,1286,2.799,1287,2.799,1288,2.799,1289,2.799,1290,2.799,1291,2.799,1292,2.799,1293,1.823,1294,2.799,1295,2.799,1296,2.799,1297,2.799,1298,2.799,1299,3.988,1300,2.799,1301,2.799,1302,2.799,1303,4.483,1304,2.799,1305,2.799,1306,2.799,1307,3.988,1308,2.799,1309,3.988,1310,2.915,1311,2.345,1312,2.345,1313,2.799,1314,2.046,1315,2.799,1316,2.345,1317,2.799,1318,2.799,1319,2.799,1320,2.799,1321,3.988,1322,2.799,1323,2.799,1324,2.799,1325,2.799,1326,2.799,1327,3.988,1328,2.799,1329,2.799,1330,2.799,1331,3.341,1332,2.345,1333,2.345,1334,2.345,1335,2.345,1336,2.345,1337,2.345]],["title/interfaces/IFlashcard.html",[269,0.599,690,1.334]],["body/interfaces/IFlashcard.html",[3,0.362,4,0.362,9,0.308,27,0.362,28,0.636,46,0.419,47,0.03,48,1.092,95,0.417,101,0.362,238,0.026,239,0.026,264,0.954,267,2.292,269,0.877,483,1.877,493,2.123,644,3.646,670,2.102,690,2.326,1046,4.041,1062,5.199,1119,4.536,1252,3.1,1338,3.958,1339,6.206]],["title/interfaces/ISubtopic.html",[269,0.599,1252,1.576]],["body/interfaces/ISubtopic.html",[3,0.368,4,0.368,9,0.314,27,0.368,28,0.643,46,0.407,47,0.031,48,1.107,64,0.876,95,0.425,101,0.368,111,2.805,220,1.614,238,0.026,239,0.026,264,0.965,269,0.894,285,2.162,483,1.888,493,2.162,670,2.041,690,2.637,1252,2.778,1340,4.032]],["title/interfaces/ITopic.html",[269,0.599,1250,1.894]],["body/interfaces/ITopic.html",[3,0.368,4,0.368,9,0.314,27,0.368,28,0.643,46,0.407,47,0.031,48,1.107,64,0.876,95,0.425,101,0.368,111,2.805,238,0.026,239,0.026,264,0.965,269,0.894,285,2.162,483,1.888,493,2.162,670,2.041,1250,3.337,1252,3.115,1260,4.564,1341,4.032]],["title/interfaces/IUserData.html",[269,0.599,1342,2.356]],["body/interfaces/IUserData.html",[3,0.375,4,0.375,9,0.319,27,0.375,28,0.65,46,0.409,47,0.03,48,1.137,101,0.375,238,0.026,239,0.026,269,0.909,435,3.355,436,3.355,438,3.688,483,1.899,493,2.2,1342,4.195,1343,4.102]],["title/components/InfoComponent.html",[0,0.324,224,0.902]],["body/components/InfoComponent.html",[0,0.569,1,1.158,2,1.567,3,0.433,4,0.317,5,1.353,7,1.353,8,1.353,9,0.27,13,1.251,14,2.161,15,1.85,16,1.353,18,1.567,19,0.802,20,1.694,25,1.694,47,0.03,64,0.727,95,0.458,99,0.469,101,0.317,102,0.523,123,1.938,162,1.353,206,1.353,207,1.694,208,1.694,209,1.353,210,1.353,211,1.353,212,1.158,213,1.353,214,1.158,215,1.353,216,1.158,217,1.353,218,1.353,219,1.158,220,1.07,221,1.353,222,1.659,223,1.353,224,1.659,225,1.353,226,1.158,227,1.353,228,1.158,229,1.353,230,1.158,231,1.353,232,1.158,233,1.353,234,1.158,235,1.251,236,1.353,237,1.353,238,0.024,239,0.024,244,4.341,275,1.981,285,2.664,291,3.044,294,1.831,295,1.981,357,2.328,714,3.374,903,3.788,1051,2.212,1142,3.788,1155,4.341,1344,3.467,1345,5.182,1346,5.182,1347,5.93,1348,5.182,1349,5.182,1350,5.182,1351,5.182,1352,5.182,1353,5.182,1354,5.182,1355,5.182,1356,3.788,1357,5.182,1358,5.182,1359,4.138,1360,4.138]],["title/components/LoginComponent.html",[0,0.324,226,0.902]],["body/components/LoginComponent.html",[0,0.431,1,0.681,2,1.09,3,0.186,4,0.186,5,0.796,6,0.931,7,0.796,8,0.796,9,0.159,13,0.736,14,2.001,15,1.713,16,0.796,18,1.09,19,0.664,20,1.178,21,1.64,22,2.293,23,1.377,25,1.178,27,0.186,28,0.408,32,0.729,34,0.729,46,0.28,47,0.031,48,0.612,49,0.868,50,0.868,52,0.984,54,1.94,55,1.326,56,1.776,61,2.794,64,0.602,74,1.008,80,1.208,81,0.729,82,1.109,87,1.301,90,3.019,91,1.226,95,0.468,96,0.86,97,2.13,99,0.276,100,1.094,101,0.186,102,0.308,117,1.377,118,2.347,120,1.963,121,2.026,122,2.414,123,1.983,124,1.812,125,2.268,126,1.008,127,1.008,128,1.64,129,1.191,130,1.934,131,1.934,132,0.931,135,1.812,136,0.86,138,0.931,139,0.931,140,1.934,143,1.762,144,1.762,145,1.377,146,1.191,149,1.934,150,1.377,151,1.55,152,0.931,153,2.095,162,0.796,163,1.776,168,1.762,169,2.319,174,2.152,175,1.377,179,1.934,180,3.296,182,2.319,183,1.926,185,1.762,188,1.008,189,1.586,191,1.008,192,1.191,193,1.64,197,1.762,199,1.64,202,1.301,206,0.796,207,1.178,208,1.402,209,0.796,210,0.796,211,0.796,212,0.681,213,0.796,214,0.681,215,0.796,216,0.681,217,0.796,218,0.796,219,0.681,220,0.63,221,0.796,222,1.326,223,0.796,224,0.681,225,0.796,226,1.326,227,0.796,228,0.681,229,0.796,230,0.681,231,0.796,232,0.681,233,0.796,234,0.681,235,0.736,236,0.796,237,0.796,238,0.016,239,0.016,249,0.931,258,1.008,259,1.78,260,1.675,261,2.53,263,0.536,264,0.413,265,2.13,270,0.736,273,1.78,274,1.178,283,1.191,287,1.78,288,1.586,291,2.786,293,1.008,304,1.926,305,1.762,306,2.824,307,1.43,317,1.191,327,1.402,329,1.78,347,1.178,360,2.04,372,1.301,421,1.586,435,1.926,436,1.301,439,2.117,448,1.43,450,0.931,492,1.273,526,1.586,610,1.008,626,1.762,757,3.594,790,1.301,827,1.78,833,3.594,856,1.586,857,1.762,860,1.78,863,1.78,864,1.301,871,3.136,872,1.586,874,3.019,876,1.094,881,1.586,910,2.04,911,2.347,943,3.019,957,2.634,1051,1.301,1071,2.347,1092,1.78,1130,2.117,1144,1.78,1169,2.347,1170,3.113,1177,2.347,1179,1.78,1180,1.78,1184,2.04,1185,1.586,1196,2.04,1293,1.586,1310,1.78,1361,2.04,1362,4.29,1363,3.603,1364,4.29,1365,4.29,1366,4.29,1367,4.741,1368,4.741,1369,3.603,1370,2.435,1371,2.435,1372,2.435,1373,2.435,1374,2.04,1375,2.435,1376,2.435,1377,2.435,1378,2.04,1379,3.603,1380,2.435,1381,3.594,1382,1.78,1383,3.594,1384,2.435,1385,2.435,1386,2.435,1387,2.435,1388,2.435,1389,2.435,1390,4.29,1391,2.117,1392,2.435,1393,2.117,1394,2.435,1395,2.435,1396,2.435,1397,2.435,1398,2.435,1399,2.435,1400,2.435,1401,4.741,1402,2.435,1403,2.435,1404,2.04,1405,2.435,1406,3.019,1407,3.019,1408,2.435,1409,3.603,1410,2.435,1411,2.04,1412,1.78,1413,4.44,1414,2.435,1415,2.435,1416,3.603,1417,3.603,1418,3.019,1419,2.435,1420,2.435,1421,2.435,1422,2.04,1423,2.435,1424,2.435,1425,2.04,1426,2.04,1427,2.04,1428,2.04,1429,2.435,1430,2.435,1431,2.435,1432,4.741,1433,2.04,1434,2.04,1435,2.435,1436,2.435,1437,2.435,1438,2.435,1439,3.603,1440,2.435,1441,2.435,1442,2.435,1443,2.435,1444,2.435,1445,2.435,1446,3.972,1447,2.04,1448,2.634,1449,2.04,1450,2.04]],["title/interfaces/RegisterData.html",[269,0.599,407,1.894]],["body/interfaces/RegisterData.html",[3,0.279,4,0.279,9,0.237,19,0.563,27,0.279,28,0.541,34,0.966,46,0.347,47,0.031,48,1.094,55,1.49,74,1.336,80,1.272,82,0.942,91,1.234,95,0.499,99,0.412,101,0.279,102,0.46,103,1.507,109,1.244,137,1.636,238,0.022,239,0.022,241,1.825,260,1.287,265,2.145,267,1.392,268,1.272,269,0.886,270,1.101,274,1.56,276,3.08,278,1.507,279,2.139,280,2.371,281,2.139,283,1.781,289,1.946,293,1.976,294,1.687,306,2.393,321,2.637,323,2.145,327,1.19,334,1.781,336,1.687,347,1.56,349,2.371,350,1.781,353,1.781,366,1.287,388,2.371,389,2.662,390,2.371,391,3.49,392,2.662,393,3.109,396,2.552,398,2.552,400,2.161,401,2.662,402,3.129,404,2.552,406,2.662,407,3.129,409,2.371,411,2.662,412,2.662,413,2.139,414,2.662,415,2.662,417,2.662,419,2.552,420,2.662,421,2.371,422,2.662,423,2.371,424,2.662,425,2.371,426,2.139,427,2.662,428,2.662,429,1.636,430,1.946,431,2.662,432,2.662,433,2.335,434,2.371,435,3.137,436,3.137,437,3.49,438,3.321,439,2.805,440,2.662,441,2.662,442,2.662,443,2.662,444,2.662,445,1.781,446,1.392,447,2.662,448,2.139,449,2.371,450,1.392,451,3.109,452,2.662,453,2.662,454,2.662,455,2.662,456,2.371,457,2.662,458,2.371,459,3.49,460,2.662,461,2.139,462,2.662,463,1.946,464,2.662,465,1.781,466,2.552,467,2.662,468,1.507,469,2.662,470,2.662,471,2.371,472,2.805,473,2.662,474,2.662,475,2.662,476,2.662,477,2.371,478,2.371,479,2.662,480,2.662,481,2.371,482,2.371,483,1.101,484,1.781,485,2.662,486,1.636,487,2.662,488,2.371,489,1.946,490,2.662,491,2.662,492,1.287,493,1.636]],["title/components/RegistrationComponent.html",[0,0.324,228,0.902]],["body/components/RegistrationComponent.html",[0,0.44,1,0.706,2,1.119,3,0.193,4,0.193,5,0.825,6,0.965,7,0.825,8,0.825,9,0.165,13,0.763,14,2.014,15,1.724,16,0.825,18,1.119,19,0.746,20,1.21,21,1.675,23,1.414,25,1.21,27,0.193,28,0.419,32,0.749,34,0.887,46,0.241,47,0.031,49,0.511,50,0.511,52,0.954,54,1.897,55,1.437,56,1.814,57,1.483,59,1.845,61,1.644,64,0.615,74,0.706,80,0.883,81,0.749,82,1.248,87,1.978,91,0.957,95,0.49,96,0.892,97,1.663,99,0.286,100,1.663,101,0.193,102,0.319,109,0.555,117,1.414,118,1.644,120,1.997,121,2.052,122,2.426,123,1.997,124,1.844,125,2.219,127,1.045,128,1.675,129,1.234,130,1.675,131,1.963,132,0.965,135,1.844,136,0.892,138,0.965,139,0.965,140,1.963,143,2.143,144,1.81,145,1.414,146,1.234,149,1.844,150,1.414,151,1.577,152,0.965,153,1.997,162,0.825,163,2.127,166,1.483,168,1.81,174,2.219,175,1.414,177,1.349,178,1.349,179,1.844,180,3.705,182,2.359,183,1.978,185,2.143,186,1.845,188,1.045,189,1.644,191,1.045,192,1.234,193,1.675,197,1.234,199,1.414,202,1.349,206,0.825,207,1.21,208,1.21,209,0.825,210,0.825,211,0.825,212,0.706,213,0.825,214,0.706,215,0.825,216,0.706,217,0.825,218,0.825,219,0.706,220,0.653,221,0.825,222,1.35,223,0.825,224,0.706,225,0.825,226,0.706,227,0.825,228,1.35,229,0.825,230,0.706,231,0.825,232,0.706,233,0.825,234,0.706,235,0.763,236,0.825,237,0.825,238,0.017,239,0.017,249,0.965,258,1.035,260,1.705,261,2.492,263,0.555,264,0.429,265,2.168,270,1.459,274,0.825,275,0.965,287,2.705,291,2.174,293,1.045,294,0.892,303,2.705,305,1.234,306,2.308,307,1.483,317,1.234,329,1.845,339,2.174,347,1.21,354,1.483,357,1.134,366,0.892,367,1.234,379,1.234,394,3.1,423,2.41,435,2.579,436,2.342,438,2.835,439,2.835,446,0.965,448,1.483,456,1.644,489,1.978,492,0.892,532,1.234,535,1.845,588,1.234,610,1.045,626,1.81,758,2.115,768,1.644,790,1.978,796,1.845,856,1.644,857,1.81,863,1.845,864,1.349,872,1.644,876,1.134,894,1.845,978,1.845,1014,2.41,1051,1.349,1073,1.845,1169,1.644,1170,3.154,1175,2.853,1180,1.845,1185,1.644,1279,2.115,1293,1.644,1374,2.115,1381,3.1,1382,3.203,1383,3.1,1391,1.483,1393,2.574,1406,3.1,1407,3.1,1411,2.115,1412,1.845,1413,4.498,1418,3.1,1422,2.115,1425,2.115,1426,2.115,1427,2.115,1428,2.115,1433,2.115,1434,2.115,1446,3.671,1447,3.1,1448,2.705,1449,2.115,1450,2.115,1451,2.115,1452,5.137,1453,4.381,1454,4.381,1455,3.701,1456,4.381,1457,4.381,1458,4.825,1459,4.825,1460,4.381,1461,4.825,1462,3.701,1463,2.524,1464,2.524,1465,4.381,1466,2.524,1467,2.524,1468,3.701,1469,3.701,1470,2.524,1471,5.137,1472,2.524,1473,2.524,1474,2.524,1475,2.524,1476,2.524,1477,2.524,1478,2.524,1479,4.381,1480,2.524,1481,3.701,1482,1.845,1483,3.701,1484,2.524,1485,2.524,1486,2.524,1487,2.524,1488,2.524,1489,2.524,1490,2.524,1491,2.524,1492,2.524,1493,2.524,1494,2.524,1495,3.701,1496,2.524,1497,2.524,1498,2.524,1499,2.524,1500,2.524,1501,2.115,1502,2.524,1503,3.701,1504,3.701,1505,3.701,1506,2.524,1507,2.524,1508,3.1,1509,2.524,1510,2.524,1511,2.524,1512,2.524]],["title/pipes/SearchSortPipe.html",[468,1.334,986,1.723]],["body/pipes/SearchSortPipe.html",[3,0.257,4,0.257,9,0.219,13,1.016,18,1.368,19,0.7,32,0.68,46,0.219,47,0.031,48,1.039,49,0.68,50,0.68,52,0.624,55,1.266,63,2.187,64,0.718,76,2.946,80,1.405,81,0.916,87,1.795,91,0.868,95,0.297,99,0.38,101,0.257,102,0.425,106,2.187,109,1.257,111,1.509,133,2.212,136,2.126,169,2.212,238,0.021,239,0.021,263,0.739,264,0.57,270,1.016,282,1.509,285,2.46,294,1.186,295,1.955,304,1.795,323,1.509,339,2.658,347,1.098,366,2.019,400,1.729,413,3.641,434,2.946,445,2.212,450,1.729,468,1.873,492,1.186,579,2.455,598,2.946,614,2.418,644,1.973,670,1.479,714,2.187,726,2.418,729,2.455,744,3.534,818,2.455,831,3.79,967,2.658,986,2.418,996,3.721,1028,2.658,1046,2.946,1047,3.331,1053,2.658,1064,4.397,1066,4.286,1077,2.813,1107,2.813,1108,2.813,1130,1.973,1158,2.187,1162,2.455,1482,2.455,1513,3.358,1514,3.79,1515,2.813,1516,4.524,1517,3.358,1518,5.474,1519,5.474,1520,3.358,1521,4.524,1522,3.79,1523,4.524,1524,5.886,1525,4.524,1526,6.016,1527,4.524,1528,4.524,1529,4.524,1530,4.524,1531,3.358,1532,3.358,1533,3.358,1534,3.358,1535,3.358,1536,3.358,1537,4.586,1538,4.524,1539,3.358,1540,3.358,1541,3.358,1542,4.524,1543,3.358,1544,4.524,1545,3.358,1546,3.358,1547,3.358,1548,3.358,1549,3.358,1550,3.358,1551,5.474,1552,3.358,1553,5.116,1554,2.455,1555,2.813,1556,3.358,1557,3.358,1558,3.358,1559,4.524,1560,2.813,1561,3.358,1562,5.116,1563,3.358,1564,3.358,1565,5.714,1566,3.358,1567,5.714,1568,3.358,1569,3.358,1570,3.358,1571,4.524,1572,3.358,1573,3.358,1574,3.358,1575,3.358,1576,3.358]],["title/components/SubtopicsComponent.html",[0,0.324,230,0.902]],["body/components/SubtopicsComponent.html",[0,0.361,1,1.142,2,0.875,3,0.14,4,0.14,5,0.946,6,0.699,7,0.598,8,0.598,9,0.119,11,1.074,13,0.553,14,1.889,15,1.617,16,0.946,17,1.191,18,0.875,19,0.448,20,0.946,21,1.373,22,1.919,23,1.106,25,0.946,27,0.14,28,0.328,32,0.586,34,0.727,46,0.388,47,0.031,48,0.842,49,1.04,50,1.04,51,1.191,52,1.136,54,0.946,55,1.005,57,1.7,59,2.625,64,0.828,73,1.919,74,0.512,80,0.857,81,1.119,82,1.59,95,0.504,96,0.646,97,0.822,99,0.207,100,0.822,101,0.14,102,0.231,103,1.198,109,0.979,111,1.834,117,1.373,120,1.69,121,1.561,122,2.022,123,1.807,124,1.561,125,1.808,126,0.757,127,0.757,128,1.373,129,1.756,130,1.7,131,1.373,132,1.561,133,0.894,134,0.977,135,0.699,136,0.646,138,0.699,139,1.106,140,0.699,145,0.699,149,1.373,150,1.373,151,1.771,152,0.699,153,1.487,154,1.756,155,1.3,162,0.598,163,0.757,174,1.106,175,0.699,179,0.699,184,1.756,187,0.894,188,0.757,189,1.191,191,0.757,192,0.894,193,0.699,194,1.074,195,1.074,196,0.977,197,0.894,199,0.699,206,0.598,207,0.946,208,0.946,209,0.598,210,0.598,211,0.598,212,0.512,213,0.598,214,1.142,215,0.598,216,0.512,217,0.598,218,0.598,219,0.512,220,0.748,221,0.598,222,1.142,223,0.598,224,0.512,225,0.598,226,0.512,227,0.598,228,0.512,229,0.598,230,1.142,231,0.598,232,0.512,233,0.598,234,0.512,235,1.235,236,0.598,237,0.598,238,0.013,239,0.013,249,0.699,258,0.81,261,2.226,263,1.09,264,0.842,270,0.553,274,1.174,275,0.699,282,1.3,283,0.894,294,1.023,295,0.699,296,1.7,305,0.894,317,1.415,327,0.598,336,0.646,347,0.598,354,1.074,366,1.269,367,1.756,379,0.894,400,2.233,419,0.977,425,2.339,426,2.11,433,0.894,446,1.373,450,1.106,461,1.074,465,1.756,468,1.198,472,1.7,483,1.767,484,1.756,486,1.999,492,0.646,510,1.614,525,1.337,532,0.894,535,1.337,555,1.074,566,1.885,572,3.662,578,2.339,581,2.339,584,1.337,585,1.885,588,0.894,589,1.532,610,0.757,617,2.182,623,1.7,626,0.894,633,2.11,648,2.985,649,2.339,655,2.399,664,1.997,667,2.985,670,1.91,690,0.757,707,1.191,708,1.191,709,1.337,715,2.11,726,0.977,734,1.532,735,2.425,736,1.337,737,2.985,744,1.7,746,1.532,768,1.191,777,1.191,785,1.191,786,1.074,790,1.919,822,1.337,826,1.337,829,1.337,857,0.894,861,1.337,864,0.977,876,1.3,888,1.532,959,1.532,967,2.11,986,1.919,989,2.625,995,2.625,996,2.339,997,2.985,998,2.985,1000,3.421,1007,2.116,1008,1.532,1014,3.716,1024,2.116,1028,1.7,1029,1.885,1036,2.116,1047,1.885,1051,0.977,1052,1.337,1053,1.074,1054,1.337,1055,1.337,1056,1.337,1057,1.337,1058,1.337,1059,2.425,1061,2.985,1064,1.337,1065,1.532,1068,1.191,1071,1.191,1073,1.337,1092,1.337,1093,1.337,1094,1.337,1095,1.337,1096,3.252,1097,2.625,1127,1.532,1129,2.116,1130,1.7,1140,1.337,1146,1.532,1157,2.116,1158,1.885,1165,2.116,1169,1.191,1170,1.074,1171,1.337,1172,1.337,1173,1.337,1174,1.337,1175,1.191,1176,1.532,1178,1.337,1187,2.425,1189,1.337,1190,1.191,1191,1.191,1192,1.337,1195,1.191,1198,2.985,1199,1.337,1200,1.337,1201,1.337,1202,1.532,1203,1.532,1252,2.175,1260,2.116,1310,1.337,1391,1.7,1393,2.11,1404,1.532,1537,1.532,1554,2.625,1555,2.425,1577,1.532,1578,3.591,1579,2.894,1580,3.591,1581,3.591,1582,3.591,1583,4.448,1584,5.528,1585,3.591,1586,2.894,1587,2.894,1588,4.083,1589,2.894,1590,2.894,1591,1.829,1592,1.829,1593,1.829,1594,1.829,1595,1.829,1596,2.894,1597,1.829,1598,2.894,1599,1.829,1600,1.829,1601,1.829,1602,2.894,1603,1.829,1604,1.829,1605,1.829,1606,2.894,1607,1.829,1608,1.829,1609,1.829,1610,1.829,1611,1.829,1612,1.829,1613,1.829,1614,1.829,1615,1.829,1616,1.829,1617,2.425,1618,2.425,1619,1.532,1620,1.829,1621,1.532,1622,1.829,1623,1.532,1624,1.829,1625,1.532,1626,4.083,1627,1.532,1628,2.894,1629,2.894,1630,1.829,1631,1.829,1632,1.829,1633,4.083,1634,1.829,1635,1.829,1636,1.829,1637,1.829,1638,1.829,1639,1.532,1640,1.829,1641,1.829,1642,1.829,1643,1.337,1644,1.829,1645,1.829,1646,1.829,1647,1.829,1648,1.829,1649,1.829,1650,1.532,1651,1.829,1652,1.532,1653,1.532,1654,1.829,1655,1.337,1656,1.337,1657,1.829,1658,2.894,1659,1.829,1660,1.829,1661,3.458,1662,1.829,1663,1.829,1664,4.731,1665,1.829,1666,1.829,1667,3.591,1668,1.829,1669,3.591,1670,1.829,1671,1.829,1672,1.829,1673,1.829,1674,1.829,1675,1.829,1676,2.894,1677,1.532,1678,2.425,1679,1.532,1680,1.829,1681,1.829,1682,1.829,1683,1.829,1684,1.829,1685,1.829,1686,1.829,1687,1.829,1688,1.829,1689,1.337,1690,1.829,1691,4.083,1692,2.894,1693,2.894,1694,1.829]],["title/components/ToDoFlashcardComponent.html",[0,0.324,232,0.902]],["body/components/ToDoFlashcardComponent.html",[0,0.402,1,0.606,2,0.998,3,0.166,4,0.166,5,1.307,6,1.262,7,0.708,8,0.708,9,0.141,13,0.655,14,1.958,15,1.676,16,0.708,18,1.21,19,0.511,20,1.079,21,1.529,22,2.138,23,1.262,25,1.079,27,0.253,28,0.374,32,0.668,34,0.439,46,0.344,47,0.031,48,0.561,49,0.81,50,0.81,51,2.15,52,1.073,54,1.462,55,1.119,56,2.183,63,1.411,64,0.675,74,0.606,76,1.411,80,1.068,81,1.027,82,1.311,84,1.815,87,1.764,91,0.854,95,0.448,96,0.766,97,0.974,99,0.245,100,0.974,101,0.166,102,0.274,106,1.411,109,0.477,117,0.828,121,1.939,122,2.345,123,1.821,124,0.828,125,2.129,126,1.367,127,1.367,128,1.529,130,1.529,131,0.828,132,0.828,135,0.828,136,0.766,138,0.828,139,0.828,140,1.262,141,1.764,143,2.187,144,2.187,145,1.529,146,1.614,147,2.35,148,1.411,149,1.529,150,1.262,151,1.462,152,0.828,153,0.897,154,1.06,155,0.974,156,1.584,157,1.584,159,1.94,162,0.708,163,1.367,165,2.15,166,1.273,168,2.187,169,1.06,174,1.84,175,1.529,177,1.764,178,1.764,179,1.262,182,1.956,185,1.956,187,1.06,188,0.897,191,1.656,193,1.709,198,1.411,199,1.262,202,2.138,206,0.708,207,1.307,208,1.079,209,0.708,210,0.708,211,0.708,212,0.606,213,0.708,214,0.606,215,0.708,216,0.606,217,1.307,218,0.708,219,0.606,220,0.56,221,0.708,222,0.606,223,0.708,224,0.606,225,0.708,226,0.606,227,0.708,228,0.606,229,0.708,230,0.606,231,0.708,232,1.251,233,0.708,234,0.606,235,0.655,236,0.708,237,0.708,238,0.015,239,0.015,251,3.814,258,0.924,260,2.07,263,0.88,264,0.679,267,1.262,270,0.655,274,1.079,275,1.84,282,1.483,285,0.974,289,1.158,293,0.897,295,1.529,304,1.158,305,1.06,306,0.974,317,2.187,323,0.974,327,1.079,339,1.94,347,1.307,350,1.06,351,1.158,357,0.974,367,1.06,372,1.764,379,1.06,390,2.912,445,1.06,446,2.171,450,1.709,478,2.15,482,1.411,486,2.009,488,2.604,489,1.158,492,0.766,524,2.15,525,1.584,526,1.411,530,1.815,532,1.06,545,1.584,588,1.06,597,1.411,600,1.411,602,1.411,603,1.815,610,1.367,611,2.604,617,1.158,623,1.273,633,2.35,652,2.766,655,2.627,715,1.273,777,1.411,786,1.273,826,1.584,856,1.411,869,1.584,876,1.797,903,1.584,920,1.815,940,2.766,948,1.815,961,1.584,972,1.94,1012,2.413,1029,1.411,1068,1.411,1129,1.584,1144,1.584,1177,1.411,1185,1.411,1293,1.411,1303,3.351,1311,1.815,1314,1.584,1316,1.815,1331,3.351,1332,3.747,1333,2.766,1334,2.766,1335,1.815,1336,1.815,1337,1.815,1356,2.413,1378,3.747,1391,1.273,1393,2.627,1448,1.584,1501,1.815,1508,2.766,1621,1.815,1639,1.815,1643,1.584,1655,2.924,1656,1.584,1661,3.974,1678,3.747,1689,3.707,1695,4.907,1696,1.815,1697,3.999,1698,3.301,1699,3.999,1700,5.681,1701,3.999,1702,3.747,1703,2.766,1704,4.472,1705,2.766,1706,4.472,1707,2.167,1708,2.98,1709,3.301,1710,2.167,1711,3.301,1712,3.716,1713,2.167,1714,2.167,1715,2.167,1716,3.301,1717,2.167,1718,2.167,1719,2.167,1720,2.167,1721,2.167,1722,2.167,1723,2.167,1724,2.167,1725,2.167,1726,2.167,1727,2.167,1728,2.167,1729,2.167,1730,2.167,1731,2.167,1732,2.167,1733,2.167,1734,2.167,1735,2.167,1736,2.167,1737,2.167,1738,2.167,1739,2.167,1740,2.167,1741,2.167,1742,2.167,1743,2.167,1744,3.301,1745,2.167,1746,2.167,1747,4.472,1748,3.301,1749,2.167,1750,2.167,1751,2.167,1752,2.167,1753,2.167,1754,2.167,1755,2.167,1756,2.167,1757,2.167,1758,2.167,1759,2.167,1760,2.167,1761,2.167,1762,2.167,1763,3.301,1764,3.301,1765,2.167,1766,2.167,1767,2.167,1768,2.167,1769,3.301,1770,3.301,1771,2.167,1772,3.301,1773,3.301,1774,2.167,1775,2.167,1776,2.167,1777,2.167,1778,2.167,1779,2.167,1780,2.167,1781,2.167,1782,2.167,1783,2.167,1784,3.301,1785,2.167,1786,3.301,1787,2.167,1788,2.167,1789,3.301,1790,2.167,1791,2.167,1792,2.167,1793,2.167,1794,2.167,1795,2.167,1796,2.167,1797,2.167,1798,3.301,1799,1.584,1800,2.167,1801,2.167,1802,2.167,1803,2.167,1804,2.167,1805,3.301,1806,2.167,1807,2.167,1808,2.167,1809,2.167]],["title/injectables/ToDoService.html",[268,0.769,1708,1.894]],["body/injectables/ToDoService.html",[3,0.308,4,0.308,9,0.263,19,0.909,27,0.308,28,0.577,32,1.031,34,1.131,46,0.383,47,0.031,48,0.997,49,0.816,50,0.816,52,1.149,54,1.827,64,0.824,81,1.189,95,0.519,99,0.456,101,0.39,102,0.51,109,1.292,238,0.023,239,0.023,241,1.54,258,1.127,263,1.292,264,0.997,267,1.54,268,1.216,269,0.748,278,1.668,321,2.883,334,1.97,336,1.424,353,1.97,387,2.153,395,2.945,396,3.139,398,2.723,429,1.81,430,2.153,466,2.153,483,1.69,670,2.054,1268,2.945,1702,4.269,1703,4.269,1705,4.269,1708,2.994,1712,2.367,1799,2.945,1810,4.593,1811,2.945,1812,4.682,1813,4.682,1814,4.92,1815,5.095,1816,4.269,1817,4.029,1818,4.269,1819,4.029,1820,4.029,1821,4.269,1822,4.029,1823,4.269,1824,3.376,1825,4.92,1826,3.376,1827,3.376,1828,3.376]],["title/interfaces/Todo.html",[269,0.599,1712,1.894]],["body/interfaces/Todo.html",[3,0.335,4,0.335,9,0.286,19,0.936,27,0.335,28,0.608,34,0.887,46,0.379,47,0.031,48,1.027,54,2.029,95,0.534,99,0.496,101,0.411,102,0.554,109,1.331,238,0.025,239,0.025,241,1.674,267,2.218,268,1.281,269,0.813,278,1.813,321,2.789,334,2.142,336,1.548,353,2.142,396,2.869,398,2.341,429,1.968,430,2.341,466,2.341,483,1.83,493,1.968,670,2.029,1268,3.202,1708,2.573,1712,3.154,1799,4.422,1810,3.202,1811,3.202,1812,3.67,1813,3.67,1814,3.67,1816,3.67,1818,3.67,1821,3.67,1823,3.67,1824,3.67,1825,5.068,1826,3.67,1827,3.67,1828,3.67]],["title/components/TopicsComponent.html",[0,0.324,234,0.902]],["body/components/TopicsComponent.html",[0,0.361,1,1.142,2,0.875,3,0.14,4,0.14,5,0.945,6,0.698,7,0.597,8,0.597,9,0.119,11,1.073,13,0.553,14,1.888,15,1.616,16,0.945,17,1.19,18,0.875,19,0.555,20,0.945,21,1.372,22,1.918,23,1.105,25,0.945,27,0.14,28,0.327,32,0.585,34,0.9,46,0.394,47,0.031,48,0.803,49,1.07,50,1.07,52,1.147,54,1.173,55,1.244,56,0.756,57,1.699,64,0.858,73,2.527,74,1.244,80,1.061,81,1.119,82,1.582,91,0.928,95,0.496,96,0.646,97,1.299,99,0.207,100,0.821,101,0.14,102,0.231,103,1.197,106,1.19,109,0.636,111,1.833,117,1.372,118,1.19,120,1.689,121,1.56,122,2.021,123,1.806,124,1.56,125,1.807,126,0.756,127,0.756,128,1.372,129,1.755,130,1.699,131,1.56,132,1.56,133,0.893,134,0.976,135,0.698,136,1.022,137,0.821,138,0.698,139,0.698,140,0.698,145,0.698,149,1.372,150,1.372,151,1.619,152,0.698,153,1.486,154,1.414,155,0.821,161,1.531,162,0.597,163,0.756,174,1.372,175,1.105,179,1.105,184,1.755,187,0.893,188,0.756,191,0.756,192,0.893,193,0.698,194,1.073,195,1.073,196,0.976,197,0.893,199,0.698,206,0.597,207,0.945,208,0.945,209,0.597,210,0.597,211,0.597,212,0.511,213,0.597,214,1.142,215,0.597,216,0.511,217,0.597,218,0.597,219,0.511,220,0.472,221,0.597,222,1.142,223,0.597,224,0.511,225,0.597,226,0.511,227,0.597,228,0.511,229,0.597,230,0.511,231,0.597,232,0.511,233,0.597,234,1.142,235,1.725,236,0.597,237,0.597,238,0.013,239,0.013,249,0.698,258,0.809,261,2.226,263,1.13,264,0.872,270,0.875,275,0.698,282,1.299,288,1.19,293,0.756,295,1.372,304,0.976,317,1.755,321,1.998,327,0.945,336,0.646,346,1.335,347,0.597,350,1.414,357,0.821,367,0.893,379,1.414,400,2.309,404,0.976,426,1.073,445,0.893,446,1.699,450,0.698,458,2.337,465,2.174,472,1.699,483,1.7,486,1.998,492,1.671,510,1.299,524,2.337,532,1.755,545,1.335,555,1.073,566,1.883,572,3.661,578,2.337,581,2.337,584,1.335,588,0.893,591,2.423,610,0.756,617,2.181,622,1.19,623,1.699,626,1.414,627,1.335,633,2.108,655,2.397,664,1.996,670,1.91,707,1.19,708,1.19,715,1.073,716,1.335,724,1.335,726,0.976,729,2.114,744,1.073,768,1.19,785,1.19,790,0.976,796,1.335,818,2.983,829,1.335,857,1.755,861,1.335,864,0.976,876,1.299,881,1.883,897,2.423,911,1.19,967,1.699,972,1.073,986,1.918,989,2.623,995,2.623,996,2.337,997,2.983,998,2.983,1007,2.114,1012,1.335,1014,3.762,1024,2.114,1028,1.699,1029,1.883,1036,2.114,1038,1.335,1047,1.883,1051,0.976,1052,1.335,1053,1.073,1054,1.335,1055,1.335,1056,1.335,1057,1.335,1058,1.335,1061,3.457,1068,1.19,1093,1.335,1094,2.114,1095,1.335,1096,2.983,1097,2.623,1130,2.397,1131,1.531,1134,1.531,1140,1.335,1142,1.335,1157,2.983,1158,1.883,1165,2.623,1170,1.073,1171,1.335,1172,1.335,1173,1.335,1174,1.335,1175,1.19,1177,1.19,1178,1.335,1179,1.335,1181,1.531,1189,1.335,1190,1.19,1191,1.19,1192,1.335,1193,1.531,1195,1.19,1198,2.623,1199,1.335,1200,1.335,1201,1.335,1215,2.423,1234,2.423,1250,2.612,1312,1.531,1356,1.335,1382,1.335,1391,2.397,1393,2.108,1412,1.335,1522,1.531,1554,1.335,1617,2.423,1618,2.423,1619,1.531,1623,1.531,1625,3.007,1627,1.531,1643,1.335,1650,1.531,1652,1.531,1653,1.531,1655,2.114,1656,1.335,1661,3.457,1679,1.531,1689,2.114,1829,1.531,1830,3.589,1831,2.891,1832,3.589,1833,3.589,1834,3.589,1835,4.08,1836,3.589,1837,3.589,1838,3.589,1839,3.589,1840,2.891,1841,4.08,1842,2.891,1843,2.891,1844,1.827,1845,2.891,1846,2.891,1847,1.827,1848,1.827,1849,1.827,1850,1.827,1851,1.827,1852,2.891,1853,1.827,1854,1.827,1855,1.827,1856,2.891,1857,1.827,1858,1.827,1859,2.891,1860,1.827,1861,2.891,1862,1.827,1863,1.827,1864,1.827,1865,1.827,1866,1.827,1867,1.827,1868,1.827,1869,1.827,1870,1.827,1871,1.827,1872,1.827,1873,1.827,1874,2.891,1875,1.827,1876,1.827,1877,1.827,1878,1.827,1879,1.827,1880,1.827,1881,1.827,1882,1.827,1883,1.827,1884,1.827,1885,1.827,1886,1.827,1887,1.827,1888,1.827,1889,1.827,1890,1.827,1891,1.827,1892,1.827,1893,1.827,1894,1.827,1895,1.827,1896,1.827,1897,1.827,1898,1.827,1899,1.827,1900,1.827,1901,1.827,1902,1.827,1903,1.827,1904,4.446,1905,1.827,1906,1.827,1907,3.589,1908,1.827,1909,3.589,1910,1.827,1911,1.827,1912,1.827,1913,1.827,1914,3.589,1915,3.589,1916,1.827,1917,1.827,1918,1.827,1919,2.891,1920,1.827,1921,1.827,1922,1.827,1923,2.891,1924,1.827,1925,1.827,1926,1.827,1927,1.827,1928,1.827,1929,1.827,1930,1.827]],["title/injectables/WeightedRandomSelectionService.html",[268,0.769,666,2.099]],["body/injectables/WeightedRandomSelectionService.html",[3,0.202,4,0.202,9,0.172,27,0.202,28,0.433,32,0.775,34,1.331,35,3.825,46,0.383,47,0.031,49,1.207,50,1.166,52,1.161,64,0.631,81,1.166,82,1.542,95,0.338,99,0.299,101,0.202,102,0.334,109,1.42,120,1.584,151,2.014,155,1.188,196,1.413,220,1.275,238,0.017,239,0.017,241,1.01,263,0.99,264,0.764,268,0.914,278,1.094,366,1.742,387,1.413,400,2.085,413,3.735,510,2.528,598,2.492,614,3.08,653,4.384,656,2.215,657,3.769,666,2.492,670,2.03,683,4.919,684,4.571,690,1.862,711,4.625,748,3.769,753,3.206,759,4.131,784,2.797,868,2.215,939,2.215,1125,3.206,1162,3.288,1163,3.288,1254,2.215,1314,1.932,1482,3.288,1560,3.769,1677,2.215,1931,5.272,1932,2.215,1933,4.931,1934,5.233,1935,4.498,1936,4.931,1937,4.931,1938,3.827,1939,5.233,1940,3.827,1941,3.827,1942,4.931,1943,3.827,1944,2.643,1945,2.643,1946,4.498,1947,2.643,1948,4.498,1949,2.643,1950,4.498,1951,2.643,1952,2.643,1953,2.643,1954,2.643,1955,2.643,1956,2.643,1957,2.643,1958,3.827,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,5.455,1964,5.455,1965,4.498,1966,2.643,1967,2.643,1968,3.827,1969,3.827,1970,2.643,1971,2.643,1972,2.643,1973,3.827,1974,2.643,1975,6.21,1976,2.643,1977,3.827,1978,2.643,1979,2.643,1980,3.827,1981,2.643,1982,2.643,1983,2.643,1984,3.827,1985,2.643,1986,3.827,1987,2.643,1988,4.498,1989,2.643,1990,2.643,1991,2.643,1992,2.643,1993,3.827,1994,2.643,1995,2.643,1996,2.643,1997,3.827,1998,3.827,1999,2.643,2000,2.643,2001,2.643,2002,2.643,2003,2.643,2004,3.827,2005,3.827,2006,2.643,2007,3.827,2008,2.643,2009,2.643,2010,2.643,2011,2.643,2012,2.643]],["title/coverage.html",[2013,3.686]],["body/coverage.html",[0,0.657,1,1.12,9,0.261,10,3.355,11,2.353,12,3.355,46,0.261,47,0.031,103,1.658,151,2.206,212,1.12,214,1.12,216,1.12,219,1.12,222,1.12,224,1.12,226,1.12,228,1.12,230,1.12,232,1.12,234,1.12,238,0.023,239,0.023,240,3.355,251,2.608,253,2.608,254,2.928,256,3.355,260,1.415,268,1.444,269,1.165,309,2.928,310,2.928,312,3.355,388,3.629,402,2.353,407,2.353,429,1.799,468,1.658,494,2.608,495,3.355,496,2.928,497,3.355,554,3.355,555,2.353,556,3.355,630,3.355,631,3.355,632,3.355,664,1.959,666,2.608,690,1.658,711,2.928,773,4.253,980,3.355,981,3.355,982,3.355,986,2.141,1028,2.353,1053,2.353,1207,3.355,1208,3.355,1250,2.353,1252,1.959,1269,3.355,1338,3.355,1340,3.355,1341,3.355,1342,2.928,1343,3.355,1344,3.355,1361,3.355,1451,3.355,1514,3.355,1515,3.355,1577,3.355,1695,3.355,1696,3.355,1708,2.353,1712,2.353,1810,3.711,1811,3.711,1829,3.355,1931,3.355,1932,3.355,2013,3.355,2014,4.005,2015,4.005,2016,4.005,2017,4.005,2018,3.355,2019,3.355,2020,5.86,2021,5.573,2022,6.047,2023,5.573,2024,5.076,2025,4.005,2026,5.076,2027,4.005,2028,4.005,2029,4.005,2030,4.005,2031,4.005,2032,4.005,2033,4.005,2034,4.005,2035,4.005,2036,4.005,2037,3.355,2038,4.005,2039,4.005]],["title/dependencies.html",[2040,2.255,2041,3.248]],["body/dependencies.html",[47,0.031,96,1.748,99,0.56,100,2.223,238,0.026,239,0.026,249,1.891,336,1.748,2041,4.144,2042,4.947,2043,6.496,2044,4.947,2045,5.773,2046,5.773,2047,5.773,2048,4.947,2049,4.947,2050,4.947,2051,4.947,2052,4.947,2053,4.947,2054,4.947,2055,4.947,2056,4.947,2057,4.947]],["title/index.html",[27,0.206,2058,2.691,2059,2.691]],["body/index.html",[15,1.413,47,0.027,137,2.77,238,0.027,239,0.027,786,3.433,1145,4.232,2060,6.165,2061,6.165,2062,6.165,2063,5.051,2064,5.051,2065,5.051,2066,5.843,2067,5.051,2068,5.051,2069,5.051,2070,5.051,2071,5.051,2072,5.051,2073,5.051,2074,5.051]],["title/modules.html",[2075,3.686]],["body/modules.html",[47,0.027,238,0.027,239,0.027,2075,4.417]],["title/overview.html",[2076,3.686]],["body/overview.html",[2,1.57,47,0.027,238,0.027,239,0.027,253,3.38,387,2.774,468,2.149,493,2.332,614,3.172,1163,3.795,2076,4.349,2077,5.191,2078,5.191]],["title/properties.html",[28,0.439,2040,2.255]],["body/properties.html",[28,0.594,47,0.029,238,0.027,239,0.027,2079,5.247,2080,5.247]],["title/miscellaneous/variables.html",[2081,2.255,2082,3.248]],["body/miscellaneous/variables.html",[19,0.755,27,0.374,46,0.374,47,0.031,49,1.16,50,1.16,55,1.603,91,1.262,238,0.026,239,0.026,265,2.194,276,2.388,429,2.574,433,2.388,463,2.609,514,4.09,1071,3.179,2018,4.09,2019,4.799,2037,4.09,2081,4.09,2082,4.09,2083,4.882,2084,4.882,2085,4.882,2086,4.882,2087,4.882,2088,4.882,2089,4.882,2090,4.882,2091,4.882,2092,4.882,2093,4.882,2094,4.882,2095,4.882,2096,4.882]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":151,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2080,"title":{},"body":{"properties.html":{}}}],["0.08",{"_index":1323,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.1",{"_index":155,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["0.14.10",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":616,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["0.2",{"_index":1979,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["0.2s",{"_index":188,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["0.3",{"_index":1978,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["0.3rem",{"_index":1195,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["0.3s",{"_index":146,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["0.4",{"_index":196,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["0.4rem",{"_index":1321,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.5",{"_index":1977,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["0.5rem",{"_index":185,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["0.6",{"_index":1976,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["0.6rem",{"_index":1333,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["0.6s",{"_index":916,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["0.75rem",{"_index":875,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["0.7rem",{"_index":1808,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["0.8",{"_index":939,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["0.82s",{"_index":1435,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.85rem",{"_index":201,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["0.8rem",{"_index":1192,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["0.9",{"_index":974,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["0.9rem",{"_index":187,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["0/1",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["0056b3",{"_index":1428,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["007bff",{"_index":191,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["0–6",{"_index":720,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["1",{"_index":614,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"injectables/WeightedRandomSelectionService.html":{},"overview.html":{}}}],["1.1rem",{"_index":877,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["1.25rem",{"_index":1329,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1.2rem",{"_index":612,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["1.5rem",{"_index":876,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["1.6rem",{"_index":1181,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/TopicsComponent.html":{}}}],["10",{"_index":739,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["10%,90",{"_index":1440,"title":{},"body":{"components/LoginComponent.html":{}}}],["100",{"_index":183,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["1000",{"_index":1314,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["10003",{"_index":1771,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["100vh",{"_index":864,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["100vw",{"_index":863,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["10px",{"_index":200,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{}}}],["11/15",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2077,"title":{},"body":{"overview.html":{}}}],["1200px",{"_index":908,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["123",{"_index":194,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["12px",{"_index":601,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["14",{"_index":1982,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["16",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["18.2.0",{"_index":2043,"title":{},"body":{"dependencies.html":{}}}],["18.2.13",{"_index":2045,"title":{},"body":{"dependencies.html":{}}}],["180",{"_index":919,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["18px",{"_index":1792,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["1a1a1a",{"_index":1331,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["1fr",{"_index":1203,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["1px",{"_index":126,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["1rem",{"_index":131,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["2",{"_index":1162,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["2.3.0",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["20%,80",{"_index":1441,"title":{},"body":{"components/LoginComponent.html":{}}}],["200px",{"_index":953,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["20px",{"_index":940,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["23.9.0",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":1983,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["250px",{"_index":164,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{}}}],["255",{"_index":195,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["2ecc71",{"_index":608,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{}}}],["2px",{"_index":152,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["2rem",{"_index":872,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["3",{"_index":1482,"title":{},"body":{"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["30%,50%,70",{"_index":1443,"title":{},"body":{"components/LoginComponent.html":{}}}],["300px",{"_index":1781,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["30px",{"_index":615,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["333",{"_index":205,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["360px",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["3d",{"_index":906,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["3px",{"_index":1178,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["3rem",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["4",{"_index":1560,"title":{},"body":{"pipes/SearchSortPipe.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["4.4.9",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["4/25",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["40%,60",{"_index":1444,"title":{},"body":{"components/LoginComponent.html":{}}}],["4000",{"_index":1397,"title":{},"body":{"components/LoginComponent.html":{}}}],["40px",{"_index":176,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["450px",{"_index":914,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["48px",{"_index":1419,"title":{},"body":{"components/LoginComponent.html":{}}}],["4caf50",{"_index":1425,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["4px",{"_index":153,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["4s",{"_index":1398,"title":{},"body":{"components/LoginComponent.html":{}}}],["5",{"_index":1163,"title":{},"body":{"components/FlashcardsListComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"overview.html":{}}}],["50",{"_index":602,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["500px",{"_index":954,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["50px",{"_index":965,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{}}}],["5px",{"_index":878,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{}}}],["6",{"_index":759,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["60",{"_index":1984,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["60px",{"_index":893,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["6px",{"_index":129,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["6rem",{"_index":1506,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["7",{"_index":2078,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1330,"title":{},"body":{"components/HeaderComponent.html":{}}}],["700px",{"_index":913,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["70vh",{"_index":1783,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["72rem",{"_index":1324,"title":{},"body":{"components/HeaderComponent.html":{}}}],["73",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["7rem",{"_index":1174,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["8",{"_index":1490,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["84abd4",{"_index":171,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["85px",{"_index":1780,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["8px",{"_index":610,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["90vw",{"_index":1782,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["_",{"_index":2007,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["a:hover",{"_index":1450,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["a[sortkey",{"_index":1566,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["abbrechen",{"_index":57,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["abfeuern",{"_index":1150,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["abgeleitet",{"_index":850,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["abgerundet",{"_index":1779,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["abgeschickt",{"_index":1386,"title":{},"body":{"components/LoginComponent.html":{}}}],["abruch",{"_index":79,"title":{},"body":{"components/AddItemComponent.html":{}}}],["abrufen",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["absolut",{"_index":865,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["absolute",{"_index":600,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["abstand",{"_index":871,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["absteigend",{"_index":1555,"title":{},"body":{"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{}}}],["abzufragen",{"_index":1727,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["account",{"_index":1403,"title":{},"body":{"components/LoginComponent.html":{}}}],["achse",{"_index":921,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["action",{"_index":963,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["actions",{"_index":1183,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["activatedroute",{"_index":667,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["active",{"_index":1910,"title":{},"body":{"components/TopicsComponent.html":{}}}],["activemenuid",{"_index":989,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["actual_component",{"_index":237,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["addflashcard",{"_index":1210,"title":{},"body":{"injectables/GetDataService.html":{}}}],["addflashcard(this.topicid",{"_index":1102,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["addflashcard(topicid",{"_index":1223,"title":{},"body":{"injectables/GetDataService.html":{}}}],["additemcomponent",{"_index":1,"title":{"components/AddItemComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["addsubtopic",{"_index":1211,"title":{},"body":{"injectables/GetDataService.html":{}}}],["addsubtopic(topicid",{"_index":1226,"title":{},"body":{"injectables/GetDataService.html":{}}}],["addsubtopichandler",{"_index":1585,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["addsubtopichandler(undefined",{"_index":1591,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["addtodo",{"_index":1702,"title":{},"body":{"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{}}}],["addtodo(text",{"_index":1816,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["addtopic",{"_index":1212,"title":{},"body":{"injectables/GetDataService.html":{}}}],["addtopic(name",{"_index":1228,"title":{},"body":{"injectables/GetDataService.html":{}}}],["addtopichandler",{"_index":1839,"title":{},"body":{"components/TopicsComponent.html":{}}}],["addtopichandler(undefined",{"_index":1847,"title":{},"body":{"components/TopicsComponent.html":{}}}],["afterviewinit",{"_index":634,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["aktionen",{"_index":1182,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["aktiv",{"_index":549,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["aktualisieren",{"_index":1764,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["aktualisiert",{"_index":771,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["aktuell",{"_index":533,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["aktuelle",{"_index":1636,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["aktuellen",{"_index":1060,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["aktueller",{"_index":718,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["aktuelles",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["algorithmus",{"_index":751,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["alias",{"_index":1556,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["aliase",{"_index":835,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["align",{"_index":135,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["allcards",{"_index":990,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["alle",{"_index":714,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/InfoComponent.html":{},"pipes/SearchSortPipe.html":{}}}],["allem",{"_index":1315,"title":{},"body":{"components/HeaderComponent.html":{}}}],["allen",{"_index":1140,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["aller",{"_index":1735,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["alles",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{}}}],["allowed",{"_index":1512,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["alphabetisch",{"_index":1691,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["als",{"_index":351,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["alten",{"_index":802,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["an/aus",{"_index":1306,"title":{},"body":{"components/HeaderComponent.html":{}}}],["anderes",{"_index":590,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["anfunken",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["angelegt",{"_index":1883,"title":{},"body":{"components/TopicsComponent.html":{}}}],["angezeigte",{"_index":717,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["angular",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/ToDoFlashcardComponent.html":{}}}],["angular/animations",{"_index":2042,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":96,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["angular/compiler",{"_index":2044,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":99,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":100,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2046,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"dependencies.html":{}}}],["anhand",{"_index":1523,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["animation",{"_index":833,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{}}}],["anlegen",{"_index":1656,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["anmelden",{"_index":1505,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["ans",{"_index":1107,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{}}}],["ansicht",{"_index":858,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["ansprechen",{"_index":1473,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["answer",{"_index":1119,"title":{},"body":{"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"interfaces/IFlashcard.html":{}}}],["antwort",{"_index":621,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["antworten",{"_index":964,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["anwendung",{"_index":1352,"title":{},"body":{"components/InfoComponent.html":{}}}],["anzahl",{"_index":721,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["anzeige",{"_index":104,"title":{},"body":{"components/AddItemComponent.html":{}}}],["anzeigen",{"_index":767,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["api",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{}}}],["apibase",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["apiurl",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"index.html":{}}}],["app.component.css",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["app/features/to",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":212,"title":{"components/AppComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appenden",{"_index":1659,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["applicationconfig",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecay",{"_index":1938,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["applydecay(card",{"_index":1943,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["arial",{"_index":1171,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["array",{"_index":744,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["array.from",{"_index":2004,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["arrows",{"_index":935,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["asc",{"_index":1047,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["ascending",{"_index":1553,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["auf",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{}}}],["aufbauen",{"_index":1474,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["aufgabe",{"_index":1798,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["aufgerufen",{"_index":1385,"title":{},"body":{"components/LoginComponent.html":{}}}],["aufs",{"_index":1297,"title":{},"body":{"components/HeaderComponent.html":{}}}],["aufsetzen",{"_index":1884,"title":{},"body":{"components/TopicsComponent.html":{}}}],["aufsteigend",{"_index":1554,"title":{},"body":{"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["aus",{"_index":367,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["ausblenden",{"_index":1400,"title":{},"body":{"components/LoginComponent.html":{}}}],["ausgeführt",{"_index":1492,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["ausserhalb",{"_index":1648,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["auswahl",{"_index":848,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["auth",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["auth/auth.service",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auth_token",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":254,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":310,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["authorization",{"_index":371,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authreq",{"_index":374,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":260,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{},"coverage.html":{}}}],["auto",{"_index":166,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/HeaderComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["available",{"_index":2011,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["aval",{"_index":1565,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["b",{"_index":1564,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["b[sortkey",{"_index":1568,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["back",{"_index":868,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["backend",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"miscellaneous/variables.html":{}}}],["backface",{"_index":926,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["background",{"_index":121,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["backgroundcolor",{"_index":814,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["bar",{"_index":947,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["base",{"_index":1209,"title":{},"body":{"injectables/GetDataService.html":{}}}],["baseurl",{"_index":1813,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["basis",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["beantworteter",{"_index":723,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["bearbeiten",{"_index":1165,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["bearbeiteten",{"_index":1123,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["bearer",{"_index":377,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["beenden",{"_index":846,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["begrenzen",{"_index":1325,"title":{},"body":{"components/HeaderComponent.html":{}}}],["behalten",{"_index":1540,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["behandeln",{"_index":1499,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["behavior",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["behaviorsubject",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{}}}],["behaviorsubject(null",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["bei",{"_index":87,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{}}}],["beim",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["bekommt",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/ToDoFlashcardComponent.html":{}}}],["benutzername",{"_index":1406,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["benutzt",{"_index":1879,"title":{},"body":{"components/TopicsComponent.html":{}}}],["ber",{"_index":357,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["berall",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["berechnet",{"_index":1536,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["bereich",{"_index":888,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/SubtopicsComponent.html":{}}}],["bereits",{"_index":1504,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["berschrift",{"_index":976,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["beschreibung",{"_index":59,"title":{},"body":{"components/AddItemComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{}}}],["beschreibungs",{"_index":69,"title":{},"body":{"components/AddItemComponent.html":{}}}],["bestätigung",{"_index":1131,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/TopicsComponent.html":{}}}],["between",{"_index":1191,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["beue",{"_index":1693,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["bezier(.36,.07,.19,.97",{"_index":1437,"title":{},"body":{"components/LoginComponent.html":{}}}],["bg",{"_index":124,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["bissl",{"_index":1317,"title":{},"body":{"components/HeaderComponent.html":{}}}],["black",{"_index":1784,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["blau",{"_index":1508,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["blaue",{"_index":1420,"title":{},"body":{"components/LoginComponent.html":{}}}],["block",{"_index":118,"title":{},"body":{"components/AddItemComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TopicsComponent.html":{}}}],["blöcken",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{}}}],["bold",{"_index":178,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["boolean",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/EditableCardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/RegisterData.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["border",{"_index":125,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["both",{"_index":1438,"title":{},"body":{"components/LoginComponent.html":{}}}],["bottom",{"_index":626,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["box",{"_index":149,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["braucht",{"_index":1481,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["break",{"_index":157,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["breite",{"_index":957,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["brightness(0.9",{"_index":971,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["browser",{"_index":2047,"title":{},"body":{"dependencies.html":{}}}],["bschreibungs",{"_index":62,"title":{},"body":{"components/AddItemComponent.html":{}}}],["btn",{"_index":203,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{}}}],["btn.correct",{"_index":969,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["btn.mode",{"_index":883,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["btn.wrong",{"_index":968,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["btn:hover",{"_index":970,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["build",{"_index":1145,"title":{},"body":{"components/FlashcardsListComponent.html":{},"index.html":{}}}],["builder",{"_index":1468,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["button",{"_index":56,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["button','input','textarea'].includes((e.target",{"_index":1652,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["button/input",{"_index":1649,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["button:active",{"_index":1335,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["button:disabled",{"_index":1511,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["button:hover",{"_index":202,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["buttons",{"_index":869,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["buttontext",{"_index":39,"title":{},"body":{"components/AddItemComponent.html":{}}}],["bval",{"_index":1567,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["c.id",{"_index":1127,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["c.learningprogress",{"_index":762,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["cached",{"_index":1885,"title":{},"body":{"components/TopicsComponent.html":{}}}],["calc(100vw",{"_index":952,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["call",{"_index":1497,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["calls",{"_index":1146,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["calls.length",{"_index":1685,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["canactivate",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":33,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["cancelediting",{"_index":997,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["canceltext",{"_index":40,"title":{},"body":{"components/AddItemComponent.html":{}}}],["canvas",{"_index":977,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["card",{"_index":120,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["card'},{'name",{"_index":215,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["card.add",{"_index":119,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["card.answer",{"_index":1115,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["card.component",{"_index":1058,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["card.component.css",{"_index":559,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["card.component.html",{"_index":560,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["card.component.ts",{"_index":556,"title":{},"body":{"components/EditableCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:19",{"_index":567,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["card.component.ts:20",{"_index":568,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["card.component.ts:22",{"_index":570,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["card.component.ts:23",{"_index":569,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["card.component.ts:25",{"_index":575,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["card.component.ts:30",{"_index":573,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["card.id",{"_index":789,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["card.learningprogress",{"_index":784,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["card.question",{"_index":1113,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["card/editable",{"_index":555,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["card:hover",{"_index":167,"title":{},"body":{"components/AddItemComponent.html":{}}}],["cardclick",{"_index":565,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["cardid",{"_index":1016,"title":{},"body":{"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{}}}],["cards",{"_index":749,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["cards.map(c",{"_index":1683,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["cardssub",{"_index":991,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["case",{"_index":1975,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["catcherror",{"_index":1617,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["center",{"_index":140,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["change",{"_index":1534,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["changeprogress",{"_index":651,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["changeprogress(delta",{"_index":669,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["chars",{"_index":1483,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["chart",{"_index":638,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["chart(ctx",{"_index":809,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["chart.js",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["chart.js/auto",{"_index":713,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["check",{"_index":1789,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["checkbox",{"_index":1786,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["circle",{"_index":1790,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["circle:hover",{"_index":1793,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["clamp",{"_index":780,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["class",{"_index":102,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["clickable",{"_index":1328,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clicks",{"_index":836,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["client",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["close",{"_index":652,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["closemenu",{"_index":998,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["color",{"_index":122,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["colors",{"_index":847,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["column",{"_index":134,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["columns",{"_index":1199,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["complete",{"_index":1922,"title":{},"body":{"components/TopicsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":210,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"overview.html":{}}}],["concurrently",{"_index":2067,"title":{},"body":{"index.html":{}}}],["confirm('möchtest",{"_index":1141,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["confirm('soll",{"_index":1132,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["confirm('willst",{"_index":1916,"title":{},"body":{"components/TopicsComponent.html":{}}}],["confirm('wirklich",{"_index":1680,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["console.error",{"_index":1915,"title":{},"body":{"components/TopicsComponent.html":{}}}],["console.error('fehler",{"_index":1678,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["console.error('oops",{"_index":1662,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["console.log('flashcards",{"_index":2000,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["console.log('navigiere",{"_index":1088,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["console.log('weights",{"_index":2003,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["const",{"_index":366,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["constructor",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"components/TopicsComponent.html":{}}}],["constructor(auth",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(http",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"injectables/ToDoService.html":{}}}],["constructor(private",{"_index":353,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["constructor(rendererfactory",{"_index":503,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["constructor(route",{"_index":1008,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["constructor(router",{"_index":1279,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationComponent.html":{}}}],["constructor(service",{"_index":663,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["constructor(themenservice",{"_index":1844,"title":{},"body":{"components/TopicsComponent.html":{}}}],["constructor(todoservice",{"_index":1707,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["container",{"_index":857,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["content",{"_index":139,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["core/models/iflashcard",{"_index":709,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["core/models/isubtopic",{"_index":1616,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["core/models/itopic",{"_index":1875,"title":{},"body":{"components/TopicsComponent.html":{}}}],["core/services/auth/auth.service",{"_index":1293,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["core/services/dark",{"_index":1291,"title":{},"body":{"components/HeaderComponent.html":{}}}],["core/services/getdataservices/get",{"_index":707,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["core/services/selection/weighted",{"_index":710,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["core/services/todo/to",{"_index":1725,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["correctcount",{"_index":639,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["correctcount/totalcount)*100)|number:'1.0",{"_index":844,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["correctcount/totalcount)*100)|number:\\'1.0",{"_index":979,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["counters",{"_index":819,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["coverage",{"_index":2013,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":1658,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["credentials",{"_index":402,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"coverage.html":{}}}],["css",{"_index":515,"title":{},"body":{"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{}}}],["ctx",{"_index":807,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["cubic",{"_index":1436,"title":{},"body":{"components/LoginComponent.html":{}}}],["currentflashcard",{"_index":640,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["currentflashcard?.answer",{"_index":841,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["currentflashcard?.question",{"_index":840,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["currentposition",{"_index":1933,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["cursor",{"_index":143,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["d32f2f",{"_index":1434,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["da",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["damit",{"_index":323,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{}}}],["dann",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"interfaces/RegisterData.html":{}}}],["darf",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditableCardComponent.html":{}}}],["dark",{"_index":509,"title":{},"body":{"injectables/DarkModeService.html":{},"components/HeaderComponent.html":{}}}],["darkclass",{"_index":498,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["darkmodekey",{"_index":499,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["darkmodeservice",{"_index":494,"title":{"injectables/DarkModeService.html":{}},"body":{"injectables/DarkModeService.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["darkred",{"_index":1807,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["darüberfahren",{"_index":1775,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["das",{"_index":327,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["dashed",{"_index":629,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["dass",{"_index":325,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["data",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"components/TopicsComponent.html":{}}}],["data.description",{"_index":1104,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["data.name",{"_index":1103,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["data.service",{"_index":708,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["data.service.ts",{"_index":1208,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["data.service.ts:109",{"_index":1245,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:12",{"_index":1222,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:17",{"_index":1240,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:21",{"_index":1229,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:28",{"_index":1249,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:35",{"_index":1235,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:40",{"_index":1239,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:44",{"_index":1227,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:51",{"_index":1247,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:62",{"_index":1233,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:69",{"_index":1237,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:75",{"_index":1225,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:87",{"_index":1243,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:99",{"_index":1231,"title":{},"body":{"injectables/GetDataService.html":{}}}],["datasets",{"_index":813,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["date.now",{"_index":1969,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["daten",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"interfaces/RegisterData.html":{}}}],["datenstruktur",{"_index":1724,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["db",{"_index":778,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["decoration",{"_index":1448,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["decorator",{"_index":322,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["decorators",{"_index":700,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":52,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["deklariert",{"_index":1728,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["dekorator",{"_index":345,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["delete",{"_index":1805,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["deletecard",{"_index":999,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["deletecard(cardid",{"_index":1013,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["deleteflashcard",{"_index":1213,"title":{},"body":{"injectables/GetDataService.html":{}}}],["deleteflashcard(this.topicid",{"_index":1136,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["deleteflashcard(topicid",{"_index":1230,"title":{},"body":{"injectables/GetDataService.html":{}}}],["deletesubtopic",{"_index":1214,"title":{},"body":{"injectables/GetDataService.html":{}}}],["deletesubtopic(topicid",{"_index":1232,"title":{},"body":{"injectables/GetDataService.html":{}}}],["deletetodo",{"_index":1703,"title":{},"body":{"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{}}}],["deletetodo(id",{"_index":1818,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["deletetodo(todo",{"_index":1711,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["deletetopic",{"_index":1215,"title":{},"body":{"injectables/GetDataService.html":{},"components/TopicsComponent.html":{}}}],["deletetopic(id",{"_index":1234,"title":{},"body":{"injectables/GetDataService.html":{},"components/TopicsComponent.html":{}}}],["delta",{"_index":672,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["dem",{"_index":978,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{}}}],["den",{"_index":347,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["dependencies",{"_index":2041,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependenciesmaybe",{"_index":2063,"title":{},"body":{"index.html":{}}}],["dependency",{"_index":358,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["der",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/InfoComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["deren",{"_index":756,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["des",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/ToDoFlashcardComponent.html":{}}}],["description",{"_index":111,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["description).subscribe",{"_index":1921,"title":{},"body":{"components/TopicsComponent.html":{}}}],["dessen",{"_index":956,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["destroy",{"_index":1075,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["detection",{"_index":1535,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["dev",{"_index":2069,"title":{},"body":{"index.html":{}}}],["di",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["die",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/InfoComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["diese",{"_index":1133,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["dieses",{"_index":1086,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["ding",{"_index":349,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["direction",{"_index":133,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["directive",{"_index":209,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["directives",{"_index":236,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["direkt",{"_index":796,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/RegistrationComponent.html":{},"components/TopicsComponent.html":{}}}],["display",{"_index":117,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["do.service",{"_index":1726,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["do.service.ts",{"_index":1811,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["do.service.ts:17",{"_index":1815,"title":{},"body":{"injectables/ToDoService.html":{}}}],["do.service.ts:21",{"_index":1820,"title":{},"body":{"injectables/ToDoService.html":{}}}],["do.service.ts:25",{"_index":1817,"title":{},"body":{"injectables/ToDoService.html":{}}}],["do.service.ts:33",{"_index":1822,"title":{},"body":{"injectables/ToDoService.html":{}}}],["do.service.ts:41",{"_index":1819,"title":{},"body":{"injectables/ToDoService.html":{}}}],["doch",{"_index":1502,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["document.documentelement",{"_index":529,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["documentation",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["done",{"_index":1799,"title":{},"body":{"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["dos",{"_index":1770,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["dot",{"_index":599,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["doughnut",{"_index":799,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["dran",{"_index":373,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["drauf",{"_index":1929,"title":{},"body":{"components/TopicsComponent.html":{}}}],["dreht",{"_index":918,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["drei",{"_index":896,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["dreiecke",{"_index":936,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["drücken",{"_index":1777,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["du",{"_index":1142,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/InfoComponent.html":{},"components/TopicsComponent.html":{}}}],["dunkel",{"_index":534,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["dunkelklasse",{"_index":542,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["dunkelmodus",{"_index":517,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["dunkler",{"_index":1806,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["dunkleres",{"_index":1426,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["durchgestrichen",{"_index":1795,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["durchsuchen",{"_index":1539,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["durchsucht",{"_index":1527,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["dynamic",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["dynamisch",{"_index":958,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["e",{"_index":1014,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["e.stoppropagation",{"_index":1097,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["e.target",{"_index":1094,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["e6f0ff",{"_index":1794,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["e6f7ff",{"_index":1186,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["e74c3c",{"_index":604,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{}}}],["ease",{"_index":147,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["ebene",{"_index":1019,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["echtes",{"_index":1557,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["edges",{"_index":951,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["edit",{"_index":578,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["edit/delete",{"_index":1069,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["editable",{"_index":162,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["editablecardcomponent",{"_index":214,"title":{"components/EditableCardComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["editedanswer",{"_index":992,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["editedquestion",{"_index":993,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["editedsubtopicdescription",{"_index":1580,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["editedsubtopicname",{"_index":1581,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["editedtopicdescription",{"_index":1832,"title":{},"body":{"components/TopicsComponent.html":{}}}],["editedtopicname",{"_index":1833,"title":{},"body":{"components/TopicsComponent.html":{}}}],["editiert",{"_index":1882,"title":{},"body":{"components/TopicsComponent.html":{}}}],["editierten",{"_index":1072,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["editing",{"_index":563,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["editingcardid",{"_index":994,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["editingsubtopicid",{"_index":1582,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["editingtopicid",{"_index":1834,"title":{},"body":{"components/TopicsComponent.html":{}}}],["edits",{"_index":1116,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["effekt",{"_index":1185,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["eigenem",{"_index":1722,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["ein",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{}}}],["eine",{"_index":1018,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["einer",{"_index":1804,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["eines",{"_index":1758,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["einfache",{"_index":1357,"title":{},"body":{"components/InfoComponent.html":{}}}],["eingabe",{"_index":106,"title":{},"body":{"components/AddItemComponent.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["eingabefeld",{"_index":1751,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["eingabewert",{"_index":1380,"title":{},"body":{"components/LoginComponent.html":{}}}],["eingeblendet",{"_index":582,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["element",{"_index":208,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["elemente",{"_index":1099,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["elementref",{"_index":699,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["email",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/IUserData.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{}}}],["emit",{"_index":86,"title":{},"body":{"components/AddItemComponent.html":{}}}],["encapsulation",{"_index":557,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["ende",{"_index":1108,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{}}}],["endlos",{"_index":728,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["endpoints",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["endscreen",{"_index":641,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["entferne",{"_index":1137,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["entfernen",{"_index":535,"title":{},"body":{"injectables/DarkModeService.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{}}}],["enthalten",{"_index":1541,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["enthält",{"_index":1723,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["env",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["environment",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{}}}],["environment.apiurl}/todos",{"_index":1823,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["environments/environment",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["er",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["erfolg",{"_index":1501,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["erfolgreich",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["erfolgreichem",{"_index":1392,"title":{},"body":{"components/LoginComponent.html":{}}}],["ergebnis",{"_index":843,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["erlauben",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{}}}],["erledigt",{"_index":1759,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["erledigte",{"_index":1797,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["err",{"_index":1661,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["error",{"_index":1393,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["ersetze",{"_index":1124,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["ersetzen",{"_index":1673,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["erstellen",{"_index":1356,"title":{},"body":{"components/InfoComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["erzeugen",{"_index":518,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["etwas",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{}}}],["event",{"_index":73,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["event.stoppropagation",{"_index":587,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["eventcoalescing",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":71,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["eventemitter();//event",{"_index":583,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["export",{"_index":101,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["f1c40f",{"_index":606,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["f5f5f5",{"_index":204,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["fallback",{"_index":734,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/SubtopicsComponent.html":{}}}],["falls",{"_index":768,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["falsch",{"_index":812,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["false",{"_index":91,"title":{},"body":{"components/AddItemComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1170,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["farbe",{"_index":1334,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["fb",{"_index":1460,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["fc",{"_index":1950,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["fc.foreach(c",{"_index":1971,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["fc.length",{"_index":2006,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["fc.map(c",{"_index":1966,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["fc.map(card",{"_index":2001,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["features/to",{"_index":1294,"title":{},"body":{"components/HeaderComponent.html":{}}}],["feedback",{"_index":1337,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["fehler",{"_index":1391,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["fehler/erfolg",{"_index":1498,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["fehlermeldung",{"_index":1395,"title":{},"body":{"components/LoginComponent.html":{}}}],["fehlernachricht",{"_index":1429,"title":{},"body":{"components/LoginComponent.html":{}}}],["fehlgeschlagen",{"_index":1383,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["feld",{"_index":63,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{}}}],["felder",{"_index":579,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{}}}],["fest",{"_index":1778,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["feste",{"_index":909,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["fff",{"_index":966,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["ffffff",{"_index":1316,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["ffne",{"_index":89,"title":{},"body":{"components/AddItemComponent.html":{}}}],["ffnet",{"_index":1746,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{}}}],["fill",{"_index":955,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["filter",{"_index":967,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["filtered",{"_index":1544,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["filtered.sort((a",{"_index":1563,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["filteredtopics",{"_index":1835,"title":{},"body":{"components/TopicsComponent.html":{}}}],["filtern",{"_index":1878,"title":{},"body":{"components/TopicsComponent.html":{}}}],["filtert",{"_index":1521,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["finde",{"_index":1122,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["findest",{"_index":1349,"title":{},"body":{"components/InfoComponent.html":{}}}],["fit",{"_index":1201,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["fixed",{"_index":1311,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["flag",{"_index":1382,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TopicsComponent.html":{}}}],["flashcard",{"_index":217,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["flashcard'},{'name",{"_index":233,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["flashcard.component",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["flashcard.component.css",{"_index":1697,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.html",{"_index":1698,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts",{"_index":1696,"title":{},"body":{"components/ToDoFlashcardComponent.html":{},"coverage.html":{}}}],["flashcard.component.ts:22",{"_index":1721,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts:25",{"_index":1720,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts:28",{"_index":1709,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts:33",{"_index":1719,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts:37",{"_index":1715,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts:42",{"_index":1714,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts:50",{"_index":1718,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts:55",{"_index":1710,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts:67",{"_index":1717,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard.component.ts:75",{"_index":1713,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["flashcard/to",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{},"coverage.html":{}}}],["flashcardlist",{"_index":1168,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["flashcardpreviewcomponent",{"_index":216,"title":{"components/FlashcardPreviewComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["flashcards",{"_index":220,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/ISubtopic.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["flashcardslistcomponent",{"_index":219,"title":{"components/FlashcardsListComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["flex",{"_index":132,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["fliegt",{"_index":1081,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["flip",{"_index":832,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["flipped",{"_index":917,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["focus",{"_index":627,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/TopicsComponent.html":{}}}],["fokus",{"_index":1928,"title":{},"body":{"components/TopicsComponent.html":{}}}],["fokussierter",{"_index":1196,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{}}}],["font",{"_index":174,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["forkjoin",{"_index":1059,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["forkjoin(calls",{"_index":1686,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["forkjoin(calls).subscribe",{"_index":1153,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["form",{"_index":180,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["format",{"_index":1066,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{}}}],["formbuilder",{"_index":1461,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["formgroup",{"_index":1465,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["forms",{"_index":1374,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["formsmodule",{"_index":22,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["formulaar",{"_index":105,"title":{},"body":{"components/AddItemComponent.html":{}}}],["formular",{"_index":90,"title":{},"body":{"components/AddItemComponent.html":{},"components/LoginComponent.html":{}}}],["formularfelder",{"_index":625,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["fortschritt",{"_index":730,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["frage",{"_index":620,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["fragen",{"_index":1156,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["fragt",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{}}}],["front",{"_index":928,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["full",{"_index":860,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{}}}],["funzt",{"_index":348,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["färbt",{"_index":1809,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["fügt",{"_index":1749,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["füllen",{"_index":1110,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["für",{"_index":55,"title":{},"body":{"components/AddItemComponent.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"miscellaneous/variables.html":{}}}],["fürs",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{}}}],["gap",{"_index":184,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["gefilterte",{"_index":1574,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["gefiltertes",{"_index":1528,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["gehovt",{"_index":1880,"title":{},"body":{"components/TopicsComponent.html":{}}}],["geklickt",{"_index":584,"title":{},"body":{"components/EditableCardComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["geladen",{"_index":1741,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["geladenen",{"_index":1063,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["gelöscht",{"_index":1135,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["gemeinsamer",{"_index":873,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["gerade",{"_index":716,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/TopicsComponent.html":{}}}],["gesamtzahl",{"_index":725,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["gescrollt",{"_index":1299,"title":{},"body":{"components/HeaderComponent.html":{}}}],["gesetzt",{"_index":959,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/SubtopicsComponent.html":{}}}],["gespeicherte",{"_index":547,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["gespeichertes",{"_index":522,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["gestartet",{"_index":1877,"title":{},"body":{"components/TopicsComponent.html":{}}}],["getdataservice",{"_index":664,"title":{"injectables/GetDataService.html":{}},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["getflashcards",{"_index":1216,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getflashcards(this.topicid",{"_index":1079,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["getflashcards(topicid",{"_index":1236,"title":{},"body":{"injectables/GetDataService.html":{}}}],["gethistory",{"_index":1939,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["getsubtopics",{"_index":1217,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getsubtopics(topicid",{"_index":1238,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getting",{"_index":2058,"title":{"index.html":{}},"body":{}}],["gettodos",{"_index":1814,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["gettoken",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["gettopics",{"_index":1218,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getweightforprogress",{"_index":1940,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["getweightforprogress(progress",{"_index":1946,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["gezeichnet",{"_index":804,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["gleich",{"_index":897,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/TopicsComponent.html":{}}}],["gleiche",{"_index":158,"title":{},"body":{"components/AddItemComponent.html":{}}}],["goback",{"_index":1000,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["grad",{"_index":1625,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["grau",{"_index":1796,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["gray",{"_index":1802,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["green",{"_index":607,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["grid",{"_index":1198,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["group",{"_index":197,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["große",{"_index":898,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["grundstyle",{"_index":1184,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{}}}],["gruppen",{"_index":1193,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/TopicsComponent.html":{}}}],["größe",{"_index":910,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{}}}],["grün",{"_index":1427,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["grüne",{"_index":1423,"title":{},"body":{"components/LoginComponent.html":{}}}],["guard",{"_index":253,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gucken",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["gut",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":1180,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["h2",{"_index":622,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/TopicsComponent.html":{}}}],["handler",{"_index":364,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["hat",{"_index":1404,"title":{},"body":{"components/LoginComponent.html":{},"components/SubtopicsComponent.html":{}}}],["haupt",{"_index":1166,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["hauptfeatures",{"_index":1353,"title":{},"body":{"components/InfoComponent.html":{}}}],["header",{"_index":372,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["header'},{'name",{"_index":223,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["header.component.css",{"_index":1270,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1271,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.scrolled",{"_index":1320,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/back",{"_index":895,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["headercomponent",{"_index":222,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["height",{"_index":163,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["hell",{"_index":527,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["hidden",{"_index":930,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["hier",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["hintergrund",{"_index":1424,"title":{},"body":{"components/LoginComponent.html":{}}}],["hinzu",{"_index":1750,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["hinzufüen",{"_index":543,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["hinzufügen",{"_index":51,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["hinzugefügt",{"_index":75,"title":{},"body":{"components/AddItemComponent.html":{}}}],["history",{"_index":1934,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["hoch",{"_index":1161,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["holen",{"_index":354,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{}}}],["holt",{"_index":1620,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["host",{"_index":116,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardPreviewComponent.html":{}}}],["hostlistener",{"_index":1290,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hostlistener('window:scroll",{"_index":1285,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hostlisteners",{"_index":1277,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hover",{"_index":168,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["hoveredid",{"_index":1836,"title":{},"body":{"components/TopicsComponent.html":{}}}],["html",{"_index":207,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["htmlelement",{"_index":528,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["htmlelement).tagname",{"_index":1653,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["htmlelement.classlist.contains(this.darkclass",{"_index":531,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["htmlinputelement).value",{"_index":1899,"title":{},"body":{"components/TopicsComponent.html":{}}}],["htmlselectelement).value",{"_index":1095,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["http",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["http://localhost:3100/api",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["httpevent",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":318,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":316,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["hält",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["häng",{"_index":370,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["hängen",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{}}}],["höhe",{"_index":160,"title":{},"body":{"components/AddItemComponent.html":{}}}],["höhere",{"_index":1098,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["hört",{"_index":1296,"title":{},"body":{"components/HeaderComponent.html":{}}}],["i).filter(i",{"_index":1990,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["ich",{"_index":1379,"title":{},"body":{"components/LoginComponent.html":{}}}],["icon",{"_index":173,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/HeaderComponent.html":{}}}],["id",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{}}}],["identifier",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":1125,"title":{},"body":{"components/FlashcardsListComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["iflashcard",{"_index":690,"title":{"interfaces/IFlashcard.html":{}},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"components/SubtopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{}}}],["ihre",{"_index":1729,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["im",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["immer",{"_index":1312,"title":{},"body":{"components/HeaderComponent.html":{},"components/TopicsComponent.html":{}}}],["immutable",{"_index":363,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["implementiert",{"_index":352,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["implements",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["import",{"_index":95,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["imports",{"_index":20,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["includes(term",{"_index":1549,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["index",{"_index":27,"title":{"index.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"miscellaneous/variables.html":{}}}],["inf",{"_index":851,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["infinite",{"_index":683,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["infinite:hover",{"_index":884,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["info'},{'name",{"_index":225,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["info.component.css",{"_index":1346,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.html",{"_index":1345,"title":{},"body":{"components/InfoComponent.html":{}}}],["infocomponent",{"_index":224,"title":{"components/InfoComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["informationen",{"_index":1351,"title":{},"body":{"components/InfoComponent.html":{}}}],["infoseite",{"_index":1347,"title":{},"body":{"components/InfoComponent.html":{}}}],["inhalt",{"_index":1176,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["inherit",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["initial",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{}}}],["initialisieren",{"_index":752,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["initialize",{"_index":1941,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["initialize(fc",{"_index":1948,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["injectable",{"_index":268,"title":{"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"injectables/GetDataService.html":{},"injectables/ToDoService.html":{},"injectables/WeightedRandomSelectionService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{}}}],["injectables",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"injectables/GetDataService.html":{},"injectables/ToDoService.html":{},"injectables/WeightedRandomSelectionService.html":{},"overview.html":{}}}],["injection",{"_index":359,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["inline",{"_index":198,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["input",{"_index":97,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["input:focus",{"_index":189,"title":{},"body":{"components/AddItemComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{}}}],["inputcheck",{"_index":1367,"title":{},"body":{"components/LoginComponent.html":{}}}],["inputpassword",{"_index":1364,"title":{},"body":{"components/LoginComponent.html":{}}}],["inputs",{"_index":38,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["inputusername",{"_index":1365,"title":{},"body":{"components/LoginComponent.html":{}}}],["ins",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{}}}],["install",{"_index":2062,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":313,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":315,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":309,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":311,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":269,"title":{"interfaces/Credentials.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"interfaces/RegisterData.html":{},"interfaces/Todo.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["interfaces",{"_index":493,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"interfaces/RegisterData.html":{},"interfaces/Todo.html":{},"overview.html":{}}}],["invalid",{"_index":1493,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["invisible",{"_index":927,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["isaddingtopic",{"_index":1837,"title":{},"body":{"components/TopicsComponent.html":{}}}],["isdark",{"_index":642,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["isdarkmode",{"_index":550,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["isflipped",{"_index":643,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["isloggedin",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["ist",{"_index":532,"title":{},"body":{"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["istoggled",{"_index":1339,"title":{},"body":{"interfaces/IFlashcard.html":{}}}],["isubtopic",{"_index":1252,"title":{"interfaces/ISubtopic.html":{}},"body":{"injectables/GetDataService.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"components/SubtopicsComponent.html":{},"coverage.html":{}}}],["item",{"_index":17,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["item'},{'name",{"_index":211,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["item.component",{"_index":1056,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["item.component.css",{"_index":24,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.html",{"_index":26,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts",{"_index":12,"title":{},"body":{"components/AddItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:14",{"_index":65,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:16",{"_index":70,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:18",{"_index":60,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:20",{"_index":67,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:22",{"_index":53,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:24",{"_index":58,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:27",{"_index":72,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:29",{"_index":92,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:30",{"_index":94,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:31",{"_index":93,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:34",{"_index":88,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:39",{"_index":85,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:46",{"_index":78,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item.component.ts:51",{"_index":83,"title":{},"body":{"components/AddItemComponent.html":{}}}],["item/add",{"_index":11,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["items",{"_index":136,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["items.filter(item",{"_index":1545,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["itopic",{"_index":1250,"title":{"interfaces/ITopic.html":{}},"body":{"injectables/GetDataService.html":{},"interfaces/ITopic.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["iuserdata",{"_index":1342,"title":{"interfaces/IUserData.html":{}},"body":{"interfaces/IUserData.html":{},"coverage.html":{}}}],["jede",{"_index":1204,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["jeder",{"_index":1533,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["jeweils",{"_index":925,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["json",{"_index":2066,"title":{},"body":{"index.html":{}}}],["justify",{"_index":138,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["kann",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["karte",{"_index":585,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["karteikarten",{"_index":1155,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/InfoComponent.html":{}}}],["karten",{"_index":724,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/TopicsComponent.html":{}}}],["kasten",{"_index":1925,"title":{},"body":{"components/TopicsComponent.html":{}}}],["kein",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["keinen",{"_index":1402,"title":{},"body":{"components/LoginComponent.html":{}}}],["key",{"_index":1526,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["keyframes",{"_index":1439,"title":{},"body":{"components/LoginComponent.html":{}}}],["keyof",{"_index":1538,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["keys",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"pipes/SearchSortPipe.html":{}}}],["killen",{"_index":821,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["kinder",{"_index":867,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["klasse",{"_index":516,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["kleben",{"_index":1313,"title":{},"body":{"components/HeaderComponent.html":{}}}],["kleiner",{"_index":1776,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["klick",{"_index":588,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["klickbar",{"_index":1787,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["kommen",{"_index":1637,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["kommt",{"_index":934,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["komponente",{"_index":1378,"title":{},"body":{"components/LoginComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["konsistente",{"_index":855,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["konstruktor",{"_index":1738,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["kontakt",{"_index":1358,"title":{},"body":{"components/InfoComponent.html":{}}}],["kontext",{"_index":580,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["konto",{"_index":1407,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["kopier",{"_index":369,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["kopieren",{"_index":1550,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["korrekt",{"_index":722,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["korrekte",{"_index":793,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["kram",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["kreis",{"_index":1785,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["krieg",{"_index":1646,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["label",{"_index":61,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["label+feld",{"_index":1927,"title":{},"body":{"components/TopicsComponent.html":{}}}],["label+input",{"_index":1194,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["labeldescription",{"_index":41,"title":{},"body":{"components/AddItemComponent.html":{}}}],["labelname",{"_index":42,"title":{},"body":{"components/AddItemComponent.html":{}}}],["labels",{"_index":810,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["lade",{"_index":1631,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["laden",{"_index":524,"title":{},"body":{"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["last",{"_index":1980,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["lastreviewed",{"_index":1935,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["layout",{"_index":861,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["leak",{"_index":1083,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["learningprogress",{"_index":644,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"interfaces/IFlashcard.html":{},"pipes/SearchSortPipe.html":{}}}],["learningprogress}}/6",{"_index":842,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["leer",{"_index":1752,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["leeres",{"_index":1643,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["left",{"_index":597,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["left_arrow",{"_index":937,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["left_arrow:hover",{"_index":942,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["leftclicked",{"_index":645,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["legend",{"_index":206,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["leichter",{"_index":1421,"title":{},"body":{"components/LoginComponent.html":{}}}],["leichtes",{"_index":1773,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["leiten",{"_index":1902,"title":{},"body":{"components/TopicsComponent.html":{}}}],["length",{"_index":2005,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["lernen",{"_index":845,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["lernender",{"_index":727,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["lernfortschritt",{"_index":719,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["lernmodus",{"_index":1085,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["lernstand",{"_index":1159,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["lernstände",{"_index":1143,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["lesen",{"_index":733,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["letzte",{"_index":1891,"title":{},"body":{"components/TopicsComponent.html":{}}}],["liefert",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["liegt",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["lim",{"_index":852,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["limited",{"_index":684,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["limited:hover",{"_index":886,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["line",{"_index":1800,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["link",{"_index":1447,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["linke",{"_index":900,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["links",{"_index":973,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["list",{"_index":984,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list'},{'name",{"_index":221,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["list.component.css",{"_index":987,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.html",{"_index":988,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts",{"_index":982,"title":{},"body":{"components/FlashcardsListComponent.html":{},"coverage.html":{}}}],["list.component.ts:101",{"_index":1035,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:109",{"_index":1033,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:129",{"_index":1010,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:135",{"_index":1015,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:148",{"_index":1032,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:29",{"_index":1050,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:30",{"_index":1049,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:31",{"_index":1040,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:33",{"_index":1045,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:34",{"_index":1048,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:36",{"_index":1039,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:37",{"_index":1044,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:38",{"_index":1043,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:39",{"_index":1042,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:42",{"_index":1009,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:50",{"_index":1022,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:61",{"_index":1021,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:67",{"_index":1031,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:73",{"_index":1017,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:78",{"_index":1027,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:83",{"_index":1011,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:88",{"_index":1037,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list.component.ts:94",{"_index":1025,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["list/flashcards",{"_index":981,"title":{},"body":{"components/FlashcardsListComponent.html":{},"coverage.html":{}}}],["liste",{"_index":1689,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["literal",{"_index":1024,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["loadtheme",{"_index":501,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["loadtodos",{"_index":1704,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["local",{"_index":536,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["localhost/3000",{"_index":2070,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"interfaces/RegisterData.html":{}}}],["localstorage.getitem(environment.auth.tokenstoragekey",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["localstorage.getitem(this.darkmodekey",{"_index":551,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["localstorage.removeitem(environment.auth.tokenstoragekey",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["localstorage.setitem(environment.auth.tokenstoragekey",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["localstorage.setitem(this.darkmodekey",{"_index":541,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["loeschen",{"_index":1586,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["loeschen(subtopicid",{"_index":1596,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["log",{"_index":1745,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["loggedin",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["logik",{"_index":84,"title":{},"body":{"components/AddItemComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["login",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["login'},{'name",{"_index":227,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["login(data",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["login.component.css",{"_index":1362,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1363,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":226,"title":{"components/LoginComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["loginfailed",{"_index":1366,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":1327,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logout",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"interfaces/RegisterData.html":{}}}],["lokal",{"_index":1152,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["lokale",{"_index":772,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["luft",{"_index":1318,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lädt",{"_index":545,"title":{},"body":{"injectables/DarkModeService.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["löschen",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["löscht",{"_index":1765,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["mail",{"_index":1503,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["man",{"_index":326,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["map",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["map(items",{"_index":1896,"title":{},"body":{"components/TopicsComponent.html":{}}}],["map(res",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["map(t",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["mappen",{"_index":1558,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["mappt",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["margin",{"_index":179,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["margin/padding",{"_index":853,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["matching",{"_index":239,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(0",{"_index":782,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["math.min(6",{"_index":783,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["math.random",{"_index":1997,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["max",{"_index":159,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["mehr",{"_index":1507,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["meine",{"_index":1769,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["memory",{"_index":1082,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["men",{"_index":581,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["menu",{"_index":609,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["merken",{"_index":1074,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["message",{"_index":1433,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["metadaten",{"_index":1730,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["methode",{"_index":1491,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AddItemComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["middle",{"_index":904,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["min",{"_index":1175,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["minmax(200px",{"_index":1202,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["minmax(200px,1fr",{"_index":1930,"title":{},"body":{"components/TopicsComponent.html":{}}}],["miscellaneous",{"_index":2081,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":379,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["mittig",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{}}}],["mittlere",{"_index":901,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["mode",{"_index":510,"title":{},"body":{"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["mode.service",{"_index":1292,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mode.service.ts",{"_index":497,"title":{},"body":{"injectables/DarkModeService.html":{},"coverage.html":{}}}],["mode.service.ts:18",{"_index":508,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["mode.service.ts:32",{"_index":507,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["mode.service.ts:7",{"_index":513,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["mode.service.ts:8",{"_index":511,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["mode.service.ts:9",{"_index":505,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["models/iflashcard",{"_index":1254,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["models/isubtopic",{"_index":1253,"title":{},"body":{"injectables/GetDataService.html":{}}}],["models/itopic",{"_index":1251,"title":{},"body":{"injectables/GetDataService.html":{}}}],["modeservices/dark",{"_index":496,"title":{},"body":{"injectables/DarkModeService.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["modifizierter",{"_index":380,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["modul",{"_index":1375,"title":{},"body":{"components/LoginComponent.html":{}}}],["module",{"_index":1734,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["modules",{"_index":2075,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["modus",{"_index":619,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{}}}],["mouseevent",{"_index":572,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["move",{"_index":2010,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["muss",{"_index":1485,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["nach",{"_index":1130,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["nachher",{"_index":1151,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["namen",{"_index":1629,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["namens",{"_index":66,"title":{},"body":{"components/AddItemComponent.html":{}}}],["nav",{"_index":1303,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["navigateto",{"_index":1274,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigateto(route",{"_index":1283,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigatetologin",{"_index":1458,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["navigatetosignup",{"_index":1368,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigatetotopic",{"_index":1840,"title":{},"body":{"components/TopicsComponent.html":{}}}],["navigatetotopic(id",{"_index":1852,"title":{},"body":{"components/TopicsComponent.html":{}}}],["navigatetounterthema",{"_index":1587,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["navigatetounterthema(id",{"_index":1598,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["navigation",{"_index":903,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/InfoComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["navigier",{"_index":1654,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["navigieren",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/TopicsComponent.html":{}}}],["navigiert",{"_index":827,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{}}}],["ndert",{"_index":1030,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["nebeneinander",{"_index":870,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["needed",{"_index":2065,"title":{},"body":{"index.html":{}}}],["ner",{"_index":1304,"title":{},"body":{"components/HeaderComponent.html":{}}}],["neu",{"_index":818,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"pipes/SearchSortPipe.html":{},"components/TopicsComponent.html":{}}}],["neue",{"_index":1100,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["neuen",{"_index":1628,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["neuer",{"_index":1692,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["neues",{"_index":1655,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["new",{"_index":103,"title":{},"body":{"components/AddItemComponent.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["newtodo",{"_index":1699,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["newval",{"_index":781,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["next",{"_index":317,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["next.handle",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(authreq",{"_index":378,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":386,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["nextcard",{"_index":653,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["ng",{"_index":2072,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":654,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["ngmodel",{"_index":1376,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngondestroy",{"_index":1001,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["ngoninit",{"_index":655,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["ngsubmit",{"_index":1377,"title":{},"body":{"components/LoginComponent.html":{}}}],["nicht",{"_index":350,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["niedrig",{"_index":1160,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["nimmt",{"_index":891,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["nix",{"_index":589,"title":{},"body":{"components/EditableCardComponent.html":{},"components/SubtopicsComponent.html":{}}}],["noch",{"_index":757,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{}}}],["node",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":193,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["notwendige",{"_index":1733,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["now",{"_index":1968,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["npm",{"_index":2061,"title":{},"body":{"index.html":{}}}],["null",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["null/leer",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["number",{"_index":670,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["numerischem",{"_index":1561,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["numerischer",{"_index":1570,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["nur",{"_index":729,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"pipes/SearchSortPipe.html":{},"components/TopicsComponent.html":{}}}],["nutzbar",{"_index":1739,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["nächsten",{"_index":797,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["ob",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{}}}],["oben",{"_index":972,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["oberer",{"_index":887,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["object",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objekt",{"_index":1470,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["observable",{"_index":321,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{}}}],["oder",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"interfaces/RegisterData.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["of(null",{"_index":1687,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["offen",{"_index":1068,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["ohne",{"_index":346,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardsListComponent.html":{},"components/TopicsComponent.html":{}}}],["onaddflashcard",{"_index":1002,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["onaddflashcard(data",{"_index":1023,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["oncardclick",{"_index":561,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["oncardclick(event",{"_index":571,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["ondestroy",{"_index":983,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["oninit",{"_index":633,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["onsortchange",{"_index":1003,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["onsortchange(e",{"_index":1026,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["ontogglemenu",{"_index":562,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["ontogglemenu(event",{"_index":574,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["onwindowscroll",{"_index":1275,"title":{},"body":{"components/HeaderComponent.html":{}}}],["opacity",{"_index":613,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{}}}],["openlernmodus",{"_index":1004,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["optional",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["options",{"_index":815,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["order",{"_index":1551,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["original",{"_index":361,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["out",{"_index":148,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["outline",{"_index":192,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["output",{"_index":98,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["outputs",{"_index":45,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["overflow",{"_index":165,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["overview",{"_index":2076,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":624,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["package",{"_index":2040,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":2074,"title":{},"body":{"index.html":{}}}],["packen",{"_index":745,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["packt",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{}}}],["padding",{"_index":130,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["paddings",{"_index":1167,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["page",{"_index":1169,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{}}}],["parallel",{"_index":1632,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["paralllel",{"_index":1149,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["param",{"_index":1537,"title":{},"body":{"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{}}}],["parameters",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["params",{"_index":732,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["parent",{"_index":593,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["parseint(sid",{"_index":743,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["parseint(tid",{"_index":738,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["parsen",{"_index":1077,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{}}}],["partial",{"_index":1242,"title":{},"body":{"injectables/GetDataService.html":{}}}],["passt",{"_index":776,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["password",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/IUserData.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{}}}],["passwort",{"_index":1381,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["per",{"_index":1384,"title":{},"body":{"components/LoginComponent.html":{}}}],["perspective",{"_index":907,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["perspektive",{"_index":905,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["pfad",{"_index":1731,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["pfeilen",{"_index":889,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["pipe",{"_index":468,"title":{"pipes/SearchSortPipe.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe/search",{"_index":1053,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["pipes",{"_index":1513,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["pipetransform",{"_index":1530,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["placeholder",{"_index":68,"title":{},"body":{"components/AddItemComponent.html":{}}}],["placeholderdescription",{"_index":43,"title":{},"body":{"components/AddItemComponent.html":{}}}],["placeholdername",{"_index":44,"title":{},"body":{"components/AddItemComponent.html":{}}}],["platz",{"_index":894,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{}}}],["platzhalter",{"_index":628,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["plus",{"_index":172,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["pointer",{"_index":144,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["popup",{"_index":1747,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["popups",{"_index":1737,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["position",{"_index":141,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["positionieren",{"_index":1206,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["positioniert",{"_index":948,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["positionierte",{"_index":866,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["positiver",{"_index":792,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["possible",{"_index":2064,"title":{},"body":{"index.html":{}}}],["preserve",{"_index":915,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["prev",{"_index":769,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview",{"_index":635,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview'},{'name",{"_index":218,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["preview.component.css",{"_index":636,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.html",{"_index":637,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts",{"_index":632,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:118",{"_index":680,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:138",{"_index":681,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:147",{"_index":673,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:152",{"_index":686,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:154",{"_index":675,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:155",{"_index":679,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:17",{"_index":702,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:19",{"_index":693,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:20",{"_index":691,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:21",{"_index":696,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:22",{"_index":689,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:23",{"_index":705,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:24",{"_index":698,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:25",{"_index":692,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:26",{"_index":695,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:27",{"_index":697,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:28",{"_index":703,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:29",{"_index":694,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:30",{"_index":688,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:33",{"_index":704,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:34",{"_index":668,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:43",{"_index":677,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:55",{"_index":676,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:59",{"_index":685,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:70",{"_index":674,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:84",{"_index":678,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:93",{"_index":687,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview.component.ts:98",{"_index":671,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["preview/flashcard",{"_index":631,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"coverage.html":{}}}],["previous",{"_index":656,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["previouscard",{"_index":657,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["private",{"_index":34,"title":{},"body":{"components/AddItemComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["production",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":598,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"pipes/SearchSortPipe.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["progress__fill",{"_index":960,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["progress__text",{"_index":962,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["properties",{"_index":28,"title":{"properties.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"properties.html":{}}}],["providedin",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["providehttpclient",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prüft",{"_index":548,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["public",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/ToDoFlashcardComponent.html":{}}}],["pure",{"_index":1531,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["pushen",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["pw",{"_index":1489,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["question",{"_index":1046,"title":{},"body":{"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"interfaces/IFlashcard.html":{},"pipes/SearchSortPipe.html":{}}}],["quickflip",{"_index":1309,"title":{},"body":{"components/HeaderComponent.html":{}}}],["r",{"_index":1996,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["radius",{"_index":128,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["random",{"_index":711,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{}}}],["reactive",{"_index":1469,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["reactiveformsmodule",{"_index":1453,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["readonly",{"_index":1812,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["reagieren",{"_index":596,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["rechte",{"_index":902,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["rechts",{"_index":961,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["record",{"_index":1958,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["red",{"_index":603,"title":{},"body":{"components/EditableCardComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["regal",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["register",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationComponent.html":{}}}],["register(data",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["registerdata",{"_index":407,"title":{"interfaces/RegisterData.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"coverage.html":{}}}],["registeruser",{"_index":1459,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":1452,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration'},{'name",{"_index":229,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["registration.component.css",{"_index":1454,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":1455,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":228,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["registrationfailed",{"_index":1456,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationform",{"_index":1457,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrieren",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{}}}],["registrierung",{"_index":1471,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["rein",{"_index":360,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["reingucken",{"_index":595,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["reinholen",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["reinladen",{"_index":1663,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["reinziehen",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["relativ",{"_index":1205,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["relative",{"_index":142,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["relativeto",{"_index":1090,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["reloadtrigger",{"_index":1838,"title":{},"body":{"components/TopicsComponent.html":{}}}],["remainingindices",{"_index":1936,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["reminder",{"_index":1446,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["renderchart",{"_index":658,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["renderer",{"_index":500,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["renderer2",{"_index":512,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["rendererfactory",{"_index":506,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["rendererfactory.createrenderer(null",{"_index":520,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["rendererfactory2",{"_index":504,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["repeat(auto",{"_index":1200,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["req",{"_index":320,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":375,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":362,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["res",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["res.token",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["reset",{"_index":35,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["resetallprogress",{"_index":1005,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["resetremaining",{"_index":1942,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["resetten",{"_index":820,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["responses",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["responsive",{"_index":816,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["restfläche",{"_index":892,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["result",{"_index":862,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["resultcanvas",{"_index":646,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["results",{"_index":238,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":659,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["return",{"_index":109,"title":{},"body":{"components/AddItemComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["returns",{"_index":81,"title":{},"body":{"components/AddItemComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["rgba(0",{"_index":154,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TopicsComponent.html":{}}}],["rgba(0,0,0,0.2",{"_index":879,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["rgba(0,123,255,0.4",{"_index":1422,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["richtig",{"_index":811,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["richtig/falsch",{"_index":800,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["richtung",{"_index":1067,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["right",{"_index":611,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["right_arrow",{"_index":938,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["right_arrow:hover",{"_index":944,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["rightclicked",{"_index":647,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["root",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["root'},{'name",{"_index":213,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["rot",{"_index":1430,"title":{},"body":{"components/LoginComponent.html":{}}}],["rotate(45deg",{"_index":941,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["rotatey(180deg",{"_index":922,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["roter",{"_index":1803,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["rounded",{"_index":950,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["route",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{}}}],["routenhierarchie",{"_index":1020,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["router",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["routermodule",{"_index":985,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["routeroutlet",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rules",{"_index":1476,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["run",{"_index":2060,"title":{},"body":{"index.html":{}}}],["rundum",{"_index":1319,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rundungen",{"_index":911,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/TopicsComponent.html":{}}}],["rxjs",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1619,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["rückseite",{"_index":924,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["s",{"_index":1677,"title":{},"body":{"components/SubtopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["s.id",{"_index":1676,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["sans",{"_index":1172,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["save",{"_index":2068,"title":{},"body":{"index.html":{}}}],["savecard",{"_index":1006,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["saved",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["savesubtopic",{"_index":1588,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["savetopic",{"_index":1841,"title":{},"body":{"components/TopicsComponent.html":{}}}],["scale(0.97",{"_index":1336,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["scale(1.02",{"_index":170,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{}}}],["schatten",{"_index":1177,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["schick",{"_index":383,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["schicken",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["schiefgegangen",{"_index":1472,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["schließen",{"_index":1012,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["schließt",{"_index":826,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["schlüssel",{"_index":514,"title":{},"body":{"injectables/DarkModeService.html":{},"miscellaneous/variables.html":{}}}],["schnittstelle",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["schon",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"interfaces/RegisterData.html":{}}}],["schützen",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{}}}],["scipt",{"_index":2073,"title":{},"body":{"index.html":{}}}],["screen",{"_index":859,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["scroll",{"_index":1298,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scrolled",{"_index":1272,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":1189,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["searchablekeys",{"_index":1519,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["searchablekeys.some(key",{"_index":1546,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["searchquery",{"_index":995,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["searchsort",{"_index":1516,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["searchsortpipe",{"_index":986,"title":{"pipes/SearchSortPipe.html":{}},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["searchterm",{"_index":1518,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["searchterm.trim().tolowercase",{"_index":1543,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["section",{"_index":890,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["sein",{"_index":1487,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["seite",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["selbst",{"_index":586,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["select",{"_index":1029,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["select:focus",{"_index":1694,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["selection",{"_index":665,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["selection.service",{"_index":712,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["selection.service.ts",{"_index":1932,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{}}}],["selection.service.ts:10",{"_index":1957,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:11",{"_index":1961,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:12",{"_index":1955,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:13",{"_index":1960,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:14",{"_index":1959,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:16",{"_index":1949,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:28",{"_index":1947,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:41",{"_index":1944,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:52",{"_index":1954,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:58",{"_index":1951,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:8",{"_index":1956,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:85",{"_index":1952,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:9",{"_index":1962,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:93",{"_index":1945,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selection.service.ts:97",{"_index":1953,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["selectmode",{"_index":660,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["selectmode(mode",{"_index":682,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["sendet",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["serif",{"_index":1173,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["serve",{"_index":2071,"title":{},"body":{"index.html":{}}}],["server",{"_index":786,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"index.html":{}}}],["service",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["services/auth/auth.service",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["servie",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["setheaders",{"_index":376,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["settimeout",{"_index":1396,"title":{},"body":{"components/LoginComponent.html":{}}}],["settings",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["setzen",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["setzt",{"_index":1139,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["shadow",{"_index":150,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["shake",{"_index":1432,"title":{},"body":{"components/LoginComponent.html":{}}}],["shared",{"_index":1101,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["shared/components/add",{"_index":1055,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["shared/components/editable",{"_index":1057,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["shared/components/header/header.component",{"_index":1051,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["shared/components/search",{"_index":1052,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["sharereplay",{"_index":1874,"title":{},"body":{"components/TopicsComponent.html":{}}}],["sharereplay(1",{"_index":1890,"title":{},"body":{"components/TopicsComponent.html":{}}}],["show",{"_index":1394,"title":{},"body":{"components/LoginComponent.html":{}}}],["showinput",{"_index":29,"title":{},"body":{"components/AddItemComponent.html":{}}}],["showmenu",{"_index":564,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["showtodopopup",{"_index":1273,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sich",{"_index":1621,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["sicher",{"_index":1893,"title":{},"body":{"components/TopicsComponent.html":{}}}],["sichtbarkeit",{"_index":1736,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["sid",{"_index":740,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["sie",{"_index":932,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["signup",{"_index":1401,"title":{},"body":{"components/LoginComponent.html":{}}}],["size",{"_index":175,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["sizing",{"_index":856,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["solid",{"_index":127,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["soll",{"_index":77,"title":{},"body":{"components/AddItemComponent.html":{}}}],["sonst",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{}}}],["sorgt",{"_index":854,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["sort",{"_index":1028,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["sort.pipe",{"_index":1054,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["sort.pipe.ts",{"_index":1515,"title":{},"body":{"pipes/SearchSortPipe.html":{},"coverage.html":{}}}],["sort.pipe.ts:17",{"_index":1520,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["sortcriteria",{"_index":996,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["sortcriteria.split",{"_index":1552,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["sortier",{"_index":1188,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["sortieren",{"_index":1158,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["sortierkriterium",{"_index":1524,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["sortiert",{"_index":1522,"title":{},"body":{"pipes/SearchSortPipe.html":{},"components/TopicsComponent.html":{}}}],["sortierte",{"_index":1575,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["sortiertes",{"_index":1529,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["sortierung",{"_index":1065,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["sortkey",{"_index":1559,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["space",{"_index":1190,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["spalten",{"_index":899,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["speicern",{"_index":538,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["speicher",{"_index":1071,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/SubtopicsComponent.html":{},"miscellaneous/variables.html":{}}}],["speichern",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["speichert",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["spezifisches",{"_index":880,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["springt",{"_index":779,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["später",{"_index":1623,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["src/.../app.config.ts",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":312,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:10",{"_index":319,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:7",{"_index":314,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/models/iflashcard.ts",{"_index":1338,"title":{},"body":{"interfaces/IFlashcard.html":{},"coverage.html":{}}}],["src/app/core/models/isubtopic.ts",{"_index":1340,"title":{},"body":{"interfaces/ISubtopic.html":{},"coverage.html":{}}}],["src/app/core/models/itopic.ts",{"_index":1341,"title":{},"body":{"interfaces/ITopic.html":{},"coverage.html":{}}}],["src/app/core/models/iuserdata.ts",{"_index":1343,"title":{},"body":{"interfaces/IUserData.html":{},"coverage.html":{}}}],["src/app/core/services/auth/auth.service.ts",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"coverage.html":{}}}],["src/app/core/services/auth/auth.service.ts:11",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:12",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:13",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:15",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:24",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:29",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:44",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:52",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/authguard/authguard.service.ts",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/services/authguard/authguard.service.ts:12",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/services/authguard/authguard.service.ts:6",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/services/dark",{"_index":495,"title":{},"body":{"injectables/DarkModeService.html":{},"coverage.html":{}}}],["src/app/core/services/getdataservices/get",{"_index":1207,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["src/app/core/services/selection/weighted",{"_index":1931,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{}}}],["src/app/core/services/todo/to",{"_index":1810,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app/features/auth/login/login.component.ts",{"_index":1361,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/login/login.component.ts:16",{"_index":1373,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/login/login.component.ts:17",{"_index":1372,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/login/login.component.ts:18",{"_index":1369,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/login/login.component.ts:26",{"_index":1370,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/login/login.component.ts:41",{"_index":1371,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/registration/registration.component.ts",{"_index":1451,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/registration/registration.component.ts:17",{"_index":1466,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/features/auth/registration/registration.component.ts:18",{"_index":1462,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/features/auth/registration/registration.component.ts:34",{"_index":1464,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/features/auth/registration/registration.component.ts:52",{"_index":1463,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/features/flashcard",{"_index":630,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"coverage.html":{}}}],["src/app/features/flashcards",{"_index":980,"title":{},"body":{"components/FlashcardsListComponent.html":{},"coverage.html":{}}}],["src/app/features/info/info.component.ts",{"_index":1344,"title":{},"body":{"components/InfoComponent.html":{},"coverage.html":{}}}],["src/app/features/subtopics/subtopics.component.ts",{"_index":1577,"title":{},"body":{"components/SubtopicsComponent.html":{},"coverage.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:105",{"_index":1601,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:130",{"_index":1593,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:136",{"_index":1605,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:142",{"_index":1597,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:162",{"_index":1595,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:30",{"_index":1614,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:31",{"_index":1613,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:32",{"_index":1615,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:33",{"_index":1608,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:35",{"_index":1611,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:36",{"_index":1610,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:37",{"_index":1609,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:39",{"_index":1612,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:40",{"_index":1590,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:48",{"_index":1600,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:68",{"_index":1607,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:73",{"_index":1594,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:78",{"_index":1599,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:85",{"_index":1592,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/subtopics/subtopics.component.ts:97",{"_index":1603,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["src/app/features/to",{"_index":1695,"title":{},"body":{"components/ToDoFlashcardComponent.html":{},"coverage.html":{}}}],["src/app/features/topics/topics.component.ts",{"_index":1829,"title":{},"body":{"components/TopicsComponent.html":{},"coverage.html":{}}}],["src/app/features/topics/topics.component.ts:104",{"_index":1855,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:122",{"_index":1851,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:135",{"_index":1848,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:145",{"_index":1849,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:30",{"_index":1869,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:31",{"_index":1872,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:32",{"_index":1867,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:34",{"_index":1868,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:35",{"_index":1863,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:37",{"_index":1866,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:38",{"_index":1865,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:39",{"_index":1864,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:41",{"_index":1870,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:42",{"_index":1871,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:43",{"_index":1845,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:50",{"_index":1854,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:68",{"_index":1860,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:73",{"_index":1862,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:78",{"_index":1853,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:85",{"_index":1858,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:91",{"_index":1850,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/features/topics/topics.component.ts:96",{"_index":1857,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/shared/components/add",{"_index":10,"title":{},"body":{"components/AddItemComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/editable",{"_index":554,"title":{},"body":{"components/EditableCardComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.component.ts",{"_index":1269,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.component.ts:16",{"_index":1289,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:17",{"_index":1280,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:26",{"_index":1281,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:31",{"_index":1284,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:35",{"_index":1287,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:39",{"_index":1288,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:43",{"_index":1282,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/search",{"_index":1514,"title":{},"body":{"pipes/SearchSortPipe.html":{},"coverage.html":{}}}],["src/environments/environment.ts",{"_index":2037,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacking",{"_index":912,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["standalone",{"_index":18,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["standard",{"_index":1630,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["start",{"_index":137,"title":{},"body":{"components/AddItemComponent.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"interfaces/RegisterData.html":{},"components/TopicsComponent.html":{},"index.html":{}}}],["started",{"_index":2059,"title":{"index.html":{}},"body":{}}],["startediting",{"_index":1007,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["startediting(card",{"_index":1034,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["startediting(sub",{"_index":1602,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["startediting(topic",{"_index":1856,"title":{},"body":{"components/TopicsComponent.html":{}}}],["starten",{"_index":822,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["startet",{"_index":817,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["startseite",{"_index":1310,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SubtopicsComponent.html":{}}}],["startwith",{"_index":1873,"title":{},"body":{"components/TopicsComponent.html":{}}}],["startwith(void",{"_index":1888,"title":{},"body":{"components/TopicsComponent.html":{}}}],["statements",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/ToDoFlashcardComponent.html":{}}}],["storage",{"_index":537,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["storage/servie",{"_index":368,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["stream",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["streams",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["string",{"_index":48,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{}}}],["string(aval).localecompare(string(bval",{"_index":1572,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["string(bval).localecompare(string(aval",{"_index":1573,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["string(item[key",{"_index":1547,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["style",{"_index":874,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["styleurl",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/InfoComponent.html":{}}}],["styleurls",{"_index":23,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["styling",{"_index":881,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/TopicsComponent.html":{}}}],["stylings",{"_index":975,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["sub",{"_index":1604,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["sub.description",{"_index":1669,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["sub.id",{"_index":1665,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["sub.name",{"_index":1667,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["subid",{"_index":1224,"title":{},"body":{"injectables/GetDataService.html":{}}}],["subject",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"components/TopicsComponent.html":{}}}],["submit",{"_index":36,"title":{},"body":{"components/AddItemComponent.html":{}}}],["subs",{"_index":1633,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["subscribe",{"_index":790,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["subscribe(card",{"_index":1105,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["subscribe(cards",{"_index":747,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["subscribe(subs",{"_index":1644,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["subscribe(updated",{"_index":1121,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["subscription",{"_index":1041,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["subtopic",{"_index":1062,"title":{},"body":{"components/FlashcardsListComponent.html":{},"interfaces/IFlashcard.html":{}}}],["subtopicid",{"_index":648,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["subtopicid).pipe",{"_index":1681,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["subtopics",{"_index":1260,"title":{},"body":{"injectables/GetDataService.html":{},"interfaces/ITopic.html":{},"components/SubtopicsComponent.html":{}}}],["subtopics'},{'name",{"_index":231,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["subtopics.component.css",{"_index":1578,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["subtopics.component.html",{"_index":1579,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["subtopicscomponent",{"_index":230,"title":{"components/SubtopicsComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["such",{"_index":1187,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["suchbegriff",{"_index":1064,"title":{},"body":{"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{}}}],["suche",{"_index":1157,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["suche+sort",{"_index":1926,"title":{},"body":{"components/TopicsComponent.html":{}}}],["sum",{"_index":2008,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["support&#64;example.com",{"_index":1359,"title":{},"body":{"components/InfoComponent.html":{}}}],["support@example.com",{"_index":1360,"title":{},"body":{"components/InfoComponent.html":{}}}],["switch",{"_index":1974,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["switch(progress",{"_index":1999,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["switchmap",{"_index":1618,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["switchmap(cards",{"_index":1682,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["t",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{},"pipes/SearchSortPipe.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["t.id",{"_index":1639,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["table",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":530,"title":{},"body":{"injectables/DarkModeService.html":{},"components/ToDoFlashcardComponent.html":{}}}],["temp",{"_index":1070,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["temporärer",{"_index":1627,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["term",{"_index":1542,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["text",{"_index":54,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{}}}],["textarea",{"_index":186,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/RegistrationComponent.html":{}}}],["textarea:focus",{"_index":190,"title":{},"body":{"components/AddItemComponent.html":{}}}],["thema",{"_index":1917,"title":{},"body":{"components/TopicsComponent.html":{}}}],["theme",{"_index":523,"title":{},"body":{"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{}}}],["themenbereiche",{"_index":1923,"title":{},"body":{"components/TopicsComponent.html":{}}}],["themenbereichen",{"_index":1355,"title":{},"body":{"components/InfoComponent.html":{}}}],["themengebiet",{"_index":1622,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["themengebiete",{"_index":1924,"title":{},"body":{"components/TopicsComponent.html":{}}}],["themengebietname",{"_index":1583,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["themenservice",{"_index":1846,"title":{},"body":{"components/TopicsComponent.html":{}}}],["themenübersicht",{"_index":828,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.activemenuid",{"_index":1096,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["this.add.emit",{"_index":110,"title":{},"body":{"components/AddItemComponent.html":{}}}],["this.allcards",{"_index":1080,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.allcards.filter(c",{"_index":1138,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.allcards.findindex(c",{"_index":1126,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.allcards.foreach(c",{"_index":1154,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.allcards.map(c",{"_index":1147,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.allcards.push(card",{"_index":1106,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.allcards[idx",{"_index":1128,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.apibase}/login",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["this.apibase}/register",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["this.applydecay(c",{"_index":1992,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.auth.gettoken",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["this.auth.login",{"_index":1387,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.register",{"_index":1500,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.authservice.logout",{"_index":1308,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.baseurl",{"_index":1826,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["this.baseurl}/${id}/toggle",{"_index":1827,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["this.base}/topics",{"_index":1256,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.base}/topics/${id",{"_index":1258,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.base}/topics/${topicid}/subtopics",{"_index":1262,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.base}/topics/${topicid}/subtopics/${subid",{"_index":1263,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.base}/topics/${topicid}/subtopics/${subid}/flashcards",{"_index":1266,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.base}/topics/${topicid}/subtopics/${subid}/flashcards/${cardid",{"_index":1267,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.cardclick.emit(event",{"_index":594,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["this.cardssub",{"_index":1078,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.cardssub?.unsubscribe",{"_index":1084,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.chart",{"_index":805,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.chart.destroy",{"_index":806,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.chart?.destroy",{"_index":824,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.correctcount",{"_index":794,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.currentflashcard",{"_index":764,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.currentflashcard?.learningprogress",{"_index":775,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.currentposition",{"_index":1964,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.darkclass",{"_index":540,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["this.darkmodeservice.toggledarkmode",{"_index":1305,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.editedanswer",{"_index":1114,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.editedanswer.trim",{"_index":1120,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.editedquestion",{"_index":1112,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.editedquestion.trim",{"_index":1118,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.editedsubtopicdescription",{"_index":1668,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.editedsubtopicdescription.trim",{"_index":1672,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.editedsubtopicname",{"_index":1666,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.editedsubtopicname.trim",{"_index":1671,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.editedtopicdescription",{"_index":1908,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.editedtopicdescription.trim",{"_index":1913,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.editedtopicname",{"_index":1906,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.editedtopicname.trim",{"_index":1912,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.editingcardid",{"_index":1111,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.editingsubtopicid",{"_index":1664,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.editingtopicid",{"_index":1904,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.endscreen",{"_index":823,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.fb.group",{"_index":1478,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.filteredtopics",{"_index":1894,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.flashcards",{"_index":748,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["this.flashcards.filter(c",{"_index":761,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.flashcards.indexof(card",{"_index":1985,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.flashcards.length",{"_index":2012,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.flashcards.map((_",{"_index":1989,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.flashcards[i].learningprogress",{"_index":1991,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.getweightforprogress(3",{"_index":1987,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.getweightforprogress(c.learningprogress",{"_index":1967,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.getweightforprogress(card.learningprogress",{"_index":2002,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.history",{"_index":1963,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.history[this.currentposition",{"_index":1998,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.http.delete",{"_index":1264,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.http.delete(`${this.baseurl}/${id",{"_index":1828,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["this.http.delete(`${this.base}/topics/${id",{"_index":1259,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.http.get",{"_index":1265,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.http.get(`${this.base}/topics",{"_index":1255,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.http.get(`${this.base}/topics/${topicid}/subtopics",{"_index":1261,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.http.get(this.baseurl",{"_index":1824,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["this.http.patch",{"_index":1268,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["this.http.post",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/GetDataService.html":{},"interfaces/RegisterData.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["this.http.put",{"_index":1257,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.inputpassword",{"_index":1389,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.inputusername",{"_index":1388,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isaddingtopic",{"_index":1919,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.isflipped",{"_index":834,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.lastreviewed",{"_index":1970,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.lastreviewed[c.id",{"_index":1972,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.lastreviewed[card.id",{"_index":1981,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.learningprogress",{"_index":774,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.loadtheme",{"_index":521,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["this.loadtodos",{"_index":1742,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.loginfailed",{"_index":1390,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mode",{"_index":753,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["this.newtodo",{"_index":1756,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.newtodo.trim",{"_index":1753,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.next",{"_index":795,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.previous",{"_index":837,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.registrationfailed",{"_index":1495,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registrationform",{"_index":1477,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registrationform.invalid",{"_index":1494,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registrationform.value",{"_index":1496,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.reloadtrigger$.next",{"_index":1914,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.reloadtrigger$.pipe",{"_index":1887,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.remainingindices",{"_index":1988,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.remainingindices.reduce((s",{"_index":1994,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.renderchart",{"_index":763,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.renderer",{"_index":519,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["this.renderer.addclass(document.documentelement",{"_index":552,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["this.renderer.addclass(htmlelement",{"_index":544,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["this.renderer.removeclass(document.documentelement",{"_index":553,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["this.renderer.removeclass(htmlelement",{"_index":539,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["this.reset",{"_index":113,"title":{},"body":{"components/AddItemComponent.html":{}}}],["this.resetremaining",{"_index":1973,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.resultcanvas",{"_index":801,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.resultcanvas.nativeelement.getcontext('2d",{"_index":808,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.route",{"_index":1091,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.route.snapshot.parammap.get('subtopicid",{"_index":741,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["this.route.snapshot.parammap.get('topicid",{"_index":736,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["this.router.navigate",{"_index":1092,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/SubtopicsComponent.html":{}}}],["this.router.navigate(['/login",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.router.navigate(['/signup",{"_index":1405,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/themengebiet",{"_index":829,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["this.router.navigate(['lernmodus",{"_index":1089,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.router.navigate([route",{"_index":1302,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.scrolled",{"_index":1300,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.searchquery",{"_index":1898,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.selection.initialize(this.flashcards",{"_index":754,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.selection.previouscard",{"_index":770,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.selection.reset",{"_index":825,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.service",{"_index":787,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["this.service.addsubtopic(this.topicid",{"_index":1657,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.service.deleteflashcard(this.topicid",{"_index":1684,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.service.deletesubtopic(this.topicid",{"_index":1688,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.service.getflashcards(this.topicid",{"_index":746,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/SubtopicsComponent.html":{}}}],["this.service.getsubtopics(this.topicid",{"_index":1635,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.service.gettopics",{"_index":1634,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.service.updatelearningprogress(this.topicid",{"_index":1148,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["this.service.updatesubtopic",{"_index":1670,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.showinput",{"_index":107,"title":{},"body":{"components/AddItemComponent.html":{}}}],["this.showtodopopup",{"_index":1307,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sortcriteria",{"_index":1093,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["this.subtopicid",{"_index":742,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["this.themengebietname",{"_index":1640,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.themenservice.addtopic(name",{"_index":1920,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.themenservice.deletetopic(id).subscribe",{"_index":1918,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.themenservice.gettopics().pipe",{"_index":1889,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.themenservice.updatetopic",{"_index":1911,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.todos",{"_index":1744,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.todos.filter(t",{"_index":1767,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.todos.push(todo",{"_index":1755,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.todoservice.addtodo(this.newtodo.trim()).subscribe",{"_index":1754,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.todoservice.deletetodo(todo.id).subscribe",{"_index":1766,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.todoservice.gettodos().subscribe",{"_index":1743,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.todoservice.toggledone(todo.id).subscribe",{"_index":1760,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.togglemenu.emit(event",{"_index":592,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["this.token$.next(null",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["this.token$.next(res.token",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["this.token$.next(saved",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["this.token$.pipe",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["this.token$.value",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/RegisterData.html":{}}}],["this.topicid",{"_index":737,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{}}}],["this.topics",{"_index":1886,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.topics$.pipe",{"_index":1895,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.totalcount",{"_index":760,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.unterthemen$.next",{"_index":1674,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.unterthemen$.next([...this.unterthemen$.value",{"_index":1660,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.unterthemen$.next(subs",{"_index":1645,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.unterthemen$.next(this.unterthemen$.value.filter(s",{"_index":1690,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.unterthemen$.value.map(s",{"_index":1675,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["this.updateprogress",{"_index":765,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["this.valuedescription",{"_index":115,"title":{},"body":{"components/AddItemComponent.html":{}}}],["this.valuedescription.trim",{"_index":112,"title":{},"body":{"components/AddItemComponent.html":{}}}],["this.valuename",{"_index":114,"title":{},"body":{"components/AddItemComponent.html":{}}}],["this.valuename.trim",{"_index":108,"title":{},"body":{"components/AddItemComponent.html":{}}}],["this.visible",{"_index":1748,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["this.weights",{"_index":1965,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.weights[i",{"_index":1995,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["this.weights[idx",{"_index":1986,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["through",{"_index":1801,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["tid",{"_index":735,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/SubtopicsComponent.html":{}}}],["tinf24b5",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["tippt",{"_index":1897,"title":{},"body":{"components/TopicsComponent.html":{}}}],["titel",{"_index":1179,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/TopicsComponent.html":{}}}],["title",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["title=\"lernstand",{"_index":1164,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["todo",{"_index":1712,"title":{"interfaces/Todo.html":{}},"body":{"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["todo.done",{"_index":1761,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["todo.id",{"_index":1768,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["todo.text",{"_index":1772,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["todoflashcardcomponent",{"_index":232,"title":{"components/ToDoFlashcardComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["todos",{"_index":1700,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["todoservice",{"_index":1708,"title":{"injectables/ToDoService.html":{}},"body":{"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["toggle",{"_index":1038,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/TopicsComponent.html":{}}}],["toggledarkmode",{"_index":502,"title":{},"body":{"injectables/DarkModeService.html":{},"components/HeaderComponent.html":{}}}],["toggledone",{"_index":1705,"title":{},"body":{"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{}}}],["toggledone(id",{"_index":1821,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["toggledone(todo",{"_index":1716,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["toggleflip",{"_index":661,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["toggleinput",{"_index":37,"title":{},"body":{"components/AddItemComponent.html":{}}}],["togglemenu",{"_index":566,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["togglemenu(id",{"_index":1036,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["togglepopup",{"_index":1706,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["togglet",{"_index":830,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["toggletodopopup",{"_index":1276,"title":{},"body":{"components/HeaderComponent.html":{}}}],["token",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"interfaces/RegisterData.html":{},"miscellaneous/variables.html":{}}}],["tokenstoragekey",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tolowercase",{"_index":1548,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["top",{"_index":199,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["topic",{"_index":1061,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["topic.description",{"_index":1909,"title":{},"body":{"components/TopicsComponent.html":{}}}],["topic.id",{"_index":1905,"title":{},"body":{"components/TopicsComponent.html":{}}}],["topic.name",{"_index":1907,"title":{},"body":{"components/TopicsComponent.html":{}}}],["topic/subtopic",{"_index":1087,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["topic?.name",{"_index":1641,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["topicid",{"_index":649,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/SubtopicsComponent.html":{}}}],["topicid/subtopicid",{"_index":731,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["topics",{"_index":235,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["topics.component.css",{"_index":1830,"title":{},"body":{"components/TopicsComponent.html":{}}}],["topics.component.html",{"_index":1831,"title":{},"body":{"components/TopicsComponent.html":{}}}],["topics.find(t",{"_index":1638,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["topicscomponent",{"_index":234,"title":{"components/TopicsComponent.html":{}},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["total",{"_index":1993,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["totalcount",{"_index":650,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["totalweight",{"_index":2009,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["transform",{"_index":169,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{}}}],["transform(items",{"_index":1517,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["transition",{"_index":145,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["translatex",{"_index":943,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{}}}],["translatex(2px",{"_index":1442,"title":{},"body":{"components/LoginComponent.html":{}}}],["translatex(4px",{"_index":1445,"title":{},"body":{"components/LoginComponent.html":{}}}],["translatex(5px",{"_index":945,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["translatey",{"_index":885,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["transparent",{"_index":1332,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["trigger",{"_index":1876,"title":{},"body":{"components/TopicsComponent.html":{}}}],["triggern",{"_index":591,"title":{},"body":{"components/EditableCardComponent.html":{},"components/TopicsComponent.html":{}}}],["true",{"_index":19,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["tun",{"_index":1651,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["type",{"_index":46,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"interfaces/IFlashcard.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"interfaces/IUserData.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"interfaces/Todo.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typen",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["typeof",{"_index":1571,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["ui",{"_index":1763,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["um",{"_index":777,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["umschalten",{"_index":525,"title":{},"body":{"injectables/DarkModeService.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["umzuschalten",{"_index":1295,"title":{},"body":{"components/HeaderComponent.html":{}}}],["und",{"_index":80,"title":{},"body":{"components/AddItemComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["undefined",{"_index":1286,"title":{},"body":{"components/HeaderComponent.html":{}}}],["undefined/null",{"_index":1569,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["under",{"_index":949,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["underline",{"_index":1449,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["unendlichen",{"_index":882,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["unendlicher",{"_index":838,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["unrein",{"_index":1532,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["uns",{"_index":356,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["unser",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["unsubscriben",{"_index":1076,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["unter",{"_index":758,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/RegistrationComponent.html":{}}}],["unterer",{"_index":946,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["unterm",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{}}}],["unterstrich",{"_index":1510,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["unterstrichen",{"_index":1509,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["unterthema",{"_index":1626,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["unterthemen",{"_index":1584,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["unverändert",{"_index":384,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["unvollständige",{"_index":839,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["update",{"_index":785,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["updated",{"_index":1129,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["updated.done",{"_index":1762,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["updateflashcard",{"_index":1117,"title":{},"body":{"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{}}}],["updateflashcard(topicid",{"_index":1241,"title":{},"body":{"injectables/GetDataService.html":{}}}],["updatelearningprogress",{"_index":1219,"title":{},"body":{"injectables/GetDataService.html":{}}}],["updatelearningprogress(this.topicid",{"_index":788,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["updatelearningprogress(topicid",{"_index":1244,"title":{},"body":{"injectables/GetDataService.html":{}}}],["updateprogress",{"_index":662,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["updatesearchquery",{"_index":1842,"title":{},"body":{"components/TopicsComponent.html":{}}}],["updatesearchquery(e",{"_index":1859,"title":{},"body":{"components/TopicsComponent.html":{}}}],["updatesortcriteria",{"_index":1843,"title":{},"body":{"components/TopicsComponent.html":{}}}],["updatesortcriteria(e",{"_index":1861,"title":{},"body":{"components/TopicsComponent.html":{}}}],["updatesortoption",{"_index":1589,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["updatesortoption(e",{"_index":1606,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["updatesubtopic",{"_index":1220,"title":{},"body":{"injectables/GetDataService.html":{}}}],["updatesubtopic(topicid",{"_index":1246,"title":{},"body":{"injectables/GetDataService.html":{}}}],["updatetopic",{"_index":1221,"title":{},"body":{"injectables/GetDataService.html":{}}}],["updatetopic(id",{"_index":1248,"title":{},"body":{"injectables/GetDataService.html":{}}}],["url",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["username",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"interfaces/IUserData.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{}}}],["valid",{"_index":1486,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validation",{"_index":1475,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators",{"_index":1467,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators.email",{"_index":1484,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators.minlength(3",{"_index":1480,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators.minlength(8",{"_index":1488,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators.required",{"_index":1479,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["value",{"_index":50,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"injectables/GetDataService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"injectables/ToDoService.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"miscellaneous/variables.html":{}}}],["valuedescription",{"_index":30,"title":{},"body":{"components/AddItemComponent.html":{}}}],["valuename",{"_index":31,"title":{},"body":{"components/AddItemComponent.html":{}}}],["var",{"_index":123,"title":{},"body":{"components/AddItemComponent.html":{},"components/AppComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["variable",{"_index":773,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"coverage.html":{}}}],["variablen",{"_index":849,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["variables",{"_index":2082,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verarbeiten",{"_index":1901,"title":{},"body":{"components/TopicsComponent.html":{}}}],["verarbeitendes",{"_index":1525,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["verfügbar",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"interfaces/RegisterData.html":{}}}],["vergleich",{"_index":1562,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["verhalten",{"_index":1774,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["verlassen",{"_index":1679,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["version",{"_index":2079,"title":{},"body":{"properties.html":{}}}],["verwaltet",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verwaltung",{"_index":1354,"title":{},"body":{"components/InfoComponent.html":{}}}],["verweigern",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verwendet",{"_index":1732,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["via",{"_index":328,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["view",{"_index":618,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["viewchild",{"_index":706,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["viewchild('resultcanvas",{"_index":701,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["viewencapsulation",{"_index":576,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["viewencapsulation.none",{"_index":558,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["viewport",{"_index":1408,"title":{},"body":{"components/LoginComponent.html":{}}}],["visibility",{"_index":929,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["visible",{"_index":1701,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["visuelles",{"_index":1788,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["void",{"_index":82,"title":{},"body":{"components/AddItemComponent.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"injectables/DarkModeService.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{},"injectables/WeightedRandomSelectionService.html":{}}}],["volle",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{}}}],["vom",{"_index":715,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["von",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/FlashcardsListComponent.html":{},"interfaces/ISubtopic.html":{},"interfaces/ITopic.html":{},"components/InfoComponent.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{}}}],["vorder",{"_index":923,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["vorhanden",{"_index":382,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{}}}],["vorhandene",{"_index":1740,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["vorherige",{"_index":766,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["vorpositioniert",{"_index":931,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["vorschein",{"_index":933,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["wechsel",{"_index":1900,"title":{},"body":{"components/TopicsComponent.html":{}}}],["wechseln",{"_index":1903,"title":{},"body":{"components/TopicsComponent.html":{}}}],["wechselt",{"_index":1757,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["wei",{"_index":324,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["weight",{"_index":177,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["weightedrandomselectionservice",{"_index":666,"title":{"injectables/WeightedRandomSelectionService.html":{}},"body":{"components/FlashcardPreviewComponent.html":{},"injectables/WeightedRandomSelectionService.html":{},"coverage.html":{}}}],["weights",{"_index":1937,"title":{},"body":{"injectables/WeightedRandomSelectionService.html":{}}}],["weil",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["weiter",{"_index":385,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{}}}],["weitergeben",{"_index":1642,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["weiterleiten",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditableCardComponent.html":{}}}],["weiterleitet",{"_index":365,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["weitermachen",{"_index":381,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["weiterreichen",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardsListComponent.html":{},"interfaces/RegisterData.html":{}}}],["welche",{"_index":1624,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["welches",{"_index":1881,"title":{},"body":{"components/TopicsComponent.html":{}}}],["weniger",{"_index":1322,"title":{},"body":{"components/HeaderComponent.html":{}}}],["wenn",{"_index":74,"title":{},"body":{"components/AddItemComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["werden",{"_index":76,"title":{},"body":{"components/AddItemComponent.html":{},"components/FlashcardsListComponent.html":{},"pipes/SearchSortPipe.html":{},"components/ToDoFlashcardComponent.html":{}}}],["wert",{"_index":1647,"title":{},"body":{"components/SubtopicsComponent.html":{}}}],["werte",{"_index":1073,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{}}}],["werten",{"_index":1109,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["white",{"_index":1791,"title":{},"body":{"components/ToDoFlashcardComponent.html":{}}}],["wichtigen",{"_index":1350,"title":{},"body":{"components/InfoComponent.html":{}}}],["width",{"_index":182,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["wie",{"_index":161,"title":{},"body":{"components/AddItemComponent.html":{},"components/TopicsComponent.html":{}}}],["wieder",{"_index":1399,"title":{},"body":{"components/LoginComponent.html":{}}}],["wiederverwenden",{"_index":1892,"title":{},"body":{"components/TopicsComponent.html":{}}}],["willkommen",{"_index":1348,"title":{},"body":{"components/InfoComponent.html":{}}}],["window.scrolly",{"_index":1301,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window:scroll",{"_index":1278,"title":{},"body":{"components/HeaderComponent.html":{}}}],["wir",{"_index":355,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["wird",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/EditableCardComponent.html":{},"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["wirklich",{"_index":1134,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/TopicsComponent.html":{}}}],["withcredentials",{"_index":1825,"title":{},"body":{"injectables/ToDoService.html":{},"interfaces/Todo.html":{}}}],["word",{"_index":156,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["wrap",{"_index":623,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["wrapper",{"_index":181,"title":{},"body":{"components/AddItemComponent.html":{},"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{}}}],["wurde",{"_index":1650,"title":{},"body":{"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["wählen",{"_index":750,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["y",{"_index":920,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["yellow",{"_index":605,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["z",{"_index":617,"title":{},"body":{"components/EditableCardComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["z.b",{"_index":831,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"pipes/SearchSortPipe.html":{}}}],["zeichnet",{"_index":798,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["zeigen",{"_index":577,"title":{},"body":{"components/EditableCardComponent.html":{}}}],["zenteriert",{"_index":1409,"title":{},"body":{"components/LoginComponent.html":{}}}],["zentrieren",{"_index":1326,"title":{},"body":{"components/HeaderComponent.html":{}}}],["zentriert",{"_index":1431,"title":{},"body":{"components/LoginComponent.html":{}}}],["zerstören",{"_index":803,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["zone.js",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":726,"title":{},"body":{"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["zugang",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{}}}],["zum",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterData.html":{},"components/RegistrationComponent.html":{},"pipes/SearchSortPipe.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{},"components/TopicsComponent.html":{}}}],["zur",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{},"components/FlashcardPreviewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SubtopicsComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["zurück",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Credentials.html":{},"components/FlashcardPreviewComponent.html":{},"components/FlashcardsListComponent.html":{},"components/HeaderComponent.html":{},"interfaces/RegisterData.html":{},"components/SubtopicsComponent.html":{}}}],["zurückgeben",{"_index":1576,"title":{},"body":{"pipes/SearchSortPipe.html":{}}}],["zurückgibt",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["zurücksetzen",{"_index":1144,"title":{},"body":{"components/FlashcardsListComponent.html":{},"components/LoginComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["zustand",{"_index":1197,"title":{},"body":{"components/FlashcardsListComponent.html":{}}}],["zuvor",{"_index":546,"title":{},"body":{"injectables/DarkModeService.html":{}}}],["zwischen",{"_index":526,"title":{},"body":{"injectables/DarkModeService.html":{},"components/FlashcardPreviewComponent.html":{},"components/LoginComponent.html":{},"components/ToDoFlashcardComponent.html":{}}}],["zählen",{"_index":755,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}],["zählt",{"_index":791,"title":{},"body":{"components/FlashcardPreviewComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddItemComponent.html":{"url":"components/AddItemComponent.html","title":"component - AddItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/add-item/add-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./add-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showInput\n                            \n                            \n                                valueDescription\n                            \n                            \n                                valueName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                    Private\n                                reset\n                            \n                            \n                                submit\n                            \n                            \n                                toggleInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                cancelText\n                            \n                            \n                                labelDescription\n                            \n                            \n                                labelName\n                            \n                            \n                                placeholderDescription\n                            \n                            \n                                placeholderName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Hinzufügen'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/add-item/add-item.component.ts:22\n                            \n                        \n                \n                    \n                        text für  Submit Button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        cancelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Abbrechen'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/add-item/add-item.component.ts:24\n                            \n                        \n                \n                    \n                        Text für  cancel button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelDescription\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Beschreibung'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/add-item/add-item.component.ts:18\n                            \n                        \n                \n                    \n                        label für  bschreibungs feld\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/add-item/add-item.component.ts:14\n                            \n                        \n                \n                    \n                        namens feld\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderDescription\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/add-item/add-item.component.ts:20\n                            \n                        \n                \n                    \n                        placeholder für  beschreibungs feld\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/add-item/add-item.component.ts:16\n                            \n                        \n                \n                    \n                        placeholder für namens feld\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        add\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/add-item/add-item.component.ts:27\n                            \n                        \n                \n                    \n                        event wenn Item hinzugefügt werden soll\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/add-item/add-item.component.ts:46\n                        \n                    \n\n\n            \n                \n                        abruch und reset\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/add-item/add-item.component.ts:51\n                        \n                    \n\n\n            \n                \n                        reset logik\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/add-item/add-item.component.ts:39\n                        \n                    \n\n\n            \n                \n                        emit und reset bei hinzufügen\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleInput\n                        \n                    \n                \n            \n            \n                \ntoggleInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/add-item/add-item.component.ts:34\n                        \n                    \n\n\n            \n                \n                        öffne formular\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/add-item/add-item.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/add-item/add-item.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/add-item/add-item.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-item',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.css']\n})\nexport class AddItemComponent {\n  /** namens feld */\n  @Input() labelName = 'Name';\n  /** placeholder für namens feld */\n  @Input() placeholderName = '';\n  /** label für  bschreibungs feld */\n  @Input() labelDescription = 'Beschreibung';\n  /** placeholder für  beschreibungs feld */\n  @Input() placeholderDescription = '';\n  /** text für  Submit Button */\n  @Input() buttonText = 'Hinzufügen';\n  /** Text für  cancel button */\n  @Input() cancelText = 'Abbrechen';\n\n  /**event wenn Item hinzugefügt werden soll*/\n  @Output() add = new EventEmitter();\n\n  showInput = false;           //anzeige formulaar\n  valueName = '';              //eingabe name\n  valueDescription = '';       //eingabe beschreibung\n\n  /**öffne formular*/\n  toggleInput(): void {\n    this.showInput = true;\n  }\n\n  /**emit und reset bei hinzufügen*/\n  submit(): void {\n    if (!this.valueName.trim()) return;\n    this.add.emit({ name: this.valueName.trim(), description: this.valueDescription.trim() });\n    this.reset();\n  }\n\n  /**abruch und reset*/\n  cancel(): void {\n    this.reset();\n  }\n\n  /**reset logik*/\n  private reset(): void {\n    this.valueName = '';\n    this.valueDescription = '';\n    this.showInput = false;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    +\n  \n\n  \n  \n    \n      \n      {{ labelName }}:\n      \n\n      \n      {{ labelDescription }}:\n      \n\n      \n      \n        \n          {{ buttonText }}\n        \n        \n          {{ cancelText }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-item.component.css\n                \n                :host {\n    display: block;\n}\n\n.card.add-card {\n    background-color: var(--card-bg);\n    border: 1px solid var(--card-border);\n    border-radius: 6px;\n    padding: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    position: relative;\n    cursor: pointer;\n    transition: all 0.3s ease-in-out;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    word-break: break-word;\n\n    /* Gleiche max-Höhe wie editable-card */\n    max-height: 250px;\n    overflow: auto;\n}\n\n.card.add-card:hover {\n    background-color: var(--hover-bg);\n    transform: scale(1.02);\n    border-color: #84abd4;\n}\n\n.plus-icon {\n    font-size: 40px;\n    font-weight: bold;\n    margin: auto;\n    color: var(--text-color);\n}\n\n.form-wrapper {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\ninput,\ntextarea {\n    width: 100%;\n    padding: 6px;\n    border: 1px solid var(--card-border);\n    border-radius: 4px;\n    font-size: 0.9rem;\n    background-color: var(--card-bg);\n    color: var(--text-color);\n    transition: all 0.2s;\n}\n\ninput:focus,\ntextarea:focus {\n    border-color: #007bff;\n    outline: none;\n    box-shadow: 0 0 4px rgba(0, 123, 255, 0.4);\n}\n\n.button-group-inline {\n    display: flex;\n    gap: 0.5rem;\n    margin-top: 0.5rem;\n}\n\n.button-group-inline button {\n    padding: 6px 10px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 0.85rem;\n    transition: background-color 0.2s;\n}\n\n.button-group-inline button:hover {\n    background-color: rgba(0, 123, 255, 0.1);\n}\n\n.cancel-btn {\n    background-color: #f5f5f5;\n    color: #333;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        +                      {{ labelName }}:                  {{ labelDescription }}:                                    {{ buttonText }}                          {{ cancelText }}                    '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                ToDoFlashcardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"TINF24B5\"\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { ToDoFlashcardComponent } from '../app/features/to-do-flashcard/to-do-flashcard.component';\n\n@Component({\n  selector: \"app-root\",\n  standalone: true,\n  imports: [RouterOutlet, ToDoFlashcardComponent],\n  templateUrl: \"./app.component.html\",\n  styleUrl: \"./app.component.css\",\n})\nexport class AppComponent {\n  title = \"TINF24B5\";\n}\n\n    \n\n    \n        \n     \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/services/authguard/authguard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authguard/authguard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authguard/authguard.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router'; // canActivate-interface & router zum weiterleiten\nimport { AuthService } from '../auth/auth.service'; // unser auth-service der token verwaltet\n\n@Injectable({ providedIn: 'root' }) // service an root hängen is überall verfügbar\nexport class AuthGuard implements CanActivate { // guard fürs schützen von routes\n  constructor(\n    private auth: AuthService, // auth-service reinziehen\n    private router: Router// router zum navigieren\n  ) {}\n\n  canActivate(): boolean { // angular fragt hier: darf der user auf die route?\n    if (this.auth.getToken()) return true; // token da → alles gut, zugang erlauben\n    this.router.navigate(['/login']);// kein token → weiterleiten zur login-seite\n    return false;// zugang verweigern\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/auth.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/interceptors/auth.interceptor.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'; //injectable decorator damit angular weiß, dass man das via DI reinholen kann\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http'; //interceptor-typen von angular\nimport { Observable } from 'rxjs'; // observable weil next.handle ein observable zurückgibt\nimport { AuthService } from '../services/auth/auth.service'; // unser auth-servie, der token speichert und liefert\n\n@Injectable() // angular-dekorator, ohne den funzt das ding nicht als interceptor\nexport class AuthInterceptor implements HttpInterceptor { // implementiert das HttpInterceptor-interface\n  constructor(private auth: AuthService) {} // hier holen wir uns den auth-service über dependency injection rein\n\n  intercept(\n    req: HttpRequest, // original-request, immutable ding\n    next: HttpHandler// handler der die request weiterleitet\n  ): Observable> {\n    const token = this.auth.getToken(); // token aus storage/servie holen\n    if (token) {\n      // wenn token da is, kopier request und häng authorization-header dran\n      const authReq = req.clone({\n        setHeaders: { Authorization: `Bearer ${token}` }\n      });\n      return next.handle(authReq); // mit modifizierter request weitermachen\n    }\n    // kein token vorhanden, schick request unverändert weiter\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiBase\n                            \n                            \n                                    Public\n                                isLoggedIn$\n                            \n                            \n                                    Private\n                                token$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(data: Credentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Credentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(data: RegisterData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiBase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl + '/auth'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.token$.pipe(\n    map(t => !!t)  //mappt token -> boolean, true wenn token nicht null/leer\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'; // injectable damit angular das ding ins service-regal packt\nimport { HttpClient } from '@angular/common/http'; // http-client zum api anfunken\nimport { BehaviorSubject, map, Observable } from 'rxjs'; // rxjs kram für observable streams\nimport { environment } from '../../../../environments/environment'; // env settings (url, keys)\n\ninterface Credentials { username: string; password: string; } // schnittstelle für login\ninterface RegisterData { username: string; email: string; password: string; } // schnittstelle fürs registrieren\n\n@Injectable({ providedIn: 'root' }) // service an root hängen damit er überall verfügbar is\nexport class AuthService {\n  private apiBase = environment.apiUrl + '/auth'; // basis-url für auth-endpoints\n  private token$ = new BehaviorSubject(null); // hält aktuelles token oder null\n  public isLoggedIn$: Observable = this.token$.pipe(\n    map(t => !!t)  //mappt token -> boolean, true wenn token nicht null/leer\n  );\n\n  constructor(private http: HttpClient) {\n    //beim start gucken, ob schon token im localstorage liegt\n    const saved = localStorage.getItem(environment.auth.tokenStorageKey);\n    this.token$.next(saved); // initial in den behavior-subject pushen\n  }\n\n  // token abrufen sonst null\n  getToken(): string | null {\n    return this.token$.value;\n  }\n\n  // login: credentials an backend schicken und token speichern\n  login(data: Credentials): Observable {\n    return this.http.post(\n      `${this.apiBase}/login`,\n      data\n    ).pipe(\n      map(res => {\n        // wenn login erfolgreich dann token ins localstorage und in den stream\n        localStorage.setItem(environment.auth.tokenStorageKey, res.token);\n        this.token$.next(res.token);\n        return res; //weiterreichen des responses\n      })\n    );\n  }\n\n  // registrieren: sendet user-daten, bekommt user-id zurück\n  register(data: RegisterData): Observable {\n    return this.http.post(\n      `${this.apiBase}/register`,\n      data\n    );\n  }\n\n  // logout: token löschen und loggedIn status auf false setzen\n  logout(): void {\n    localStorage.removeItem(environment.auth.tokenStorageKey);  \n    this.token$.next(null); // stream auf null pushen -> isLoggedIn$ wird false\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core'; // injectable damit angular das ding ins service-regal packt\nimport { HttpClient } from '@angular/common/http'; // http-client zum api anfunken\nimport { BehaviorSubject, map, Observable } from 'rxjs'; // rxjs kram für observable streams\nimport { environment } from '../../../../environments/environment'; // env settings (url, keys)\n\ninterface Credentials { username: string; password: string; } // schnittstelle für login\ninterface RegisterData { username: string; email: string; password: string; } // schnittstelle fürs registrieren\n\n@Injectable({ providedIn: 'root' }) // service an root hängen damit er überall verfügbar is\nexport class AuthService {\n  private apiBase = environment.apiUrl + '/auth'; // basis-url für auth-endpoints\n  private token$ = new BehaviorSubject(null); // hält aktuelles token oder null\n  public isLoggedIn$: Observable = this.token$.pipe(\n    map(t => !!t)  //mappt token -> boolean, true wenn token nicht null/leer\n  );\n\n  constructor(private http: HttpClient) {\n    //beim start gucken, ob schon token im localstorage liegt\n    const saved = localStorage.getItem(environment.auth.tokenStorageKey);\n    this.token$.next(saved); // initial in den behavior-subject pushen\n  }\n\n  // token abrufen sonst null\n  getToken(): string | null {\n    return this.token$.value;\n  }\n\n  // login: credentials an backend schicken und token speichern\n  login(data: Credentials): Observable {\n    return this.http.post(\n      `${this.apiBase}/login`,\n      data\n    ).pipe(\n      map(res => {\n        // wenn login erfolgreich dann token ins localstorage und in den stream\n        localStorage.setItem(environment.auth.tokenStorageKey, res.token);\n        this.token$.next(res.token);\n        return res; //weiterreichen des responses\n      })\n    );\n  }\n\n  // registrieren: sendet user-daten, bekommt user-id zurück\n  register(data: RegisterData): Observable {\n    return this.http.post(\n      `${this.apiBase}/register`,\n      data\n    );\n  }\n\n  // logout: token löschen und loggedIn status auf false setzen\n  logout(): void {\n    localStorage.removeItem(environment.auth.tokenStorageKey);  \n    this.token$.next(null); // stream auf null pushen -> isLoggedIn$ wird false\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DarkModeService.html":{"url":"injectables/DarkModeService.html","title":"injectable - DarkModeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DarkModeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/dark-modeServices/dark-mode.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                darkClass\n                            \n                            \n                                    Private\n                                darkModeKey\n                            \n                            \n                                    Private\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadTheme\n                            \n                            \n                                toggleDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/dark-modeServices/dark-mode.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadTheme\n                        \n                    \n                \n            \n            \n                \nloadTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/dark-modeServices/dark-mode.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDarkMode\n                        \n                    \n                \n            \n            \n                \ntoggleDarkMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/dark-modeServices/dark-mode.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dark'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/dark-modeServices/dark-mode.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkModeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dark-mode'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/dark-modeServices/dark-mode.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/dark-modeServices/dark-mode.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'  // service in root der app verfügbar\n})\nexport class DarkModeService {\n  private renderer: Renderer2;\n  private darkModeKey = 'dark-mode';  //schlüssel für localstorage\n  private darkClass = 'dark'; //css klasse für dunkelmodus\n\n  constructor(rendererFactory: RendererFactory2) {\n    //renderer erzeugen\n    this.renderer = rendererFactory.createRenderer(null, null);\n    this.loadTheme(); //beim start gespeichertes theme laden\n  }\n\n  //umschalten zwischen hell und dunkelmodus\n  toggleDarkMode(): void {\n    const htmlElement = document.documentElement; //-tag\n    if (htmlElement.classList.contains(this.darkClass)) {\n      //ist aktuell dunkel? dann entfernen und in local storage als false speicern\n      this.renderer.removeClass(htmlElement, this.darkClass);\n      localStorage.setItem(this.darkModeKey, 'false');\n    } else {\n      //ist aktuell hell? dann dunkelklasse hinzufüen und speichern\n      this.renderer.addClass(htmlElement, this.darkClass);\n      localStorage.setItem(this.darkModeKey, 'true');\n    }\n  }\n\n  //lädt beim start das zuvor gespeicherte theme\n  loadTheme(): void {\n    //prüft localstorage true = dunkelmodus aktiv\n    const isDarkMode = localStorage.getItem(this.darkModeKey) === 'true';\n    if (isDarkMode) {\n      this.renderer.addClass(document.documentElement, this.darkClass);\n    } else {\n      this.renderer.removeClass(document.documentElement, this.darkClass);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditableCardComponent.html":{"url":"components/EditableCardComponent.html","title":"component - EditableCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditableCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/editable-card/editable-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editable-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./editable-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editable-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCardClick\n                            \n                            \n                                onToggleMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editing\n                            \n                            \n                                showMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/editable-card/editable-card.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showMenu\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/editable-card/editable-card.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cardClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/editable-card/editable-card.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleMenu\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/editable-card/editable-card.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCardClick\n                        \n                    \n                \n            \n            \n                \nonCardClick(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/editable-card/editable-card.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleMenu\n                        \n                    \n                \n            \n            \n                \nonToggleMenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/editable-card/editable-card.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-editable-card',\n  standalone: true,\n  imports: [CommonModule],\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './editable-card.component.html',\n  styleUrls: ['./editable-card.component.css']\n})\nexport class EditableCardComponent {\n  @Input() editing = false;// wenn true, zeigen wir die edit-felder\n  @Input() showMenu = false;// wenn true, wird das kontext-menü eingeblendet\n\n  @Output() toggleMenu = new EventEmitter();//event wenn menü-icon geklickt\n  @Output() cardClick  = new EventEmitter(); //event wenn karte selbst geklickt\n\n  onToggleMenu(event: MouseEvent) {\n    event.stopPropagation();// klick darf nix anderes triggern\n    this.toggleMenu.emit(event);// weiterleiten an parent\n  }\n\n  onCardClick(event: MouseEvent) {\n    this.cardClick.emit(event);// parent darf reingucken und reagieren\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n  \n    \n  \n\n  \n  \n    \n      \n    \n  \n\n  \n  ⋮\n\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./editable-card.component.css\n                \n                .editable-card {\n  background-color: var(--card-bg);\n  border: 1px solid var(--card-border);\n  border-radius: 6px;\n  padding: 1rem;\n  position: relative;\n  text-align: left;\n  word-break: break-word;\n  max-height: 250px;\n  overflow: auto;\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    border-color: #84abd4;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    transform: scale(1.02);\n  }\n\n  .progress-dot {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n  }\n  .dot-red    { background-color: #e74c3c; }\n  .dot-yellow { background-color: #f1c40f; }\n  .dot-green  { background-color: #2ecc71; }\n\n  .menu-icon {\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    cursor: pointer;\n    font-size: 1.2rem;\n    background: var(--card-bg);\n    color: var(--text-color);\n    padding: 4px;\n    border-radius: 50%;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n  &:hover .menu-icon {\n    opacity: 1;\n  }\n\n  .menu {\n    position: absolute;\n    top: 30px;\n    right: 8px;\n    display: flex;\n    flex-direction: column;\n    background: var(--card-bg);\n    border: 1px solid var(--card-border);\n    border-radius: 4px;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n    z-index: 100;\n\n    button {\n      background: none;\n      border: none;\n      padding: 8px;\n      text-align: left;\n      cursor: pointer;\n      font-size: 0.9rem;\n      color: var(--text-color);\n      transition: background-color 0.2s;\n\n      &:hover {\n        background-color: var(--hover-bg);\n      }\n    }\n  }\n\n  /* View-Modus: Frage + Antwort */\n  .card-content {\n    h2 {\n      margin: 0 0 0.5rem;\n      font-size: 1.2rem;\n      color: var(--text-color);\n      word-wrap: break-word;\n    }\n    p {\n      margin: 0;\n      font-size: 0.9rem;\n      color: var(--text-color);\n      word-wrap: break-word;\n    }\n  }\n\n  /* Edit-Modus: Formularfelder */\n  .edit-mode {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n\n    label {\n      font-weight: bold;\n      color: var(--text-color);\n    }\n\n    input,\n    textarea {\n      width: 100%;\n      margin-bottom: 0.5rem;\n      padding: 6px;\n      border: 1px solid var(--card-border);\n      border-radius: 4px;\n      font-size: 0.9rem;\n      background-color: var(--card-bg);\n      color: var(--text-color);\n      transition: all 0.2s;\n\n      &:focus {\n        border-color: #007bff;\n        outline: none;\n        box-shadow: 0 0 4px rgba(0, 123, 255, 0.4);\n      }\n    }\n\n    .button-group {\n      display: flex;\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n\n      button {\n        padding: 6px 10px;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 0.85rem;\n        background-color: var(--card-bg);\n        color: var(--text-color);\n        transition: background-color 0.2s;\n\n        &:hover {\n          background-color: var(--hover-bg);\n        }\n      }\n\n      .cancel-btn {\n        background-color: #f5f5f5;\n        color: #333;\n      }\n    }\n  }\n}\n\n/* Add-Card-Platzhalter */\n.editable-card.add-card {\n  border: 2px dashed var(--card-border);\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n\n  .plus-icon {\n    font-size: 40px;\n    font-weight: bold;\n    margin: auto;\n    color: var(--text-color);\n  }\n\n  &:hover {\n    background-color: var(--hover-bg);\n    transform: scale(1.02);\n    border-color: #84abd4;\n  }\n\n  .form-wrapper {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  input,\n  textarea {\n    width: 100%;\n    padding: 6px;\n    border: 1px solid var(--card-border);\n    border-radius: 4px;\n    font-size: 0.9rem;\n    background-color: var(--card-bg);\n    color: var(--text-color);\n    transition: all 0.2s;\n\n    &:focus {\n      border-color: #007bff;\n      outline: none;\n      box-shadow: 0 0 4px rgba(0, 123, 255, 0.4);\n    }\n  }\n\n  .button-group-inline {\n    display: flex;\n    gap: 0.5rem;\n    margin-top: 0.5rem;\n\n    button {\n      padding: 6px 10px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 0.85rem;\n      background-color: var(--card-bg);\n      color: var(--text-color);\n      transition: background-color 0.2s;\n\n      &:hover {\n        background-color: var(--hover-bg);\n      }\n    }\n\n    .cancel-btn {\n      background-color: #f5f5f5;\n      color: #333;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      ⋮          '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditableCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlashcardPreviewComponent.html":{"url":"components/FlashcardPreviewComponent.html","title":"component - FlashcardPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlashcardPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/flashcard-preview/flashcard-preview.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flashcard-preview\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./flashcard-preview.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flashcard-preview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chart\n                            \n                            \n                                correctCount\n                            \n                            \n                                currentFlashcard\n                            \n                            \n                                endScreen\n                            \n                            \n                                flashcards\n                            \n                            \n                                isDark\n                            \n                            \n                                isFlipped\n                            \n                            \n                                learningProgress\n                            \n                            \n                                leftClicked\n                            \n                            \n                                mode\n                            \n                            \n                                    \n                                resultCanvas\n                            \n                            \n                                rightClicked\n                            \n                            \n                                    Private\n                                subtopicId\n                            \n                            \n                                    Private\n                                topicId\n                            \n                            \n                                totalCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeProgress\n                            \n                            \n                                close\n                            \n                            \n                                next\n                            \n                            \n                                nextCard\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                previous\n                            \n                            \n                                previousCard\n                            \n                            \n                                renderChart\n                            \n                            \n                                retry\n                            \n                            \n                                selectMode\n                            \n                            \n                                toggleFlip\n                            \n                            \n                                updateProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: GetDataService, selection: WeightedRandomSelectionService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        GetDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selection\n                                                  \n                                                        \n                                                                        WeightedRandomSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeProgress\n                        \n                    \n                \n            \n            \n                \nchangeProgress(delta: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                delta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextCard\n                        \n                    \n                \n            \n            \n                \nnextCard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previous\n                        \n                    \n                \n            \n            \n                \nprevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousCard\n                        \n                    \n                \n            \n            \n                \npreviousCard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retry\n                        \n                    \n                \n            \n            \n                \nretry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMode\n                        \n                    \n                \n            \n            \n                \nselectMode(mode: \"infinite\" | \"limited\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"infinite\" | \"limited\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFlip\n                        \n                    \n                \n            \n            \n                \ntoggleFlip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProgress\n                        \n                    \n                \n            \n            \n                \nupdateProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correctCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentFlashcard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFlashcard | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endScreen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flashcards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFlashcard[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDark\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFlipped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        learningProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leftClicked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"infinite\" | \"limited\" | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resultCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('resultCanvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightClicked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subtopicId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        topicId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcard-preview/flashcard-preview.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { GetDataService } from '../../core/services/getDataServices/get-data.service';\nimport { IFlashcard } from '../../core/models/iflashcard';\nimport { WeightedRandomSelectionService } from '../../core/services/Selection/weighted-random-selection.service';\nimport Chart from 'chart.js/auto';\n\n@Component({\n  selector: 'app-flashcard-preview',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './flashcard-preview.component.html',\n  styleUrls: ['./flashcard-preview.component.css']\n})\nexport class FlashcardPreviewComponent implements OnInit, AfterViewInit {\n  @ViewChild('resultCanvas') resultCanvas!: ElementRef;\n\n  flashcards: IFlashcard[] = [];  // alle flashcards, die wir vom backend laden\n  currentFlashcard: IFlashcard | null = null;  // gerade angezeigte karte oder null\n  learningProgress = 0;  // aktueller lernfortschritt der karte (0–6)\n  correctCount = 0;  // anzahl korrekt beantworteter karten im limited-mode\n  totalCount = 0;  // gesamtzahl zu lernender karten im limited-mode\n  mode: 'infinite' | 'limited' | null = null;  // modus: 'infinite' = endlos, 'limited' = nur karten mit fortschritt,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    // topicId/subtopicId aus url-params lesen (fallback '0')\n    const tid = this.route.snapshot.paramMap.get('topicId') || '0';\n    this.topicId = parseInt(tid, 10);\n    const sid = this.route.snapshot.paramMap.get('subtopicId') || '0';\n    this.subtopicId = parseInt(sid, 10);\n\n    // flashcards vom backend holen und ins array packen\n    this.service.getFlashcards(this.topicId, this.subtopicId)\n      .subscribe(cards => this.flashcards = cards);\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  // modus wählen und selection-algorithmus initialisieren\n  selectMode(mode: 'infinite' | 'limited'): void {\n    this.mode = mode;\n    this.selection.initialize(this.flashcards, mode);\n    if (mode === 'limited') {\n      // im limited-mode nur karten zählen, deren fortschritt noch unter 6 ist\n      this.totalCount = this.flashcards.filter(c => c.learningProgress  this.renderChart(), 100);\n    } else {\n      this.currentFlashcard = next || null;\n      this.updateProgress();\n    }\n  }\n\n  // vorherige karte anzeigen, falls vorhanden\n  previous(): void {\n    const prev = this.selection.previousCard();\n    if (prev) {\n      this.currentFlashcard = prev;\n      this.updateProgress();\n    }\n  }\n\n  // aktualisiert die lokale variable für den lernfortschritt\n  updateProgress(): void {\n    this.learningProgress = this.currentFlashcard?.learningProgress || 0;\n  }\n\n  // passt den fortschritt um delta an, speichert in db und springt weiter\n  changeProgress(delta: number): void {\n    if (!this.currentFlashcard) return;\n    const card = this.currentFlashcard;\n    // clamp zwischen 0 und 6\n    const newVal = Math.max(0, Math.min(6, card.learningProgress + delta));\n    card.learningProgress = newVal;\n    this.learningProgress = newVal;\n    // update auf server\n    this.service\n      .updateLearningProgress(this.topicId, this.subtopicId, card.id, newVal)\n      .subscribe(() => {\n        // im limited-mode zählt positiver delta als korrekte antwort\n        if (this.mode === 'limited' && delta > 0) {\n          this.correctCount++;\n        }\n        this.next(); // direkt zur nächsten karte\n      });\n  }\n\n  // zeichnet das doughnut-chart mit richtig/falsch daten\n  renderChart(): void {\n    if (!this.resultCanvas) return;\n    // alten chart zerstören, falls schon gezeichnet\n    if (this.chart) this.chart.destroy();\n    const ctx = this.resultCanvas.nativeElement.getContext('2d');\n    if (!ctx) return;\n    this.chart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Richtig', 'Falsch'],\n        datasets: [{\n          data: [this.correctCount, this.totalCount - this.correctCount],\n          backgroundColor: ['#2ecc71', '#e74c3c']\n        }]\n      },\n      options: { responsive: true }\n    });\n  }\n\n  // startet im limited-mode neu: counters resetten, chart killen und neu starten\n  retry(): void {\n    this.endScreen = false;\n    this.correctCount = 0;\n    this.chart?.destroy();\n    this.selection.reset();\n    this.next();\n  }\n\n  // schließt die preview und navigiert zurück zur themenübersicht\n  close(): void {\n    this.router.navigate(['/themengebiet', this.topicId, this.subtopicId]);\n  }\n\n  // togglet die karte (z.b. flip animation)\n  toggleFlip(): void { this.isFlipped = !this.isFlipped; }\n  // aliase für button-clicks\n  nextCard(): void { this.next(); }\n  previousCard(): void { this.previous(); }\n}\n\n    \n\n    \n        \n\n  \n  \n    Unendlicher modus\n  \n  \n  \n    Nur Unvollständige\n  \n\n\n\n\n  \n  ⬅ Zurück\n\n  \n  \n    \n    \n      \n    \n    \n    \n      \n        \n        {{currentFlashcard?.question}}\n        \n        {{currentFlashcard?.answer}}\n      \n    \n    \n    \n      \n    \n  \n\n  \n  \n    \n    ✖\n    \n    \n      \n      {{learningProgress}}/6\n    \n    \n    ✔\n  \n\n\n\n\n  \n  ergebnis: {{((correctCount/totalCount)*100)|number:'1.0-0'}}%\n  \n  \n  \n  \n    Weiter Lernen\n    Beenden\n  \n\n\n    \n\n    \n                \n                    ./flashcard-preview.component.css\n                \n                :host {\n  /* button-colors für modus-auswahl, aus theme-variablen abgeleitet */\n  --btn-inf-bg:   var(--text-color);\n  --btn-inf-text: var(--card-bg);\n  --btn-lim-bg:   var(--card-border);\n  --btn-lim-text: var(--text-color);\n}\n\n* {\n  /* reset für margin/padding und sorgt für konsistente box-sizing */\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* container für karten-ansicht und ergebnis-screen: full-screen flex layout */\n.container,\n.result-screen {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n  position: relative; /* für absolut positionierte kinder (z.B. back-button) */\n}\n\n/* modus-auswahl buttons nebeneinander mit abstand */\n.mode-selection {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n}\n/* gemeinsamer button-style für modus */\n.mode-btn {\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 8px;\n  font-size: 1.1rem;\n  cursor: pointer;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n  transition: transform 0.2s, background-color 0.3s;\n}\n/* spezifisches styling für unendlichen modus */\n.mode-btn.mode-infinite {\n  background-color: var(--btn-inf-bg);\n  color: var(--btn-inf-text);\n}\n.mode-btn.mode-infinite:hover {\n  transform: translateY(-2px);\n}\n/* spezifisches styling für limited modus */\n.mode-btn.mode-limited {\n  background-color: var(--btn-lim-bg);\n  color: var(--btn-lim-text);\n}\n.mode-btn.mode-limited:hover {\n  transform: translateY(-2px);\n}\n\n/* oberer bereich mit pfeilen und karte */\n.top-section {\n  display: flex;\n  flex: 1;             /* nimmt restfläche ein */\n  width: 100%;\n  padding-top: 60px;   /* platz für header/back-button */\n}\n/* drei gleich große spalten für linke, mittlere, rechte navigation */\n.left-section,\n.middle-section,\n.right-section {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n/* perspektive für 3D-flip der karte */\n.middle-section {\n  perspective: 1200px;\n}\n\n/* karten-element: feste größe, rundungen, border und 3D-stacking */\n.card {\n  width: 700px;\n  height: 450px;\n  border-radius: 2rem;\n  background-color: var(--card-bg);\n  border: 1px solid var(--card-border);\n  box-shadow: 0 0 10px rgba(0,0,0,0.2);\n  transform-style: preserve-3d;\n  transition: transform 0.6s;\n  cursor: pointer;\n}\n/* wenn .flipped, dreht die karte um 180° auf der Y-Achse */\n.flipped {\n  transform: rotateY(180deg);\n}\n\n/* vorder- und rückseite jeweils full-size und backface invisible */\n.front,\n.back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  color: var(--text-color);\n  background-color: var(--card-bg);\n}\n/* rückseite um 180° vorpositioniert, damit sie beim Flip zum Vorschein kommt */\n.back {\n  transform: rotateY(180deg);\n}\n\n/* arrows: CSS-Dreiecke für Navigation */\n.left_arrow,\n.right_arrow {\n  width: 60px;\n  height: 60px;\n  cursor: pointer;\n  transition: transform 0.3s, opacity 0.3s;\n  opacity: 0.8;\n  position: relative;\n}\n.left_arrow {\n  border-left: 20px solid var(--text-color);\n  border-bottom: 20px solid var(--text-color);\n  transform: rotate(45deg);\n}\n.left_arrow:hover {\n  transform: translateX(-5px) rotate(45deg);\n  opacity: 1;\n}\n.right_arrow {\n  border-top: 20px solid var(--text-color);\n  border-right: 20px solid var(--text-color);\n  transform: rotate(45deg);\n}\n.right_arrow:hover {\n  transform: translateX(5px) rotate(45deg);\n  opacity: 1;\n}\n\n/* unterer bereich mit buttons und progress-bar, positioniert bottom */\n.under-section {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  background: var(--bg-color);\n  height: 60px;\n  width: 100vw;\n  left: 0;\n  position: absolute;\n  bottom: 0;\n  justify-content: center;\n}\n/* progress-bar container mit rounded edges */\n.progress {\n  position: relative;\n  width: calc(100vw - 200px);\n  max-width: 500px;\n  height: 20px;\n  background: var(--card-border);\n  border-radius: 10px;\n  overflow: hidden;\n}\n/* fill-element, dessen breite dynamisch über inline-style gesetzt wird */\n.progress__fill {\n  background: var(--text-color);\n  height: 100%;\n  transition: width 0.3s ease;\n}\n/* text über der fill, absolute Position rechts */\n.progress__text {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: var(--text-color);\n  font-weight: bold;\n}\n\n/* action-buttons für richtig/falsch Antworten */\n.action-btn {\n  width: 50px;\n  height: 50px;\n  border: none;\n  border-radius: 50%;\n  font-size: 1.5rem;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n  transition: filter 0.3s;\n}\n.action-btn.wrong {\n  background-color: #e74c3c;\n}\n.action-btn.correct {\n  background-color: #2ecc71;\n}\n.action-btn:hover {\n  filter: brightness(0.9);\n}\n\n/* back-button oben links */\n.back-button {\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 5px;\n  background: var(--header-bg);\n  color: var(--text-color);\n  box-shadow: 0 2px 5px var(--header-shadow);\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n.back-button:hover {\n  opacity: 0.9;\n}\n\n/* stylings für endscreen-überschrift und chart */\n.result-screen h2 {\n  margin-bottom: 1rem;\n  color: var(--text-color);\n}\ncanvas {\n  max-width: 250px;\n  max-height: 250px;\n  margin-bottom: 1rem;\n}\n/* buttons auf dem Ergebnis-Screen */\n.result-btn {\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 5px;\n  background: var(--text-color);\n  color: var(--card-bg);\n  margin: 0 0.5rem;\n  cursor: pointer;\n  transition: opacity 0.3s;\n}\n.result-btn:hover {\n  opacity: 0.8;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Unendlicher modus          Nur Unvollständige      ⬅ Zurück                                                    {{currentFlashcard?.question}}                {{currentFlashcard?.answer}}                                          ✖                    {{learningProgress}}/6            ✔      ergebnis: {{((correctCount/totalCount)*100)|number:\\'1.0-0\\'}}%            Weiter Lernen    Beenden  '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlashcardPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlashcardsListComponent.html":{"url":"components/FlashcardsListComponent.html","title":"component - FlashcardsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlashcardsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/flashcards-list/flashcards-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flashcards-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterModule\n                                HeaderComponent\n                            SearchSortPipe\n                                AddItemComponent\n                                EditableCardComponent\n                \n            \n\n            \n                styleUrls\n                ./flashcards-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flashcards-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMenuId\n                            \n                            \n                                allCards\n                            \n                            \n                                    Private\n                                cardsSub\n                            \n                            \n                                editedAnswer\n                            \n                            \n                                editedQuestion\n                            \n                            \n                                editingCardId\n                            \n                            \n                                searchQuery\n                            \n                            \n                                sortCriteria\n                            \n                            \n                                subtopicId\n                            \n                            \n                                topicId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelEditing\n                            \n                            \n                                closeMenu\n                            \n                            \n                                deleteCard\n                            \n                            \n                                goBack\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddFlashcard\n                            \n                            \n                                onSortChange\n                            \n                            \n                                openLernmodus\n                            \n                            \n                                resetAllProgress\n                            \n                            \n                                saveCard\n                            \n                            \n                                startEditing\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, service: GetDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        GetDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEditing\n                        \n                    \n                \n            \n            \n                \ncancelEditing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:83\n                        \n                    \n\n\n            \n                \n                        kontext-menü schließen\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCard\n                        \n                    \n                \n            \n            \n                \ndeleteCard(cardId: number, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:73\n                        \n                    \n\n\n            \n                \n                        eine ebene zurück in der routenhierarchie\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddFlashcard\n                        \n                    \n                \n            \n            \n                \nonAddFlashcard(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSortChange\n                        \n                    \n                \n            \n            \n                \nonSortChange(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:78\n                        \n                    \n\n\n            \n                \n                        wenn user im sort-select was ändert\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openLernmodus\n                        \n                    \n                \n            \n            \n                \nopenLernmodus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetAllProgress\n                        \n                    \n                \n            \n            \n                \nresetAllProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveCard\n                        \n                    \n                \n            \n            \n                \nsaveCard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startEditing\n                        \n                    \n                \n            \n            \n                \nstartEditing(card: IFlashcard, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            IFlashcard\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu(id: number, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/flashcards-list/flashcards-list.component.ts:88\n                        \n                    \n\n\n            \n                \n                        kontext-menü für karten-toggle\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeMenuId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFlashcard[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardsSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedAnswer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingCardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortCriteria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'question-asc'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtopicId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topicId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/flashcards-list/flashcards-list.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderComponent } from '../../shared/components/header/header.component';\nimport { SearchSortPipe } from '../../shared/components/search-sort-pipe/search-sort.pipe';\nimport { AddItemComponent } from '../../shared/components/add-item/add-item.component';\nimport { EditableCardComponent } from '../../shared/components/editable-card/editable-card.component';\nimport { GetDataService } from '../../core/services/getDataServices/get-data.service';\nimport { IFlashcard } from '../../core/models/iflashcard';\nimport { Subscription, forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-flashcards-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    HeaderComponent,\n    SearchSortPipe,\n    AddItemComponent,\n    EditableCardComponent\n  ],\n  templateUrl: './flashcards-list.component.html',\n  styleUrls: ['./flashcards-list.component.css']\n})\nexport class FlashcardsListComponent implements OnInit, OnDestroy {\n  topicId!: number;  // id vom aktuellen topic aus der url\n  subtopicId!: number;  // id vom aktuellen subtopic aus der url\n  allCards: IFlashcard[] = [];  // alle geladenen karten zum anzeigen\n\n  searchQuery = '';  // suchbegriff für filter-pipe\n  sortCriteria = 'question-asc';  // sortierung, format: feld-richtung\n\n  activeMenuId: number | null = null;  // id der karte, bei der das kontext-menü offen ist (edit/delete)\n  editingCardId: number | null = null;  // id der karte, die gerade im edit-mode ist\n  editedQuestion = '';  // temp-speicher für die editierten werte\n  editedAnswer = '';\n\n  // subscription merken, damit wir sie beim destroy unsubscriben\n  private cardsSub: Subscription | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: GetDataService\n  ) {}\n\n  ngOnInit(): void {\n    // topicId/subtopicId als number aus den route-params parsen\n    this.topicId    = +this.route.snapshot.paramMap.get('topicId')!;\n    this.subtopicId = +this.route.snapshot.paramMap.get('subtopicId')!;\n\n    // flashcards vom backend holen und ins allCards-array packen\n    this.cardsSub = this.service\n      .getFlashcards(this.topicId, this.subtopicId)\n      .subscribe(cards => this.allCards = cards);\n  }\n\n  ngOnDestroy(): void {\n    // subscription beenden sonst fliegt memory leak\n    this.cardsSub?.unsubscribe();\n  }\n\n  // navigiert in den lernmodus für dieses topic/subtopic\n  openLernmodus(): void {\n    console.log('Navigiere zu Lernmodus für Topic', this.topicId, 'Subtopic', this.subtopicId);\n    this.router.navigate(['lernmodus'], { relativeTo: this.route });\n  }\n\n  /** eine ebene zurück in der routenhierarchie */\n  goBack(): void {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  /** wenn user im sort-select was ändert */\n  onSortChange(e: Event): void {\n    this.sortCriteria = (e.target as HTMLSelectElement).value;\n  }\n\n  /** kontext-menü schließen */\n  closeMenu(): void {\n    this.activeMenuId = null;\n  }\n\n  /** kontext-menü für karten-toggle */\n  toggleMenu(id: number, e: MouseEvent): void {\n    e.stopPropagation(); // klick nicht an höhere elemente weiterreichen\n    this.activeMenuId = this.activeMenuId === id ? null : id;\n  }\n\n  // neue karte hinzufügen über shared AddItemComponent\n  onAddFlashcard(data: { name: string; description: string }): void {\n    this.service\n      .addFlashcard(this.topicId, this.subtopicId, data.name, data.description)\n      .subscribe(card => this.allCards.push(card)); // karte ans ende hängen\n  }\n\n  // edit-mode starten: felder mit aktuellen werten füllen\n  startEditing(card: IFlashcard, e: MouseEvent): void {\n    e.stopPropagation();\n    this.editingCardId  = card.id;\n    this.editedQuestion = card.question;\n    this.editedAnswer   = card.answer;\n  }\n\n  // speichert die edits auf server und aktualisiert das array\n  saveCard(): void {\n    if (this.editingCardId == null) return;\n    this.service\n      .updateFlashcard(\n        this.topicId,\n        this.subtopicId,\n        this.editingCardId,\n        { question: this.editedQuestion.trim(), answer: this.editedAnswer.trim() }\n      )\n      .subscribe(updated => {\n        // finde index der bearbeiteten karte und ersetze sie\n        const idx = this.allCards.findIndex(c => c.id === this.editingCardId);\n        if (idx > -1) this.allCards[idx] = updated;\n        // edit-mode und menü schließen\n        this.editingCardId = null;\n        this.activeMenuId  = null;\n      });\n  }\n\n  // edit-mode abbrechen ohne speichern\n  cancelEditing(): void {\n    this.editingCardId = null;\n    this.activeMenuId  = null;\n  }\n\n  // karte löschen nach bestätigung\n  deleteCard(cardId: number, e: MouseEvent): void {\n    e.stopPropagation();\n    if (!confirm('Soll diese Karte wirklich gelöscht werden?')) return;\n    this.service\n      .deleteFlashcard(this.topicId, this.subtopicId, cardId)\n      .subscribe(() => {\n        // entferne karte aus dem array\n        this.allCards = this.allCards.filter(c => c.id !== cardId);\n        this.activeMenuId = null;\n      });\n  }\n\n  // setzt bei allen karten den learningProgress auf 0 zurück\n  resetAllProgress(): void {\n    if (!confirm('Möchtest du wirklich alle Lernstände zurücksetzen?')) return;\n    // build array von update-calls\n    const calls = this.allCards.map(c =>\n      this.service.updateLearningProgress(this.topicId, this.subtopicId, c.id, 0)\n    );\n    // alle paralllel abfeuern und nachher lokal resetten\n    forkJoin(calls).subscribe(() =>\n      this.allCards.forEach(c => c.learningProgress = 0)\n    );\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n    \n    ⬅ Zurück\n\n    Karteikarten\n    Fragen und Antworten\n\n    \n    \n      Lernmodus Starten\n      🎯 Lernstände Zurücksetzen\n    \n\n    \n    \n      \n        🔍 suche:\n        \n      \n      \n        📌 Sortieren Nach:\n        \n          Frage (A → Z)\n          Frage (Z → A)\n          Antwort (A → Z)\n          Antwort (Z → A)\n          Lernstand (Niedrig → Hoch)\n          Lernstand (Hoch → Niedrig)\n        \n      \n    \n\n    \n    \n      \n      \n\n      \n      \n        \n          \n          \n            = 2 && card.learningProgress = 5\n              }\"\n              title=\"lernstand: {{ card.learningProgress }}\"\n            >\n            {{ card.question }}\n            {{ card.answer }}\n          \n          \n          \n            Frage:\n            \n            Antwort:\n            \n            \n              💾 Speichern\n              ❌ Abbrechen\n            \n          \n          \n          \n            ✏️ Bearbeiten\n            🗑️ Löschen\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./flashcards-list.component.css\n                \n                /* haupt-container für die seite, font, paddings und full-height */\n.flashcardlist-page {\n  font-family: Arial, sans-serif;\n  padding: 1rem;\n  padding-top: 7rem;               /* platz fürs header */\n  background-color: var(--bg-color);\n  color: var(--text-color);\n  min-height: 100vh;\n}\n\n/* inhalt-box: card-bg, rundungen, padding und schatten */\n.flashcardlist-content {\n  background-color: var(--card-bg);\n  border-radius: 6px;\n  padding: 1.5rem;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n\n  /* titel-styles */\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 0.5rem;\n    color: var(--text-color);\n  }\n  h2 {\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n    color: var(--text-color);\n  }\n}\n\n/* aktionen-buttons nebeneinander */\n.actions {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1rem;\n\n  /* button-grundstyle */\n  button {\n    background-color: var(--card-bg);\n    color: var(--text-color);\n    border: 1px solid var(--card-border);\n    transition: background-color 0.2s;\n    /* hover-effekt */\n    &:hover {\n      background-color: var(--hover-bg, #e6f7ff);\n    }\n  }\n}\n\n/* such- und sortier-box */\n.search-filter-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 1rem;\n  padding: 0.8rem;\n  background: var(--card-bg);\n  border-radius: 6px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n  /* gruppen für label+input */\n  .filter-group {\n    display: flex;\n    flex-direction: column;\n    gap: 0.3rem;\n  }\n\n  /* styling für input und select */\n  input,\n  select {\n    padding: 8px;\n    font-size: 0.9rem;\n    border: 1px solid var(--card-border);\n    border-radius: 4px;\n    background-color: var(--card-bg);\n    color: var(--text-color);\n    transition: all 0.2s;\n\n    /* fokussierter zustand */\n    &:focus {\n      border-color: #007bff;\n      outline: none;\n      box-shadow: 0 0 4px rgba(0, 123, 255, 0.4);\n    }\n  }\n}\n\n/* grid für die karten + add-item */\n.flashcardlist-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1.5rem;\n\n  /* wrapper für jede editable-card relativ positionieren */\n  app-editable-card {\n    position: relative;\n  }\n\n  /* kontext-menu oben-rechts */\n  .menu {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    background-color: var(--card-bg);\n    border: 1px solid var(--card-border);\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    z-index: 10;\n    padding: 0.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              ⬅ Zurück    Karteikarten    Fragen und Antworten              Lernmodus Starten      🎯 Lernstände Zurücksetzen                          🔍 suche:                            📌 Sortieren Nach:                  Frage (A → Z)          Frage (Z → A)          Antwort (A → Z)          Antwort (Z → A)          Lernstand (Niedrig → Hoch)          Lernstand (Hoch → Niedrig)                                                                                          = 2 && card.learningProgress = 5              }\"              title=\"lernstand: {{ card.learningProgress }}\"            >            {{ card.question }}            {{ card.answer }}                                          Frage:                        Antwort:                                      💾 Speichern              ❌ Abbrechen                                                      ✏️ Bearbeiten            🗑️ Löschen                              '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlashcardsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetDataService.html":{"url":"injectables/GetDataService.html","title":"injectable - GetDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/getDataServices/get-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                base\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFlashcard\n                            \n                            \n                                addSubtopic\n                            \n                            \n                                addTopic\n                            \n                            \n                                deleteFlashcard\n                            \n                            \n                                deleteSubtopic\n                            \n                            \n                                deleteTopic\n                            \n                            \n                                getFlashcards\n                            \n                            \n                                getSubtopics\n                            \n                            \n                                getTopics\n                            \n                            \n                                updateFlashcard\n                            \n                            \n                                updateLearningProgress\n                            \n                            \n                                updateSubtopic\n                            \n                            \n                                updateTopic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/getDataServices/get-data.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFlashcard\n                        \n                    \n                \n            \n            \n                \naddFlashcard(topicId: number, subId: number, question: string, answer: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                question\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                answer\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSubtopic\n                        \n                    \n                \n            \n            \n                \naddSubtopic(topicId: number, name: string, description: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTopic\n                        \n                    \n                \n            \n            \n                \naddTopic(name: string, description: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFlashcard\n                        \n                    \n                \n            \n            \n                \ndeleteFlashcard(topicId: number, subId: number, cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSubtopic\n                        \n                    \n                \n            \n            \n                \ndeleteSubtopic(topicId: number, subId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTopic\n                        \n                    \n                \n            \n            \n                \ndeleteTopic(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFlashcards\n                        \n                    \n                \n            \n            \n                \ngetFlashcards(topicId: number, subId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubtopics\n                        \n                    \n                \n            \n            \n                \ngetSubtopics(topicId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopics\n                        \n                    \n                \n            \n            \n                \ngetTopics()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlashcard\n                        \n                    \n                \n            \n            \n                \nupdateFlashcard(topicId: number, subId: number, cardId: number, partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                partial\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLearningProgress\n                        \n                    \n                \n            \n            \n                \nupdateLearningProgress(topicId: number, subId: number, cardId: number, learningProgress: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                learningProgress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSubtopic\n                        \n                    \n                \n            \n            \n                \nupdateSubtopic(topicId: number, subId: number, partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                partial\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTopic\n                        \n                    \n                \n            \n            \n                \nupdateTopic(id: number, partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/getDataServices/get-data.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                partial\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/getDataServices/get-data.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ITopic } from '../../models/itopic';\nimport { ISubtopic } from '../../models/isubtopic';\nimport { IFlashcard } from '../../models/iflashcard';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class GetDataService {\n  private base = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  //topics\n  getTopics(): Observable {\n    return this.http.get(`${this.base}/topics`);\n  }\n\n  addTopic(name: string, description: string): Observable {\n    return this.http.post(\n      `${this.base}/topics`,\n      { name, description }\n    );\n  }\n\n  updateTopic(id: number, partial: Partial): Observable {\n    return this.http.put(\n      `${this.base}/topics/${id}`,\n      partial\n    );\n  }\n\n  deleteTopic(id: number): Observable {\n    return this.http.delete(`${this.base}/topics/${id}`);\n  }\n\n  //subtopics\n  getSubtopics(topicId: number): Observable {\n    return this.http.get(`${this.base}/topics/${topicId}/subtopics`);\n  }\n\n  addSubtopic(topicId: number, name: string, description: string): Observable {\n    return this.http.post(\n      `${this.base}/topics/${topicId}/subtopics`,\n      { name, description }\n    );\n  }\n\n  updateSubtopic(\n    topicId: number,\n    subId: number,\n    partial: Partial\n  ): Observable {\n    return this.http.put(\n      `${this.base}/topics/${topicId}/subtopics/${subId}`,\n      partial\n    );\n  }\n\n  deleteSubtopic(topicId: number, subId: number): Observable {\n    return this.http.delete(\n      `${this.base}/topics/${topicId}/subtopics/${subId}`\n    );\n  }\n\n  //flashcards\n  getFlashcards(topicId: number, subId: number): Observable {\n    return this.http.get(\n      `${this.base}/topics/${topicId}/subtopics/${subId}/flashcards`\n    );\n  }\n\n  addFlashcard(\n    topicId: number,\n    subId: number,\n    question: string,\n    answer: string\n  ): Observable {\n    return this.http.post(\n      `${this.base}/topics/${topicId}/subtopics/${subId}/flashcards`,\n      { question, answer }\n    );\n  }\n\n  updateFlashcard(\n    topicId: number,\n    subId: number,\n    cardId: number,\n    partial: Partial\n  ): Observable {\n    return this.http.put(\n      `${this.base}/topics/${topicId}/subtopics/${subId}/flashcards/${cardId}`,\n      partial\n    );\n  }\n\n  deleteFlashcard(\n    topicId: number,\n    subId: number,\n    cardId: number\n  ): Observable {\n    return this.http.delete(\n      `${this.base}/topics/${topicId}/subtopics/${subId}/flashcards/${cardId}`\n    );\n  }\n\n  updateLearningProgress(\n    topicId: number,\n    subId: number,\n    cardId: number,\n    learningProgress: number\n  ): Observable {\n    return this.http.patch(\n      `${this.base}/topics/${topicId}/subtopics/${subId}/flashcards/${cardId}`,\n      { learningProgress }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ToDoFlashcardComponent\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scrolled\n                            \n                            \n                                showTodoPopup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                navigateTo\n                            \n                            \n                                    \n                                onWindowScroll\n                            \n                            \n                                toggleDarkMode\n                            \n                            \n                                toggleTodoPopup\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, darkModeService: DarkModeService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/header/header.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkModeService\n                                                  \n                                                        \n                                                                        DarkModeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:scroll\n                        \n                    \n                \n            \n            \n                \nwindow:scroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.component.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onWindowScroll\n                        \n                    \n                \n            \n            \n                \n                        \n                    onWindowScroll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDarkMode\n                        \n                    \n                \n            \n            \n                \ntoggleDarkMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTodoPopup\n                        \n                    \n                \n            \n            \n                \ntoggleTodoPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        scrolled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/header/header.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTodoPopup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/header/header.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DarkModeService } from '../../../core/services/dark-modeServices/dark-mode.service';\nimport { AuthService } from '../../../core/services/auth/auth.service';\nimport { ToDoFlashcardComponent } from '../../../features/to-do-flashcard/to-do-flashcard.component';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n  imports: [ToDoFlashcardComponent, CommonModule],\n})\nexport class HeaderComponent {\n  scrolled: boolean = false;\n  showTodoPopup = false;\n\n  constructor(\n    private router: Router,// zum navigieren\n    private darkModeService: DarkModeService,// um dark mode umzuschalten\n    private authService: AuthService// zum logout\n  ) {}\n\n  @HostListener('window:scroll', [])// hört aufs scroll-event\n  onWindowScroll() {\n    // wenn weiter als 50px gescrollt, scrolled auf true setzen\n    this.scrolled = window.scrollY > 50;\n  }\n\n  navigateTo(route: string) {\n    this.router.navigate([route]); // nav zu ner route\n  }\n\n  toggleDarkMode(): void {\n    this.darkModeService.toggleDarkMode(); // dark mode an/aus\n  }\n\n  toggleTodoPopup() {\n    this.showTodoPopup = !this.showTodoPopup;\n  }\n\n  logout(): void {\n    this.authService.logout();// token löschen\n    this.router.navigate(['/login']);// zurück zur login-seite\n  }\n}\n    \n\n    \n        \n  \n    \n    \n      Quickflip\n    \n    \n      \n      \n        Startseite\n      \n\n      \n\n      \n        Info\n      \n      \n        🌙 Dark Mode\n      \n      \n        Logout\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .header {\n  position: fixed;           /* immer oben kleben */\n  top: 0; left: 0;\n  width: 100%;\n  z-index: 1000;             /* über allem */\n  background-color: var(--header-bg, #ffffff);\n  box-shadow: 0 2px 8px var(--header-shadow, rgba(0, 0, 0, 0.1));\n  transition: all 0.3s ease-in-out;\n  padding: 1.5rem 1.5rem;    /* bissl luft rundum */\n}\n\n.header.scrolled {\n  padding: 0.4rem 1.5rem;    /* weniger padding, wenn gescrollt */\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.08);\n}\n\n.header-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 72rem;          /* breite begrenzen */\n  margin: 0 auto;            /* zentrieren */\n  padding: 0 1.5rem;\n}\n\n.logo {\n  cursor: pointer;           /* clickable */\n}\n\n.logo-text {\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: var(--text-color, #1a1a1a);\n  transition: color 0.3s ease;\n}\n\n.nav {\n  display: flex;\n  gap: 1rem;\n}\n\n.nav-button {\n  background: transparent;\n  border: none;\n  font-size: 0.9rem;\n  font-weight: bold;\n  cursor: pointer;\n  color: var(--text-color, #1a1a1a);\n  transition: color 0.3s ease;\n  padding: 0.4rem 0.6rem;\n  border-radius: 4px;\n}\n\n.nav-button:hover {\n  color: #007bff;            /* hover-farbe */\n}\n\n.nav-button:active {\n  transform: scale(0.97);    /* klick-feedback */\n}\n\n.dark-toggle {\n  display: flex;\n  align-items: center;\n  gap: 0.3rem;               /* icon und text abstand */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Quickflip                            Startseite                          Info                    🌙 Dark Mode                    Logout            '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlashcard.html":{"url":"interfaces/IFlashcard.html","title":"interface - IFlashcard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlashcard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/iflashcard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answer\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isToggled\n                                        \n                                \n                                \n                                        \n                                            learningProgress\n                                        \n                                \n                                \n                                        \n                                            question\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subtopic\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isToggled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isToggled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        learningProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        learningProgress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        question\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        question:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtopic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtopic:         ISubtopic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISubtopic\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISubtopic } from \"./isubtopic\";\n\nexport interface IFlashcard {\n  id: number;\n  question: string;\n  answer: string;\n  learningProgress: number;\n  isToggled: boolean;\n  subtopic?: ISubtopic;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubtopic.html":{"url":"interfaces/ISubtopic.html","title":"interface - ISubtopic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubtopic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/isubtopic.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flashcards\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flashcards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flashcards:         IFlashcard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFlashcard[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFlashcard } from './iflashcard';\n\nexport interface ISubtopic {\n  id: number;         // von string → number\n  name: string;\n  description: string;\n  flashcards?: IFlashcard[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITopic.html":{"url":"interfaces/ITopic.html","title":"interface - ITopic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITopic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/itopic.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subtopics\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtopics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtopics:         ISubtopic[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISubtopic[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISubtopic } from \"./isubtopic\";\nexport interface ITopic {\n  id: number;         // von string → number\n  name: string;\n  description: string;\n  subtopics?: ISubtopic[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserData.html":{"url":"interfaces/IUserData.html","title":"interface - IUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/iuserdata.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUserData {\n    id: string;\n    username: string;\n    password: string;\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/info/info.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n            \n                styleUrl\n                ./info.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { HeaderComponent } from \"../../shared/components/header/header.component\";\n@Component({\n  selector: 'app-info',\n  standalone: true,\n  imports: [HeaderComponent],\n  templateUrl: './info.component.html',\n  styleUrl: './info.component.css'\n})\nexport class InfoComponent {\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Infoseite\n      Willkommen auf der Infoseite!\n      Hier findest du alle wichtigen Informationen über die Anwendung.\n      \n      Hauptfeatures\n      \n        Verwaltung von Themenbereichen\n        Erstellen von Karteikarten\n        Einfache Navigation\n      \n      \n      Kontakt\n      support&#64;example.com\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Infoseite      Willkommen auf der Infoseite!      Hier findest du alle wichtigen Informationen über die Anwendung.            Hauptfeatures              Verwaltung von Themenbereichen        Erstellen von Karteikarten        Einfache Navigation                  Kontakt      support@example.com      '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                                HeaderComponent\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inputPassword\n                            \n                            \n                                inputUsername\n                            \n                            \n                                loginFailed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                inputCheck\n                            \n                            \n                                navigateToSignup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        inputCheck\n                        \n                    \n                \n            \n            \n                \ninputCheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/login/login.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToSignup\n                        \n                    \n                \n            \n            \n                \nnavigateToSignup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/login/login.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inputPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms'; // forms-modul für ngModel & ngSubmit\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../../core/services/auth/auth.service'; // unser auth-service\nimport { HeaderComponent } from '../../../shared/components/header/header.component'; // header-komponente\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [FormsModule, CommonModule, HeaderComponent],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  inputUsername = '';// hier speicher ich den eingabewert für username\n  inputPassword = '';// hier speicher ich das passwort\n  loginFailed = false;// flag ob login fehlgeschlagen is\n\n  constructor(\n    private auth: AuthService, // auth-service reinziehen per DI\n    private router: Router// router zum navigieren\n  ) {}\n\n  // wird aufgerufen, wenn das login-form abgeschickt wird\n  inputCheck(): void {\n    this.auth.login({ username: this.inputUsername, password: this.inputPassword })\n      .subscribe({\n        next: () => {\n          this.loginFailed = false;// fehler zurücksetzen\n          this.router.navigate(['/']);// nach erfolgreichem login zur startseite\n        },\n        error: () => {\n          this.loginFailed = true;// show fehlermeldung\n          setTimeout(() => (this.loginFailed = false), 4000); // nach 4s wieder ausblenden\n        }\n      });\n  }\n\n  // navigiert zur signup-seite, wenn user noch keinen account hat\n  navigateToSignup() {\n    this.router.navigate(['/signup']);\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n  \n    \n    \n        Login\n\n      \n      \n        Benutzername:\n        \n      \n\n      \n      \n        Passwort:\n        \n      \n\n      \n      Login\n    \n\n    \n    \n       Login Fehlgeschlagen\n    \n\n    \n    \n      Noch kein Konto? Hier Registrieren\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                /* login-page container: full viewport packt form zenteriert mittig rein */\n.login-page {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--bg-color);\n}\n\n/* box für das login-form: padding, rundungen und schatten */\n.login-container {\n  width: 360px;\n  padding: 2rem;\n  background-color: var(--card-bg);\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n}\n\n/* titel im formular: text zenteriert, größe und abstand */\nh1 {\n  text-align: center;\n  color: var(--text-color);\n  font-family: inherit;\n}\n\n/* form-group: abstand zwischen den input-blöcken */\n.form-group {\n  margin-bottom: 1rem;\n}\n\n/* label styling: block-element, etwas abstand unterm label */\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  color: var(--text-color);\n  font-family: inherit;\n}\n\n/* input grundstyle: volle breite, padding, border und rundungen */\ninput {\n  width: 100%;\n  height: 3rem;              /* 48px */\n  padding: 0 1rem;\n  font-size: 1rem;\n  font-family: inherit;\n  border: 2px solid var(--card-border);\n  border-radius: 4px;\n  background-color: var(--card-bg);\n  color: var(--text-color);\n  transition: border-color 0.2s;\n  box-sizing: border-box;\n}\n\n/* fokussierter input: blaue border und leichter schatten */\ninput:focus {\n  border-color: #007bff;\n  outline: none;\n  box-shadow: 0 0 4px rgba(0,123,255,0.4);\n}\n\n/* login-button style: volle breite, padding, grüne hintergrund */\n.login-button {\n  width: 100%;\n  height: 3rem;\n  margin-top: 0.5rem;\n  font-size: 1rem;\n  font-family: inherit;\n  background-color: #4caf50;\n  color: var(--card-bg);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n/* hover-effekt fürs button: dunkleres grün */\n.login-button:hover {\n  background-color: #0056b3;\n}\n\n/* fehlernachricht: rot, zentriert, shake-animation */\n.error-message {\n  margin-top: 1rem;\n  color: #d32f2f;\n  text-align: center;\n  font-family: inherit;\n  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;\n}\n\n/* keyframes für shake-animation bei fehler */\n@keyframes shake {\n  10%,90%   { transform: translateX(-1px); }\n  20%,80%   { transform: translateX(2px);  }\n  30%,50%,70% { transform: translateX(-4px); }\n  40%,60%   { transform: translateX(4px);  }\n}\n\n/* reminder text unterm formular, link style und hover */\n.signup-reminder {\n  margin-top: 1.5rem;\n  text-align: center;\n  font-family: inherit;\n}\n\n.signup-reminder a {\n  color: var(--text-color);\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.signup-reminder a:hover {\n  text-decoration: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Login                    Benutzername:                                  Passwort:                          Login                   Login Fehlgeschlagen                  Noch kein Konto? Hier Registrieren      '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterData.html":{"url":"interfaces/RegisterData.html","title":"interface - RegisterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core'; // injectable damit angular das ding ins service-regal packt\nimport { HttpClient } from '@angular/common/http'; // http-client zum api anfunken\nimport { BehaviorSubject, map, Observable } from 'rxjs'; // rxjs kram für observable streams\nimport { environment } from '../../../../environments/environment'; // env settings (url, keys)\n\ninterface Credentials { username: string; password: string; } // schnittstelle für login\ninterface RegisterData { username: string; email: string; password: string; } // schnittstelle fürs registrieren\n\n@Injectable({ providedIn: 'root' }) // service an root hängen damit er überall verfügbar is\nexport class AuthService {\n  private apiBase = environment.apiUrl + '/auth'; // basis-url für auth-endpoints\n  private token$ = new BehaviorSubject(null); // hält aktuelles token oder null\n  public isLoggedIn$: Observable = this.token$.pipe(\n    map(t => !!t)  //mappt token -> boolean, true wenn token nicht null/leer\n  );\n\n  constructor(private http: HttpClient) {\n    //beim start gucken, ob schon token im localstorage liegt\n    const saved = localStorage.getItem(environment.auth.tokenStorageKey);\n    this.token$.next(saved); // initial in den behavior-subject pushen\n  }\n\n  // token abrufen sonst null\n  getToken(): string | null {\n    return this.token$.value;\n  }\n\n  // login: credentials an backend schicken und token speichern\n  login(data: Credentials): Observable {\n    return this.http.post(\n      `${this.apiBase}/login`,\n      data\n    ).pipe(\n      map(res => {\n        // wenn login erfolgreich dann token ins localstorage und in den stream\n        localStorage.setItem(environment.auth.tokenStorageKey, res.token);\n        this.token$.next(res.token);\n        return res; //weiterreichen des responses\n      })\n    );\n  }\n\n  // registrieren: sendet user-daten, bekommt user-id zurück\n  register(data: RegisterData): Observable {\n    return this.http.post(\n      `${this.apiBase}/register`,\n      data\n    );\n  }\n\n  // logout: token löschen und loggedIn status auf false setzen\n  logout(): void {\n    localStorage.removeItem(environment.auth.tokenStorageKey);  \n    this.token$.next(null); // stream auf null pushen -> isLoggedIn$ wird false\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/registration/registration.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationFailed\n                            \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToLogin\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, fb: FormBuilder, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/registration/registration.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLogin\n                        \n                    \n                \n            \n            \n                \nnavigateToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/registration/registration.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/registration/registration.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/registration/registration.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/registration/registration.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component }       from '@angular/core';\nimport { Router }          from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; // form-builder für reactive forms\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule }    from '@angular/common';\nimport { AuthService }     from '../../../core/services/auth/auth.service';\nimport { HeaderComponent } from '../../../shared/components/header/header.component';\n\n@Component({\n  selector: 'app-registration',\n  standalone: true,\n  imports: [HeaderComponent, ReactiveFormsModule, CommonModule],\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n  registrationForm: FormGroup;// reactive form objekt\n  registrationFailed = false;// flag, ob registrierung schiefgegangen ist\n\n  constructor(\n    private router: Router,// router reinziehen über DI\n    private fb: FormBuilder,// form builder reinziehen\n    private auth: AuthService// auth-service zum ansprechen der api\n  ) {\n    // form initial aufbauen mit validation rules\n    this.registrationForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)]], // username braucht min 3 chars\n      email:    ['', [Validators.required, Validators.email]],// email muss valid sein\n      password: ['', [Validators.required, Validators.minLength(8)]] // pw braucht min 8 chars\n    });\n  }\n\n  // methode wird beim klick auf registrieren-button ausgeführt\n  registerUser(): void {\n    // wenn form invalid is, direkt fehler flag setzen und abbrechen\n    if (this.registrationForm.invalid) {\n      this.registrationFailed = true;\n      return;\n    }\n\n    // werte aus form holen\n    const { username, email, password } = this.registrationForm.value;\n    // api-call zum registrieren, subscribe zum fehler/erfolg behandeln\n    this.auth.register({ username, email, password })\n      .subscribe({\n        next: () => this.router.navigate(['/login']), // bei erfolg zur login-seite\n        error: () => this.registrationFailed = true  // bei error flag setzen\n      });\n  }\n\n  // falls user doch zum login will\n  navigateToLogin(): void {\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n  \n    \n    \n      registrierung\n\n      \n      \n        Benutzername:\n        \n      \n\n      \n      \n        E-Mail:\n        \n      \n\n      \n      \n        Passwort:\n        \n      \n\n      \n      \n        registrieren\n      \n    \n\n    \n    \n       Registrierung Fehlgeschlagen\n    \n\n    \n    \n      Bereits ein Konto? Hier Anmelden\n    \n  \n\n\n    \n\n    \n                \n                    ./registration.component.css\n                \n                .registration-page {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--bg-color);\n}\n\n.registration-container {\n  width: 360px;\n  padding: 2rem;\n  background-color: var(--card-bg);\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n}\n\nh1 {\n  text-align: center;\n  color: var(--text-color);\n  font-family: inherit;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  color: var(--text-color);\n  font-family: inherit;\n}\n\ninput {\n  width: 100%;\n  height: 3rem;              /* für input */\n  padding: 0 1rem;\n  font-size: 1rem;\n  font-family: inherit;\n  border: 2px solid var(--card-border);\n  border-radius: 4px;\n  background-color: var(--card-bg);\n  color: var(--text-color);\n  transition: border-color 0.2s;\n  box-sizing: border-box;\n}\n\n.registration-container textarea {\n  height: auto;\n  min-height: 6rem;          /* mehr Platz für Beschreibung */\n  padding: 0.5rem 1rem;\n}\n\ninput:focus {\n  border-color: #007bff;\n  outline: none;\n  box-shadow: 0 0 4px rgba(0,123,255,0.4);\n}\n\n.register-button {\n  width: 100%;\n  height: 3rem;\n  margin-top: 0.5rem;\n  font-size: 1rem;\n  font-family: inherit;\n  background-color: #4caf50;\n  color: var(--card-bg);\n  border: none;\n  border-radius: 4px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n/* hover-effekt für den button: dunkleres blau-grün */\n.register-button:hover {\n  background-color: #0056b3;\n}\n\n.error-message {\n  color: #d32f2f;\n  text-align: center;\n  font-family: inherit;\n}\n\n.login-reminder {\n  margin-top: 1.5rem;\n  text-align: center;\n  font-family: inherit;\n}\n\n/* link unter dem form: blau und unterstrichen */\n.login-reminder a {\n  color: var(--text-color);\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n/* hover für den link: unterstrich entfernen */\n.login-reminder a:hover {\n  text-decoration: none;\n}\n\nbutton:disabled {\n  cursor: not-allowed;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  registrierung                    Benutzername:                                  E-Mail:                                  Passwort:                                  registrieren                         Registrierung Fehlgeschlagen                  Bereits ein Konto? Hier Anmelden      '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchSortPipe.html":{"url":"pipes/SearchSortPipe.html","title":"pipe - SearchSortPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchSortPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/search-sort-pipe/search-sort.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        searchSort\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(items: T[], searchTerm: string, sortCriteria: string, searchableKeys: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/search-sort-pipe/search-sort.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        Filtert und sortiert ein Array anhand von Suchbegriff und Sortierkriterium.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                items\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    zu verarbeitendes Array\n\n                                            \n                                        \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    Suchbegriff für Filter\n\n                                            \n                                        \n                                        \n                                                sortCriteria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    Sortierkriterium im Format 'key-direction' (z.B. 'question-asc')\n\n                                            \n                                        \n                                        \n                                                searchableKeys\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    Keys von T, die durchsucht werden\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                gefiltertes und sortiertes Array\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchSort',\n  standalone: true,\n  pure: false // unrein, damit bei jeder Change Detection neu berechnet wird\n})\nexport class SearchSortPipe> implements PipeTransform {\n  /**\n   * Filtert und sortiert ein Array anhand von Suchbegriff und Sortierkriterium.\n   * @param items zu verarbeitendes Array\n   * @param searchTerm Suchbegriff für Filter\n   * @param sortCriteria Sortierkriterium im Format 'key-direction' (z.B. 'question-asc')\n   * @param searchableKeys Keys von T, die durchsucht werden\n   * @returns gefiltertes und sortiertes Array\n   */\n  transform(\n    items: T[] = [],                // Eingabe-Array\n    searchTerm: string = '',        // Suchbegriff\n    sortCriteria: string = '',      // Sortierkriterium\n    searchableKeys: (keyof T)[] = []// Felder zum durchsuchen\n  ): T[] {\n    // Nur Items behalten, die den Suchbegriff enthalten\n    const term = searchTerm.trim().toLowerCase();\n    let filtered = term\n      ? items.filter(item =>\n          searchableKeys.some(key =>\n            String(item[key] ?? '')\n              .toLowerCase()\n              .includes(term)\n          )\n        )\n      : [...items];  // kein Suchbegriff → alle Items kopieren\n\n    // 2) Sortierkriterium parsen (Format: 'key-order')\n    let key = '';\n    let order = '';\n    if (sortCriteria) {\n      [key, order] = sortCriteria.split('-');\n    }\n    const ascending = order === 'asc'; // aufsteigend oder absteigend\n\n    // 3) Alias 'progress' auf echtes Feld mappen\n    const sortKey = (key === 'progress' ? 'learningProgress' : key) as keyof T;\n\n    // 4) Sortieren: nach numerischem oder String-Vergleich\n    if (sortKey) {\n      filtered.sort((a, b) => {\n        const aVal = a[sortKey];\n        const bVal = b[sortKey];\n\n        // undefined/null → ans Ende\n        if (aVal == null) return 1;\n        if (bVal == null) return -1;\n\n        // numerischer Vergleich\n        if (typeof aVal === 'number' && typeof bVal === 'number') {\n          return ascending ? aVal - bVal : bVal - aVal;\n        }\n\n        // String-Vergleich\n        return ascending\n          ? String(aVal).localeCompare(String(bVal))\n          : String(bVal).localeCompare(String(aVal));\n      });\n    }\n\n    return filtered; // gefilterte & sortierte Items zurückgeben\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubtopicsComponent.html":{"url":"components/SubtopicsComponent.html","title":"component - SubtopicsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SubtopicsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/subtopics/subtopics.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subtopics\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                HeaderComponent\n                            SearchSortPipe\n                                AddItemComponent\n                                EditableCardComponent\n                \n            \n\n            \n                styleUrls\n                ./subtopics.component.css\n            \n\n\n\n            \n                templateUrl\n                ./subtopics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMenuId\n                            \n                            \n                                editedSubtopicDescription\n                            \n                            \n                                editedSubtopicName\n                            \n                            \n                                editingSubtopicId\n                            \n                            \n                                searchQuery\n                            \n                            \n                                sortCriteria\n                            \n                            \n                                themengebietName\n                            \n                            \n                                topicId\n                            \n                            \n                                unterthemen$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSubtopicHandler\n                            \n                            \n                                cancelEditing\n                            \n                            \n                                closeMenu\n                            \n                            \n                                goBack\n                            \n                            \n                                loeschen\n                            \n                            \n                                navigateToUnterthema\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveSubtopic\n                            \n                            \n                                startEditing\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                updateSortOption\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, service: GetDataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/subtopics/subtopics.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        GetDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSubtopicHandler\n                        \n                    \n                \n            \n            \n                \naddSubtopicHandler(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEditing\n                        \n                    \n                \n            \n            \n                \ncancelEditing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loeschen\n                        \n                    \n                \n            \n            \n                \nloeschen(subtopicId: number, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subtopicId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToUnterthema\n                        \n                    \n                \n            \n            \n                \nnavigateToUnterthema(id: number, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveSubtopic\n                        \n                    \n                \n            \n            \n                \nsaveSubtopic()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startEditing\n                        \n                    \n                \n            \n            \n                \nstartEditing(sub: ISubtopic, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sub\n                                            \n                                                            ISubtopic\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu(id: number, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSortOption\n                        \n                    \n                \n            \n            \n                \nupdateSortOption(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/subtopics/subtopics.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeMenuId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/subtopics/subtopics.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedSubtopicDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/subtopics/subtopics.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedSubtopicName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/subtopics/subtopics.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingSubtopicId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/subtopics/subtopics.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/subtopics/subtopics.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortCriteria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'id-asc'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/subtopics/subtopics.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themengebietName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/subtopics/subtopics.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topicId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/subtopics/subtopics.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unterthemen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/features/subtopics/subtopics.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderComponent } from '../../shared/components/header/header.component';\nimport { SearchSortPipe } from '../../shared/components/search-sort-pipe/search-sort.pipe';\nimport { AddItemComponent } from '../../shared/components/add-item/add-item.component';\nimport { EditableCardComponent } from '../../shared/components/editable-card/editable-card.component';\nimport { GetDataService } from '../../core/services/getDataServices/get-data.service';\nimport { ISubtopic } from '../../core/models/isubtopic';\nimport { BehaviorSubject, forkJoin, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { IFlashcard } from '../../core/models/iflashcard';\n\n@Component({\n  selector: 'app-subtopics',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    HeaderComponent,\n    SearchSortPipe,\n    AddItemComponent,\n    EditableCardComponent\n  ],\n  templateUrl: './subtopics.component.html',\n  styleUrls: ['./subtopics.component.css']\n})\nexport class SubtopicsComponent implements OnInit {\n  topicId!: number;// holt sich die topic-id aus der url\n  themengebietName = '';// name vom themengebiet, wird später gesetzt\n  unterthemen$ = new BehaviorSubject([]); // stream mit allen unterthemen\n  activeMenuId: number | null = null; // welche karte hat grad menü offen?\n\n  editingSubtopicId: number | null = null; // id vom unterthema im edit-mode\n  editedSubtopicName = '';// temporärer speicher für neuen namen\n  editedSubtopicDescription = '';// und beschreibung\n\n  searchQuery = '';// suchbegriff fürs filter-pipe\n  sortCriteria = 'id-asc';// sortierung, standard ist id-aufsteigend\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: GetDataService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    // topic-id aus param holen, fallback auf 0\n    const tid = this.route.snapshot.paramMap.get('topicId') || '0';\n    this.topicId = +tid;\n\n    // lade parallel topics und subs\n    forkJoin({\n      topics: this.service.getTopics(),\n      subs:   this.service.getSubtopics(this.topicId)\n    }).pipe(\n      map(({ topics, subs }) => {\n        // such das aktuelle topic um an den namen zu kommen\n        const topic = topics.find(t => t.id === this.topicId);\n        this.themengebietName = topic?.name || '';\n        return subs; // unterthemen weitergeben\n      }),\n      catchError(() => of([] as ISubtopic[])) // falls fehler, leeres array\n    ).subscribe(subs => this.unterthemen$.next(subs));\n  }\n\n  updateSortOption(e: Event): void {\n    // krieg neuen wert vom select\n    this.sortCriteria = (e.target as HTMLSelectElement).value;\n  }\n\n  closeMenu(): void {\n    // klick ausserhalb schließt menü\n    this.activeMenuId = null;\n  }\n\n  navigateToUnterthema(id: number, e: MouseEvent): void {\n    // wenn button/input geklickt wurde, nix tun\n    if (['BUTTON','INPUT','TEXTAREA'].includes((e.target as HTMLElement).tagName)) return;\n    // sonst navigier zum unterthema\n    this.router.navigate(['/themengebiet', this.topicId, id]);\n  }\n\n  addSubtopicHandler({ name, description }: { name: string; description: string }): void {\n    // neues unterthema anlegen\n    this.service.addSubtopic(this.topicId, name, description)\n      .subscribe({\n        next: created => {\n          // ins array appenden\n          this.unterthemen$.next([...this.unterthemen$.value, created]);\n        },\n        error: err => console.error('oops, fehler beim hinzufügen:', err)\n      });\n  }\n\n  startEditing(sub: ISubtopic, e: MouseEvent): void {\n    // edit-mode starten, werte reinladen\n    e.stopPropagation();\n    this.editingSubtopicId = sub.id;\n    this.editedSubtopicName = sub.name;\n    this.editedSubtopicDescription = sub.description || '';\n  }\n\n  saveSubtopic(): void {\n    if (this.editingSubtopicId == null) return;\n    // update auf server\n    this.service.updateSubtopic(\n      this.topicId,\n      this.editingSubtopicId,\n      {\n        name: this.editedSubtopicName.trim(),\n        description: this.editedSubtopicDescription.trim()\n      }\n    ).subscribe({\n      next: updated => {\n        // im stream ersetzen\n        this.unterthemen$.next(\n          this.unterthemen$.value.map(s =>\n            s.id === this.editingSubtopicId ? updated : s\n          )\n        );\n        this.editingSubtopicId = null;\n        this.activeMenuId = null;\n      },\n      error: err => console.error('fehler beim speichern:', err)\n    });\n  }\n\n  cancelEditing(): void {\n    // edit-mode verlassen\n    this.editingSubtopicId = null;\n    this.activeMenuId = null;\n  }\n\n  toggleMenu(id: number, e: MouseEvent): void {\n    // menü umschalten\n    e.stopPropagation();\n    this.activeMenuId = this.activeMenuId === id ? null : id;\n  }\n\n  loeschen(subtopicId: number, e: MouseEvent): void {\n    // unterthema + flashcards löschen\n    e.stopPropagation();\n    if (!confirm('wirklich löschen?')) return;\n\n    this.service.getFlashcards(this.topicId, subtopicId).pipe(\n      switchMap(cards => {\n        const calls = cards.map(c => this.service.deleteFlashcard(this.topicId, subtopicId, c.id));\n        return calls.length ? forkJoin(calls) : of(null);\n      }),\n      switchMap(() => this.service.deleteSubtopic(this.topicId, subtopicId)),\n      map(() => {\n        // aus liste entfernen\n        this.unterthemen$.next(this.unterthemen$.value.filter(s => s.id !== subtopicId));\n      })\n    ).subscribe({\n      error: err => console.error('fehler beim löschen:', err)\n    });\n  }\n\n  goBack(): void {\n    // zurück zur startseite\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    ⬅ Zurück\n    {{ themengebietName }}\n    Unterthemen:\n\n    \n    \n      \n        🔍 Suche:\n        \n      \n      \n        📌 Sortieren nach:\n        \n          ID (aufsteigend)\n          ID (absteigend)\n          Alphabetisch (A → Z)\n          Alphabetisch (Z → A)\n        \n      \n    \n\n    \n    \n      \n\n      \n        \n          \n          \n            {{ sub.name }}\n            {{ sub.description }}\n          \n\n          \n          \n            Neuer Name:\n            \n            Beue Beschreibung:\n            \n            \n              💾 Speichern\n              ❌ Abbrechen\n            \n          \n\n          \n          \n            ✏️ Bearbeiten\n            🗑️ Löschen\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./subtopics.component.css\n                \n                .unterthemen-page {\n  font-family: arial, sans-serif;\n  padding: 1rem;\n  padding-top: 7rem; \n  background-color: var(--bg-color);\n  color: var(--text-color);\n  min-height: 100vh;\n}\n\n.unterthemen-content {\n  /* karte für inhalt */\n  background-color: var(--card-bg);\n  border-radius: 6px;\n  padding: 1.5rem;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n}\n\n/* such- und sort-bereich */\n.search-filter-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 1rem;\n  padding: 0.8rem;\n  background: var(--card-bg);\n  border-radius: 6px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.filter-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.3rem;\n}\n\ninput,\nselect {\n  padding: 8px;\n  font-size: 0.9rem;\n  border: 1px solid var(--card-border);\n  border-radius: 4px;\n  background-color: var(--card-bg);\n  color: var(--text-color);\n  transition: all 0.2s;\n}\n\ninput:focus,\nselect:focus {\n  border-color: #007bff;\n  outline: none;\n  box-shadow: 0 0 4px rgba(0, 123, 255, 0.4);\n}\n\n/* grid layout für unterthemen + add-item */\n.unterthemen-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        ⬅ Zurück    {{ themengebietName }}    Unterthemen:                      🔍 Suche:                            📌 Sortieren nach:                  ID (aufsteigend)          ID (absteigend)          Alphabetisch (A → Z)          Alphabetisch (Z → A)                                                                              {{ sub.name }}            {{ sub.description }}                                          Neuer Name:                        Beue Beschreibung:                                      💾 Speichern              ❌ Abbrechen                                                      ✏️ Bearbeiten            🗑️ Löschen                              '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubtopicsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToDoFlashcardComponent.html":{"url":"components/ToDoFlashcardComponent.html","title":"component - ToDoFlashcardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToDoFlashcardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/to-do-flashcard/to-do-flashcard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-to-do-flashcard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./to-do-flashcard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./to-do-flashcard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                newTodo\n                            \n                            \n                                todos\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                loadTodos\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleDone\n                            \n                            \n                                togglePopup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoService: ToDoService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoService\n                                                  \n                                                        \n                                                                        ToDoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(todo: Todo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                todo\n                                            \n                                                            Todo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTodos\n                        \n                    \n                \n            \n            \n                \nloadTodos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDone\n                        \n                    \n                \n            \n            \n                \ntoggleDone(todo: Todo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                todo\n                                            \n                                                            Todo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePopup\n                        \n                    \n                \n            \n            \n                \ntogglePopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newTodo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/to-do-flashcard/to-do-flashcard.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n// Import von eigenem ToDo-Service (enthält Logik und Datenstruktur)\nimport { ToDoService, Todo } from '../../core/services/toDo/to-do.service'; \n\n// AuthService, um Login-Status abzufragen\nimport { AuthService } from '../../core/services/auth/auth.service';\n\n// Deklariert die Komponente und ihre Metadaten\n@Component({\n  selector: 'app-to-do-flashcard', // HTML-Tag der Komponente\n  templateUrl: './to-do-flashcard.component.html', // Template-Pfad\n  styleUrls: ['./to-do-flashcard.component.css'], // Styles\n  standalone: true, // Wird als Standalone-Komponente verwendet\n  imports: [FormsModule, CommonModule], // Notwendige Angular-Module\n})\nexport class ToDoFlashcardComponent implements OnInit {\n  // Liste aller ToDos\n  todos: Todo[] = [];\n\n  // Input-Feld für neues ToDo\n  newTodo: string = '';\n\n  // Sichtbarkeit des ToDo-Popups\n  visible: boolean = false;\n\n  // Konstruktor bekommt den ToDo-Service und den AuthService\n  constructor(\n    private todoService: ToDoService,\n    public authService: AuthService // public, damit im Template nutzbar\n  ) {}\n\n  // Beim Laden der Komponente werden vorhandene ToDos geladen\n  ngOnInit() {\n    this.loadTodos();\n  }\n\n  // Lädt die ToDos vom Server\n  loadTodos() {\n    this.todoService.getTodos().subscribe({\n      next: todos => this.todos = todos, // Bei Erfolg: Liste setzen\n      error: err => console.error('Fehler beim Laden der Todos', err), // Bei Fehler: Log\n    });\n  }\n\n  // Öffnet oder schließt das ToDo-Popup\n  togglePopup() {\n    this.visible = !this.visible;\n  }\n\n  // Fügt ein neues ToDo hinzu (wenn das Eingabefeld nicht leer ist)\n  addTodo() {\n    if (!this.newTodo.trim()) return; // Kein leeres ToDo anlegen\n    this.todoService.addTodo(this.newTodo.trim()).subscribe({\n      next: todo => {\n        this.todos.push(todo); // Neues ToDo zur Liste hinzufügen\n        this.newTodo = ''; // Eingabe zurücksetzen\n      },\n      error: err => console.error('Fehler beim Hinzufügen', err),\n    });\n  }\n\n  // Wechselt den Status eines ToDos zwischen erledigt und offen\n  toggleDone(todo: Todo) {\n    this.todoService.toggleDone(todo.id).subscribe({\n      next: updated => todo.done = updated.done, // Status im UI aktualisieren\n      error: err => console.error('Fehler beim Umschalten', err),\n    });\n  }\n\n  // Löscht ein ToDo aus der Liste\n  deleteTodo(todo: Todo) {\n    this.todoService.deleteTodo(todo.id).subscribe({\n      next: () => this.todos = this.todos.filter(t => t.id !== todo.id), // Liste im UI aktualisieren\n      error: err => console.error('Fehler beim Löschen', err),\n    });\n  }\n}\n    \n\n    \n        \n\n  To-Do\n\n\n\n\n  \n  \n  ×\n\n  Meine To-Dos\n\n  \n  \n\n  \n  Erstellen\n\n  \n    \n    \n      \n      \n      \n        &#10003; \n      \n\n      \n      {{ todo.text }}\n\n      \n      \n        Löschen\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./to-do-flashcard.component.css\n                \n                /* Button oben in der Navigation – transparent, leichtes Hover-Verhalten */\n.nav-button {\n  background: transparent;\n  border: none;\n  font-size: 0.9rem;\n  font-weight: bold;\n  cursor: pointer;\n  color: var(--text-color, #1a1a1a);\n  transition: color 0.3s ease;\n  padding: 0.6rem 0.6rem;\n  border-radius: 4px;\n}\n\n/* Farbe des Buttons beim Darüberfahren */\n.nav-button:hover {\n  color: #007bff;\n}\n\n/* Kleiner Klick-Effekt beim Drücken */\n.nav-button:active {\n  transform: scale(0.97);\n}\n\n/* Popup für die ToDo-Liste – fest positioniert, abgerundet, mit Schatten */\n.todo-popup {\n  position: fixed;\n  top: 85px;\n  right: 1rem;\n  max-width: 300px;\n  width: 90vw;\n  z-index: 1000;\n  background-color: var(--header-bg, #ffffff);\n  box-shadow: 0 2px 8px var(--header-shadow, rgba(0, 0, 0, 0.1));\n  color: var(--text-color, #1a1a1a);\n  transition: all 0.3s ease-in-out;\n  padding: 1.5rem 1.5rem;\n  border-radius: 8px;\n  box-sizing: border-box;\n  overflow-wrap: break-word;\n  max-height: 70vh;\n  overflow-y: auto;\n  border: 1px solid black;\n}\n\n/* Kreis für Checkbox – klickbar, visuelles Feedback */\n.check-circle {\n  width: 20px;\n  height: 20px;\n  border: 1px solid black;\n  border-radius: 50%;\n  background: white;\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 0.5rem;\n  font-size: 18px;\n  color: #007bff;\n  user-select: none;\n  padding: 0;\n}\n\n/* Leichtes Blau beim Hover über Checkbox */\n.check-circle:hover {\n  background-color: #e6f0ff;\n}\n\n/* Durchgestrichen + grau = erledigte Aufgabe */\n.done {\n  text-decoration: line-through;\n  color: gray;\n}\n\n/* Roter Button zum Löschen einer Aufgabe */\n.delete-button {\n  margin-left: 0.5rem;\n  background-color: transparent;\n  border: none;\n  color: red;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n/* Farbe dunkler beim Hover */\n.delete-button:hover {\n  color: darkred;\n}\n\n/* Schließen-Button oben rechts im Popup */\n.close-button {\n  position: absolute;\n  top: 0.5rem;\n  right: 0.7rem;\n  background: transparent;\n  border: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  color: var(--text-color, #1a1a1a);\n  transition: color 0.2s ease;\n}\n\n/* Schließen-Button färbt sich blau beim Hover */\n.close-button:hover {\n  color: #007bff;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  To-Do      ×  Meine To-Dos        Erstellen                                    ✓                   {{ todo.text }}                    Löschen                  '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToDoFlashcardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToDoService.html":{"url":"injectables/ToDoService.html","title":"injectable - ToDoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToDoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/toDo/to-do.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                getTodos\n                            \n                            \n                                toggleDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/toDo/to-do.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toDo/to-do.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toDo/to-do.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodos\n                        \n                    \n                \n            \n            \n                \ngetTodos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toDo/to-do.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDone\n                        \n                    \n                \n            \n            \n                \ntoggleDone(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toDo/to-do.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/todos`\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/toDo/to-do.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\n\nexport interface Todo {\n  id: number;\n  text: string;\n  done: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToDoService {\n  private readonly baseUrl = `${environment.apiUrl}/todos`;\n\n  constructor(private http: HttpClient) {}\n\n  getTodos(): Observable {\n    return this.http.get(this.baseUrl, { withCredentials: true });\n  }\n\n  addTodo(text: string): Observable {\n    return this.http.post(\n      this.baseUrl,\n      { text },\n      { withCredentials: true }\n    );\n  }\n\n  toggleDone(id: number): Observable {\n    return this.http.patch(\n      `${this.baseUrl}/${id}/toggle`,\n      {},\n      { withCredentials: true }\n    );\n  }\n\n  deleteTodo(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`, {\n      withCredentials: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/toDo/to-do.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            done\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        done\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        done:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\n\nexport interface Todo {\n  id: number;\n  text: string;\n  done: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToDoService {\n  private readonly baseUrl = `${environment.apiUrl}/todos`;\n\n  constructor(private http: HttpClient) {}\n\n  getTodos(): Observable {\n    return this.http.get(this.baseUrl, { withCredentials: true });\n  }\n\n  addTodo(text: string): Observable {\n    return this.http.post(\n      this.baseUrl,\n      { text },\n      { withCredentials: true }\n    );\n  }\n\n  toggleDone(id: number): Observable {\n    return this.http.patch(\n      `${this.baseUrl}/${id}/toggle`,\n      {},\n      { withCredentials: true }\n    );\n  }\n\n  deleteTodo(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`, {\n      withCredentials: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopicsComponent.html":{"url":"components/TopicsComponent.html","title":"component - TopicsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopicsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/topics/topics.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topics\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                HeaderComponent\n                            SearchSortPipe\n                                AddItemComponent\n                                EditableCardComponent\n                \n            \n\n            \n                styleUrls\n                ./topics.component.css\n            \n\n\n\n            \n                templateUrl\n                ./topics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMenuId\n                            \n                            \n                                editedTopicDescription\n                            \n                            \n                                editedTopicName\n                            \n                            \n                                editingTopicId\n                            \n                            \n                                filteredTopics$\n                            \n                            \n                                hoveredId\n                            \n                            \n                                isAddingTopic\n                            \n                            \n                                    Private\n                                reloadTrigger$\n                            \n                            \n                                searchQuery\n                            \n                            \n                                sortCriteria\n                            \n                            \n                                topics$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTopicHandler\n                            \n                            \n                                cancelEditing\n                            \n                            \n                                closeMenu\n                            \n                            \n                                deleteTopic\n                            \n                            \n                                navigateToTopic\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveTopic\n                            \n                            \n                                startEditing\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                updateSearchQuery\n                            \n                            \n                                updateSortCriteria\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themenService: GetDataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/topics/topics.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themenService\n                                                  \n                                                        \n                                                                        GetDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTopicHandler\n                        \n                    \n                \n            \n            \n                \naddTopicHandler(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEditing\n                        \n                    \n                \n            \n            \n                \ncancelEditing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTopic\n                        \n                    \n                \n            \n            \n                \ndeleteTopic(id: number, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToTopic\n                        \n                    \n                \n            \n            \n                \nnavigateToTopic(id: number, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTopic\n                        \n                    \n                \n            \n            \n                \nsaveTopic()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startEditing\n                        \n                    \n                \n            \n            \n                \nstartEditing(topic: ITopic, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topic\n                                            \n                                                            ITopic\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu(id: number, e: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSearchQuery\n                        \n                    \n                \n            \n            \n                \nupdateSearchQuery(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSortCriteria\n                        \n                    \n                \n            \n            \n                \nupdateSortCriteria(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/topics/topics.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeMenuId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedTopicDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedTopicName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingTopicId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredTopics$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoveredId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddingTopic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reloadTrigger$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortCriteria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name-asc'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topics$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/topics/topics.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderComponent } from '../../shared/components/header/header.component';\nimport { SearchSortPipe } from '../../shared/components/search-sort-pipe/search-sort.pipe';\nimport { AddItemComponent } from '../../shared/components/add-item/add-item.component';\nimport { EditableCardComponent } from '../../shared/components/editable-card/editable-card.component';\nimport { Observable, Subject, of } from 'rxjs';\nimport { catchError, startWith, switchMap, shareReplay, map } from 'rxjs/operators';\nimport { ITopic } from '../../core/models/itopic';\nimport { GetDataService } from '../../core/services/getDataServices/get-data.service';\n\n@Component({\n  selector: 'app-topics',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    HeaderComponent,\n    SearchSortPipe,\n    AddItemComponent,\n    EditableCardComponent\n  ],\n  templateUrl: './topics.component.html',\n  styleUrls: ['./topics.component.css']\n})\n\nexport class TopicsComponent implements OnInit {\n  private reloadTrigger$ = new Subject(); // trigger zum neu laden wird gleich gestartet\n  topics$!: Observable;// stream mit allen topics\n  filteredTopics$!: Observable;// wird später zum filtern benutzt\n\n  hoveredId: number | null = null;// id über die grad gehovt wird (für styling)\n  activeMenuId: number | null = null;// welches menü ist offen?\n\n  editingTopicId: number | null = null;// id vom topic das grad editiert wird\n  editedTopicName = '';// temporärer name beim bearbeiten\n  editedTopicDescription = '';// und description\n\n  searchQuery = '';// text aus der suche\n  sortCriteria = 'name-asc';// wie sortiert wird (name aufsteigend)\n  isAddingTopic = false;// flag, wenn grad neues topic angelegt wird\n\n  constructor(\n    private themenService: GetDataService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    // topics$ stream aufsetzen, lädt data und cached mit shareReplay\n    this.topics$ = this.reloadTrigger$.pipe(\n      startWith(void 0), // direkt beim start triggern\n      switchMap(() =>\n        this.themenService.getTopics().pipe(\n          catchError(() => of([] as ITopic[])) // falls fehler, leeres array\n        )\n      ),\n      shareReplay(1) // letzte liste immer wiederverwenden\n    );\n\n    // filteredTopics$ ist gleich topics$, nur sicher kein null\n    this.filteredTopics$ = this.topics$.pipe(\n      map(items => items ?? [])\n    );\n  }\n\n  updateSearchQuery(e: Event): void {\n    // wenn user tippt, update die suche\n    this.searchQuery = (e.target as HTMLInputElement).value;\n  }\n\n  updateSortCriteria(e: Event): void {\n    // sort-wechsel verarbeiten\n    this.sortCriteria = (e.target as HTMLSelectElement).value;\n  }\n\n  navigateToTopic(id: number, e: MouseEvent): void {\n    // nur navigieren, wenn nicht gerade button oder input geklickt wurde\n    if (!['BUTTON','INPUT','TEXTAREA'].includes((e.target as HTMLElement).tagName)) {\n      this.router.navigate(['/themengebiet', id]);\n    }\n  }\n\n  toggleMenu(id: number, e: MouseEvent): void {\n    // menü-toggle, klick nicht nach oben leiten\n    e.stopPropagation();\n    this.activeMenuId = this.activeMenuId === id ? null : id;\n  }\n\n  closeMenu(): void {\n    // menü schließen\n    this.activeMenuId = null;\n  }\n\n  startEditing(topic: ITopic, e: MouseEvent): void {\n    // in den edit-mode wechseln\n    e.stopPropagation();\n    this.editingTopicId = topic.id;\n    this.editedTopicName = topic.name;\n    this.editedTopicDescription = topic.description || '';\n  }\n\n  saveTopic(): void {\n    // wenn edit active, speichern und neu laden\n    if (this.editingTopicId == null) return;\n    this.themenService.updateTopic(\n      this.editingTopicId,\n      {\n        name: this.editedTopicName.trim(),\n        description: this.editedTopicDescription.trim()\n      }\n    ).subscribe({\n      next: () => {\n        this.reloadTrigger$.next(); // neu triggern\n        this.editingTopicId = null;\n      },\n      error: err => console.error('❌ fehler beim speichern:', err)\n    });\n  }\n\n  deleteTopic(id: number, e: MouseEvent): void {\n    // topic löschen nach bestätigung\n    e.stopPropagation();\n    if (!confirm('willst du das thema wirklich löschen?')) return;\n    this.themenService.deleteTopic(id).subscribe({\n      next: () => {\n        this.activeMenuId = null;\n        this.reloadTrigger$.next(); // neu laden\n      },\n      error: err => console.error('❌ fehler beim löschen:', err)\n    });\n  }\n\n  addTopicHandler({ name, description }: { name: string; description: string }) {\n    // neues topic erstellen\n    this.isAddingTopic = true;\n    this.themenService.addTopic(name, description).subscribe({\n      next: () => this.reloadTrigger$.next(),\n      error: err => console.error('❌ fehler beim anlegen:', err),\n      complete: () => this.isAddingTopic = false\n    });\n  }\n\n  cancelEditing(): void {\n    // edit-mode verlassen ohne zu speichern\n    this.editingTopicId = null;\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    Themenbereiche:\n\n    \n    \n      \n        🔍 Suche:\n        \n      \n      \n        📌 Sortieren nach:\n        \n          Name (A → Z)\n          Name (Z → A)\n          ID (↑)\n          ID (↓)\n        \n      \n    \n\n    \n    \n      \n      \n\n      \n      \n        \n        \n          \n            \n            \n\n            \n            \n              {{ topic.name }}\n              {{ topic.description }}\n            \n\n            \n            \n              \n              \n              \n                \n                💾 Speichern\n                \n                ❌ Abbrechen\n              \n            \n\n            \n            \n              ✏️ Bearbeiten\n              🗑️ Löschen\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./topics.component.css\n                \n                .themengebiete {\n  font-family: arial, sans-serif;\n  padding: 1rem;\n  padding-top: 7rem;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n  min-height: 100vh;\n}\n\n/* kasten für die topics-liste, rundungen und schatten */\n.topics {\n  background-color: var(--card-bg);\n  border-radius: 6px;\n  padding: 1.5rem;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n\n  /* titel im topics-block */\n  h2 {\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n}\n\n/* suche+sort container */\n.search-filter-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 1rem;\n  padding: 0.8rem;\n  background: var(--card-bg);\n  border-radius: 6px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n  /* gruppen für label+feld */\n  .filter-group {\n    display: flex;\n    flex-direction: column;\n    gap: 0.3rem;\n  }\n\n  /* styling für eingabe und select */\n  input,\n  select {\n    padding: 8px;\n    font-size: 0.9rem;\n    border: 1px solid var(--card-border);\n    border-radius: 4px;\n    background-color: var(--card-bg);\n    color: var(--text-color);\n    transition: all 0.2s;\n\n    /* wenn fokus drauf ist */\n    &:focus {\n      border-color: #007bff;\n      outline: none;\n      box-shadow: 0 0 4px rgba(0, 123, 255, 0.4);\n    }\n  }\n}\n\n/* grid-layout für topics-karten + add-item */\n.topic-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px,1fr));\n  gap: 1.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Themenbereiche:                      🔍 Suche:                            📌 Sortieren nach:                  Name (A → Z)          Name (Z → A)          ID (↑)          ID (↓)                                                                                                                                          {{ topic.name }}              {{ topic.description }}                                                                                                              💾 Speichern                                ❌ Abbrechen                                                                ✏️ Bearbeiten              🗑️ Löschen                                          '\n    var COMPONENTS = [{'name': 'AddItemComponent', 'selector': 'app-add-item'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditableCardComponent', 'selector': 'app-editable-card'},{'name': 'FlashcardPreviewComponent', 'selector': 'app-flashcard-preview'},{'name': 'FlashcardsListComponent', 'selector': 'app-flashcards-list'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SubtopicsComponent', 'selector': 'app-subtopics'},{'name': 'ToDoFlashcardComponent', 'selector': 'app-to-do-flashcard'},{'name': 'TopicsComponent', 'selector': 'app-topics'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopicsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeightedRandomSelectionService.html":{"url":"injectables/WeightedRandomSelectionService.html","title":"injectable - WeightedRandomSelectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WeightedRandomSelectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/Selection/weighted-random-selection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentPosition\n                            \n                            \n                                    Private\n                                flashcards\n                            \n                            \n                                    Private\n                                history\n                            \n                            \n                                    Private\n                                lastReviewed\n                            \n                            \n                                    Private\n                                mode\n                            \n                            \n                                    Private\n                                remainingIndices\n                            \n                            \n                                    Private\n                                weights\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyDecay\n                            \n                            \n                                getHistory\n                            \n                            \n                                    Private\n                                getWeightForProgress\n                            \n                            \n                                initialize\n                            \n                            \n                                nextCard\n                            \n                            \n                                previousCard\n                            \n                            \n                                reset\n                            \n                            \n                                    Private\n                                resetRemaining\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyDecay\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyDecay(card: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getWeightForProgress\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWeightForProgress(progress: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                progress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(fc: T[], mode: \"infinite\" | \"limited\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                fc\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                        \"infinite\" | \"limited\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'infinite'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextCard\n                        \n                    \n                \n            \n            \n                \nnextCard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousCard\n                        \n                    \n                \n            \n            \n                \npreviousCard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetRemaining\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetRemaining()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPosition\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flashcards\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastReviewed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"infinite\" | \"limited\"\n\n                    \n                \n                \n                    \n                        Default value : 'infinite'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        remainingIndices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        weights\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/Selection/weighted-random-selection.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IFlashcard } from '../../models/iflashcard';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeightedRandomSelectionService {\n  private flashcards: T[] = [];\n  private weights: number[] = [];\n  private history: T[] = [];\n  private remainingIndices: number[] = [];\n  private currentPosition = -1;\n  private mode: 'infinite' | 'limited' = 'infinite';\n  private lastReviewed: Record = {};\n\n  initialize(fc: T[], mode: 'infinite' | 'limited' = 'infinite'): void {\n    this.flashcards = fc;\n    this.mode = mode;\n    this.history = [];\n    this.currentPosition = -1;\n    this.weights = fc.map(c => this.getWeightForProgress(c.learningProgress));\n    const now = Date.now();\n    this.lastReviewed = {};\n    fc.forEach(c => this.lastReviewed[c.id] = now);\n    this.resetRemaining();\n  }\n\n  private getWeightForProgress(progress: number): number {\n    switch (progress) {\n      case 0: return 0.8;\n      case 1: return 0.6;\n      case 2: return 0.5;\n      case 3: return 0.4;\n      case 4: return 0.3;\n      case 5: return 0.2;\n      case 6: return 0.1;\n      default: return 0;\n    }\n  }\n\n  private applyDecay(card: T): void {\n    if (card.learningProgress === 6) {\n      const last = this.lastReviewed[card.id] || 0;\n      if (Date.now() - last > 14 * 24 * 60 * 60 * 1000) {\n        card.learningProgress = 3;\n        const idx = this.flashcards.indexOf(card);\n        if (idx >= 0) this.weights[idx] = this.getWeightForProgress(3);\n      }\n    }\n  }\n\n  private resetRemaining(): void {\n    this.remainingIndices = this.mode === 'limited'\n      ? this.flashcards.map((_, i) => i).filter(i => this.flashcards[i].learningProgress  i);\n  }\n\n  nextCard(): T | null {\n    if (this.currentPosition  this.applyDecay(c));\n    const total = this.remainingIndices.reduce((s, i) => s + this.weights[i], 0);\n    let r = Math.random() * total;\n\n    for (let i = 0; i  0) {\n      this.currentPosition--;\n      return this.history[this.currentPosition];\n    }\n    return null;\n  }\n\n  getHistory(): T[] {\n    return [...this.history];\n  }\n\n  reset(): void {\n    this.history = [];\n    this.currentPosition = -1;\n    this.resetRemaining();\n  }\n}\n\n\n  /*\n  flashcards: T[] = [];\n  weights: number[] = [];\n  history: T[] = [];\n  remainingIndices: number[] = [];\n  currentPosition: number = -1;\n\n  getWeightForProgress(progress: number): number {\n    switch(progress) {\n      case 0: return 6;\n      case 1: return 5;\n      case 2: return 4;\n      case 3: return 2;\n      case 4: return 1;\n      case 5: return 0.5;\n      case 6: return 0;\n      default: return 0;\n    }\n  }\n\n  initialize(fc: T[]): void {\n    this.flashcards = fc;\n    console.log('Flashcards:', this.flashcards);\n    this.weights = fc.map(card => \n      this.getWeightForProgress(card.learningProgress)\n    );\n    console.log('Weights:', this.weights);\n    this.remainingIndices = Array.from({ length: fc.length }, (_, i) => i);\n    this.history = [];\n  }\n\n  nextCard(): IFlashcard | null {\n    if (this.currentPosition  sum + this.weights[idx], 0);\n    let random = Math.random() * totalWeight;\n\n    for (let i = 0; i  0) {\n      // Move back in history\n      this.currentPosition--;\n      return this.history[this.currentPosition];\n    }\n    return null; // No previous card available\n  }\n  \n  reset(): void {\n    this.remainingIndices = Array.from({ length: this.flashcards.length }, (_, i) => i);\n    this.history = [];\n  }\n\n  getHistory(): IFlashcard[] {\n    return [...this.history];\n  }\n}\n*/\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/iflashcard.ts\n            \n            interface\n            IFlashcard\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/isubtopic.ts\n            \n            interface\n            ISubtopic\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/itopic.ts\n            \n            interface\n            ITopic\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/iuserdata.ts\n            \n            interface\n            IUserData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/Selection/weighted-random-selection.service.ts\n            \n            injectable\n            WeightedRandomSelectionService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/auth/auth.service.ts\n            \n            interface\n            Credentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/auth/auth.service.ts\n            \n            interface\n            RegisterData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/authguard/authguard.service.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/dark-modeServices/dark-mode.service.ts\n            \n            injectable\n            DarkModeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/getDataServices/get-data.service.ts\n            \n            injectable\n            GetDataService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/services/toDo/to-do.service.ts\n            \n            injectable\n            ToDoService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/toDo/to-do.service.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/auth/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/flashcard-preview/flashcard-preview.component.ts\n            \n            component\n            FlashcardPreviewComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/features/flashcards-list/flashcards-list.component.ts\n            \n            component\n            FlashcardsListComponent\n            \n                16 %\n                (4/25)\n            \n        \n        \n            \n                \n                src/app/features/info/info.component.ts\n            \n            component\n            InfoComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/subtopics/subtopics.component.ts\n            \n            component\n            SubtopicsComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/features/to-do-flashcard/to-do-flashcard.component.ts\n            \n            component\n            ToDoFlashcardComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/features/topics/topics.component.ts\n            \n            component\n            TopicsComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/shared/components/add-item/add-item.component.ts\n            \n            component\n            AddItemComponent\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                src/app/shared/components/editable-card/editable-card.component.ts\n            \n            component\n            EditableCardComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/components/search-sort-pipe/search-sort.pipe.ts\n            \n            pipe\n            SearchSortPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.13\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.13\n        \n            chart.js : ^4.4.9\n        \n            node : ^23.9.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRun npm install to install all dependenciesmaybe its possible needed to also run \"npm install json-server concurrently --save-dev\"\nthen just run \"npm start\" to start the json server on localhost/3000 and build and serve the ng app (start scipt in package.json)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideHttpClient()]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'http://localhost:3100/api', // URL für Backend\n    auth: {\n      tokenStorageKey: 'auth_token', // Speicher-Schlüssel für  Token\n    },\n  }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
